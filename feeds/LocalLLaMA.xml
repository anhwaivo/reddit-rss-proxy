<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>/r/LocalLLaMA/.rss</id>
  <title>LocalLlama</title>
  <updated>2025-05-09T11:34:41+00:00</updated>
  <link href="https://old.reddit.com/r/LocalLLaMA/" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <icon>https://www.redditstatic.com/icon.png/</icon>
  <subtitle>Subreddit to discuss about Llama, the large language model created by Meta AI.</subtitle>
  <entry>
    <id>t3_1khys4u</id>
    <title>Qwen3 Llama.cpp performance for 7900 XTX &amp; 7900x3D (various configs)</title>
    <updated>2025-05-08T19:24:07+00:00</updated>
    <author>
      <name>/u/1ncehost</name>
      <uri>https://old.reddit.com/user/1ncehost</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;ul&gt; &lt;li&gt;Found that IQ4_XS is the most performant 4-bit quant, ROCm the most performant runner, and FA/KV quants have minimal performance impact&lt;/li&gt; &lt;li&gt;ROCm is currently over 50% faster than Vulkan, and Vulkan has much less efficient FA than ROCm&lt;/li&gt; &lt;li&gt;CPU performance is surprisingly good&lt;/li&gt; &lt;li&gt;Evironment is LMStudio 0.3.15, llama.cpp 1.30.1, Ubuntu 24.04, ROCm 6.3.5&lt;/li&gt; &lt;li&gt;CPU memory is dual channel DDR5-6000&lt;/li&gt; &lt;/ul&gt; &lt;h1&gt;Qwen3 30B A3B, IQ4_XS (Bartowski), 32k context&lt;/h1&gt; &lt;table&gt;&lt;thead&gt; &lt;tr&gt; &lt;th align="left"&gt;Test Config&lt;/th&gt; &lt;th align="left"&gt;Overall tok/sec (reported by LMStudio)&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt;&lt;tbody&gt; &lt;tr&gt; &lt;td align="left"&gt;Ryzen 7900x3D, CPU&lt;/td&gt; &lt;td align="left"&gt;23.8 tok/sec&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="left"&gt;Ryzen 7900x3D, CPU, FA&lt;/td&gt; &lt;td align="left"&gt;20.3 tok/sec&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="left"&gt;Ryzen 7900x3D, CPU, FA, Q4_0 KV&lt;/td&gt; &lt;td align="left"&gt;18.6 tok/sec&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="left"&gt;Radeon 7900 XTX, ROCm&lt;/td&gt; &lt;td align="left"&gt;64.9 tok/sec&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="left"&gt;Radeon 7900 XTX, ROCm, FA&lt;/td&gt; &lt;td align="left"&gt;62.1 tok/sec&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="left"&gt;Radeon 7900 XTX, ROCm, FA, Q4_0 KV&lt;/td&gt; &lt;td align="left"&gt;62.1 tok/sec&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="left"&gt;Radeon 7900 XTX 45 layers, ROCm&lt;/td&gt; &lt;td align="left"&gt;43.1 tok/sec&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="left"&gt;Radeon 7900 XTX 45 layers, ROCm, FA&lt;/td&gt; &lt;td align="left"&gt;40.1 tok/sec&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="left"&gt;Radeon 7900 XTX 45 layers, ROCm, FA, Q4_0 KV&lt;/td&gt; &lt;td align="left"&gt;39.8 tok/sec&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="left"&gt;Radeon 7900 XTX 24 layers, ROCm&lt;/td&gt; &lt;td align="left"&gt;23.5 tok/sec&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="left"&gt;Radeon 7900 XTX, Vulkan&lt;/td&gt; &lt;td align="left"&gt;37.6 tok/sec&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="left"&gt;Radeon 7900 XTX, Vulkan, FA&lt;/td&gt; &lt;td align="left"&gt;16.8 tok/sec&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="left"&gt;Radeon 7900 XTX, Vulkan, FA, Q4_0 KV&lt;/td&gt; &lt;td align="left"&gt;17.48 tok/sec&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; &lt;h1&gt;Qwen3 30B A3B, Q4_K_S (Bartowski), 32k context&lt;/h1&gt; &lt;table&gt;&lt;thead&gt; &lt;tr&gt; &lt;th align="left"&gt;Test Config&lt;/th&gt; &lt;th align="left"&gt;Overall tok/sec (reported by LMStudio)&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt;&lt;tbody&gt; &lt;tr&gt; &lt;td align="left"&gt;Ryzen 7900x3D, CPU&lt;/td&gt; &lt;td align="left"&gt;23.0 tok/sec&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="left"&gt;Radeon 7900 XTX 45 layers, ROCm&lt;/td&gt; &lt;td align="left"&gt;37.8 tok/sec&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; &lt;h1&gt;Qwen3 30B A3B, Q4_0 (Bartowski), 32k context&lt;/h1&gt; &lt;table&gt;&lt;thead&gt; &lt;tr&gt; &lt;th align="left"&gt;Test Config&lt;/th&gt; &lt;th align="left"&gt;Overall tok/sec (reported by LMStudio)&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt;&lt;tbody&gt; &lt;tr&gt; &lt;td align="left"&gt;Ryzen 7900x3D, CPU&lt;/td&gt; &lt;td align="left"&gt;23.1 tok/sec&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="left"&gt;Radeon 7900 XTX 45 layers, ROCm&lt;/td&gt; &lt;td align="left"&gt;42.1 tok/sec&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; &lt;h1&gt;Qwen3 32B, IQ4_XS (Bartowski), 32k context&lt;/h1&gt; &lt;table&gt;&lt;thead&gt; &lt;tr&gt; &lt;th align="left"&gt;Test Config&lt;/th&gt; &lt;th align="left"&gt;Overall tok/sec (reported by LMStudio)&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt;&lt;tbody&gt; &lt;tr&gt; &lt;td align="left"&gt;Radeon 7900 XTX, ROCm, FA, Q4_0 KV&lt;/td&gt; &lt;td align="left"&gt;27.9 tok/sec&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; &lt;h1&gt;Qwen3 14B, IQ4_XS (Bartowski), 32k context&lt;/h1&gt; &lt;table&gt;&lt;thead&gt; &lt;tr&gt; &lt;th align="left"&gt;Test Config&lt;/th&gt; &lt;th align="left"&gt;Overall tok/sec (reported by LMStudio)&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt;&lt;tbody&gt; &lt;tr&gt; &lt;td align="left"&gt;Radeon 7900 XTX, ROCm&lt;/td&gt; &lt;td align="left"&gt;56.2 tok/sec&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; &lt;h1&gt;Qwen3 8B, IQ4_XS (Bartowski), 32k context&lt;/h1&gt; &lt;table&gt;&lt;thead&gt; &lt;tr&gt; &lt;th align="left"&gt;Test Config&lt;/th&gt; &lt;th align="left"&gt;Overall tok/sec (reported by LMStudio)&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt;&lt;tbody&gt; &lt;tr&gt; &lt;td align="left"&gt;Radeon 7900 XTX, ROCm&lt;/td&gt; &lt;td align="left"&gt;79.1 tok/sec&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/1ncehost"&gt; /u/1ncehost &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1khys4u/qwen3_llamacpp_performance_for_7900_xtx_7900x3d/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1khys4u/qwen3_llamacpp_performance_for_7900_xtx_7900x3d/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1khys4u/qwen3_llamacpp_performance_for_7900_xtx_7900x3d/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-08T19:24:07+00:00</published>
  </entry>
  <entry>
    <id>t3_1khq3ul</id>
    <title>Introducing the Intelligent Document Processing (IDP) Leaderboard – A Unified Benchmark for OCR, KIE, VQA, Table Extraction, and More</title>
    <updated>2025-05-08T13:27:29+00:00</updated>
    <author>
      <name>/u/SouvikMandal</name>
      <uri>https://old.reddit.com/user/SouvikMandal</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;The most comprehensive benchmark to date for evaluating document understanding capabilities of Vision-Language Models (VLMs).&lt;/p&gt; &lt;p&gt;&lt;strong&gt;What is it?&lt;/strong&gt;&lt;br /&gt; A unified evaluation suite covering 6 core IDP tasks across 16 datasets and 9,229 documents:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Key Information Extraction (KIE)&lt;/li&gt; &lt;li&gt;Visual Question Answering (VQA)&lt;/li&gt; &lt;li&gt;Optical Character Recognition (OCR)&lt;/li&gt; &lt;li&gt;Document Classification&lt;/li&gt; &lt;li&gt;Table Extraction&lt;/li&gt; &lt;li&gt;Long Document Processing (LongDocBench)&lt;/li&gt; &lt;li&gt;(Coming soon: Confidence Score Calibration)&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Each task uses multiple datasets, including real-world, synthetic, and newly annotated ones.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Highlights from the Benchmark&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Gemini 2.5 Flash leads overall&lt;/strong&gt;, but surprisingly underperforms its predecessor on OCR and classification.&lt;/li&gt; &lt;li&gt;All models struggled with long document understanding – top score was just 69.08%.&lt;/li&gt; &lt;li&gt;Table extraction remains a bottleneck — especially for long, sparse, or unstructured tables.&lt;/li&gt; &lt;li&gt;Surprisingly, GPT-4o's performance &lt;em&gt;decreased&lt;/em&gt; in the latest version (&lt;em&gt;gpt-4o-2024-11-20&lt;/em&gt;) compared to its earlier release (&lt;em&gt;gpt-4o-2024-08-06&lt;/em&gt;).&lt;/li&gt; &lt;li&gt;Token usage (and thus cost) varies dramatically across models — GPT-4o-mini was the most expensive per request due to high token usage.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;Why does this matter?&lt;/strong&gt;&lt;br /&gt; There’s currently no unified benchmark that evaluates all IDP tasks together — most leaderboards (e.g., OpenVLM, Chatbot Arena) don’t deeply assess document understanding.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Document Variety&lt;/strong&gt;&lt;br /&gt; We evaluated models on a wide range of documents: Invoices, forms, receipts, charts, tables (structured + unstructured), handwritten docs, and even diacritics texts.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Get Involved&lt;/strong&gt;&lt;br /&gt; We’re actively updating the benchmark with new models and datasets.&lt;/p&gt; &lt;p&gt;This is developed with collaboration from IIT Indore and Nanonets.&lt;/p&gt; &lt;p&gt;Leaderboard: &lt;a href="https://idp-leaderboard.org/"&gt;https://idp-leaderboard.org/&lt;/a&gt;&lt;br /&gt; Release blog: &lt;a href="https://idp-leaderboard.org/details/"&gt;https://idp-leaderboard.org/details/&lt;/a&gt;&lt;br /&gt; GithHub: &lt;a href="https://github.com/NanoNets/docext/tree/main/docext/benchmark"&gt;https://github.com/NanoNets/docext/tree/main/docext/benchmark&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Feel free to share your feedback!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/SouvikMandal"&gt; /u/SouvikMandal &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1khq3ul/introducing_the_intelligent_document_processing/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1khq3ul/introducing_the_intelligent_document_processing/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1khq3ul/introducing_the_intelligent_document_processing/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-08T13:27:29+00:00</published>
  </entry>
  <entry>
    <id>t3_1khywl9</id>
    <title>Meta new open source model (PLM)</title>
    <updated>2025-05-08T19:29:08+00:00</updated>
    <author>
      <name>/u/Tomtun_rd</name>
      <uri>https://old.reddit.com/user/Tomtun_rd</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Meta recently introduced a new vision-language understanding task, what are your thoughts on this ? Will its be able to compare other existing vision models ?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Tomtun_rd"&gt; /u/Tomtun_rd &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://ai.meta.com/blog/meta-fair-updates-perception-localization-reasoning/?utm_source=twitter&amp;amp;utm_medium=organic%20social&amp;amp;utm_content=video&amp;amp;utm_campaign=fair"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1khywl9/meta_new_open_source_model_plm/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1khywl9/meta_new_open_source_model_plm/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-08T19:29:08+00:00</published>
  </entry>
  <entry>
    <id>t3_1khv8sg</id>
    <title>Giving Voice to AI - Orpheus TTS Quantization Experiment Results</title>
    <updated>2025-05-08T17:02:07+00:00</updated>
    <author>
      <name>/u/dahara111</name>
      <uri>https://old.reddit.com/user/dahara111</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hello LocalLLaMA! Today I'd like to share the results of my experiment implementing speech synthesis capabilities in LLMs.&lt;/p&gt; &lt;p&gt;Introduction&lt;/p&gt; &lt;p&gt;In recent months, many high-quality Text-to-Speech (TTS) models have been released. For this experiment, I focused on &lt;a href="https://huggingface.co/canopylabs/orpheus-3b-0.1-ft"&gt;canopylabs/orpheus-3b-0.1-ft&lt;/a&gt;, which is based on llama3 architecture. Orpheus-3b is an LLM-based TTS system capable of natural speech with excellent vocal quality. I chose this model because llama3's ecosystem is well-developed, allowing me to leverage related tools. I specifically adopted the gguf format because it's easily deployable across various platforms. This is certainly not the end of the road, as further performance optimizations are possible using other tools/services/scripts. But Here, I'll report the results of testing various gguf quantization levels using custom scripts.&lt;/p&gt; &lt;p&gt;Performance Evaluation&lt;/p&gt; &lt;h1&gt;Evaluation Method&lt;/h1&gt; &lt;p&gt;I used the &lt;a href="https://keithito.com/LJ-Speech-Dataset/"&gt;LJ-Speech-Dataset&lt;/a&gt; for evaluation. This public domain speech dataset consists of 13,100 short audio clips of a single speaker reading passages from 7 non-fiction books.&lt;/p&gt; &lt;p&gt;Evaluation process:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;For each quantized model, 1000 randomly selected texts were synthesized into speech (though some models failed to vocalize certain samples)&lt;/li&gt; &lt;li&gt;Transcribed the speech using &lt;a href="https://huggingface.co/openai/whisper-large-v3-turbo"&gt;openai/whisper-large-v3-turbo&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Measured WER (Word Error Rate) and CER (Character Error Rate)&lt;/li&gt; &lt;li&gt;For comparison, also transcribed the original human voice from the dataset to compare error rates&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;The llama-server was launched with the following command:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;llama-server -m orpheus-3b-Q4_K_L.gguf --prio 3 -c 2048 -n -2 -fa -ngl 99 --no-webui &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Temperature and other parameters were left at their default values. Unfortunately, I haven't yet been able to identify optimal parameters. With optimal parameters, results could potentially improve further.&lt;/p&gt; &lt;h1&gt;Evaluation Results&lt;/h1&gt; &lt;p&gt;The results for each quantization level are as follows. Each model was tested with 1000 samples, but some models failed to vocalize certain samples. For models with fewer than 1000 evaluation samples, the difference represents the number of failed samples(&amp;quot;Failed&amp;quot; column in the table below).&lt;/p&gt; &lt;table&gt;&lt;thead&gt; &lt;tr&gt; &lt;th align="left"&gt;Model&lt;/th&gt; &lt;th align="left"&gt;Size&lt;/th&gt; &lt;th align="left"&gt;Samples Evaluated&lt;/th&gt; &lt;th align="left"&gt;Failed&lt;/th&gt; &lt;th align="left"&gt;Original WER&lt;/th&gt; &lt;th align="left"&gt;Original CER&lt;/th&gt; &lt;th align="left"&gt;TTS WER&lt;/th&gt; &lt;th align="left"&gt;TTS CER&lt;/th&gt; &lt;th align="left"&gt;WER Diff&lt;/th&gt; &lt;th align="left"&gt;CER Diff&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt;&lt;tbody&gt; &lt;tr&gt; &lt;td align="left"&gt;Q3_K_L&lt;/td&gt; &lt;td align="left"&gt;2.3G&lt;/td&gt; &lt;td align="left"&gt;970&lt;/td&gt; &lt;td align="left"&gt;30&lt;/td&gt; &lt;td align="left"&gt;0.0939&lt;/td&gt; &lt;td align="left"&gt;0.0236&lt;/td&gt; &lt;td align="left"&gt;0.1361&lt;/td&gt; &lt;td align="left"&gt;0.0430&lt;/td&gt; &lt;td align="left"&gt;+0.0422&lt;/td&gt; &lt;td align="left"&gt;+0.0194&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="left"&gt;Q4_K_L&lt;/td&gt; &lt;td align="left"&gt;2.6G&lt;/td&gt; &lt;td align="left"&gt;984&lt;/td&gt; &lt;td align="left"&gt;16&lt;/td&gt; &lt;td align="left"&gt;0.0942&lt;/td&gt; &lt;td align="left"&gt;0.0235&lt;/td&gt; &lt;td align="left"&gt;0.1309&lt;/td&gt; &lt;td align="left"&gt;0.0483&lt;/td&gt; &lt;td align="left"&gt;+0.0366&lt;/td&gt; &lt;td align="left"&gt;+0.0248&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="left"&gt;Q4_K-f16&lt;/td&gt; &lt;td align="left"&gt;3.4G&lt;/td&gt; &lt;td align="left"&gt;1000&lt;/td&gt; &lt;td align="left"&gt;0&lt;/td&gt; &lt;td align="left"&gt;0.0950&lt;/td&gt; &lt;td align="left"&gt;0.0236&lt;/td&gt; &lt;td align="left"&gt;0.1283&lt;/td&gt; &lt;td align="left"&gt;0.0351&lt;/td&gt; &lt;td align="left"&gt;+0.0334&lt;/td&gt; &lt;td align="left"&gt;+0.0115&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="left"&gt;Q6_K_L&lt;/td&gt; &lt;td align="left"&gt;3.2G&lt;/td&gt; &lt;td align="left"&gt;981&lt;/td&gt; &lt;td align="left"&gt;19&lt;/td&gt; &lt;td align="left"&gt;0.0944&lt;/td&gt; &lt;td align="left"&gt;0.0236&lt;/td&gt; &lt;td align="left"&gt;0.1303&lt;/td&gt; &lt;td align="left"&gt;0.0428&lt;/td&gt; &lt;td align="left"&gt;+0.0358&lt;/td&gt; &lt;td align="left"&gt;+0.0192&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="left"&gt;Q6_K-f16&lt;/td&gt; &lt;td align="left"&gt;4.0G&lt;/td&gt; &lt;td align="left"&gt;1000&lt;/td&gt; &lt;td align="left"&gt;0&lt;/td&gt; &lt;td align="left"&gt;0.0950&lt;/td&gt; &lt;td align="left"&gt;0.0236&lt;/td&gt; &lt;td align="left"&gt;0.1305&lt;/td&gt; &lt;td align="left"&gt;0.0398&lt;/td&gt; &lt;td align="left"&gt;+0.0355&lt;/td&gt; &lt;td align="left"&gt;+0.0161&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="left"&gt;Q8_0&lt;/td&gt; &lt;td align="left"&gt;3.8G&lt;/td&gt; &lt;td align="left"&gt;990&lt;/td&gt; &lt;td align="left"&gt;10&lt;/td&gt; &lt;td align="left"&gt;0.0945&lt;/td&gt; &lt;td align="left"&gt;0.0235&lt;/td&gt; &lt;td align="left"&gt;0.1298&lt;/td&gt; &lt;td align="left"&gt;0.0386&lt;/td&gt; &lt;td align="left"&gt;+0.0353&lt;/td&gt; &lt;td align="left"&gt;+0.0151&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; &lt;h1&gt;Performance Analysis&lt;/h1&gt; &lt;p&gt;While the differences between quantization levels might not seem significant at first glance, there is a trend where lower bit quantization leads to increased pronunciation failures. And f16 variant (--output-tensor-type f16 --token-embedding-type f16) appears to suppress regeneration failure. This could potentially be improved in the future with better quantization techniques or domain-specific finetuning.&lt;/p&gt; &lt;p&gt;Processing Speed (bonus)&lt;/p&gt; &lt;p&gt;CPU Test environment: AMD Ryzen 9 7940HS w/ Radeon 780M Graphics 4.00 GHz&lt;/p&gt; &lt;p&gt;The following are speed test results using the Q4_K_L model:&lt;/p&gt; &lt;h1&gt;CPU (Without Vulkan)&lt;/h1&gt; &lt;p&gt;Speed of the first sample:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;TTFB (Time To First Byte, time until the first response): 356.19ms&lt;/li&gt; &lt;li&gt;Processing speed: 8.09 tokens/second&lt;/li&gt; &lt;/ul&gt; &lt;h1&gt;CPU (With Vulkan)&lt;/h1&gt; &lt;p&gt;Sample processing speed significantly improved:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;TTFB: 281.52ms&lt;/li&gt; &lt;li&gt;Processing speed: approximately 16 tokens/second&lt;/li&gt; &lt;li&gt;About 2x speed improvement compared to without Vulkan&lt;/li&gt; &lt;/ul&gt; &lt;h1&gt;GPU (RTX 4060)&lt;/h1&gt; &lt;p&gt;Even faster processing:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;TTFB: 233.04ms&lt;/li&gt; &lt;li&gt;Processing speed: approximately 73 tokens/second&lt;/li&gt; &lt;li&gt;About 4x faster than CPU (with Vulkan) and over 9x faster than CPU (without Vulkan)&lt;/li&gt; &lt;/ul&gt; &lt;h1&gt;Conclusion&lt;/h1&gt; &lt;p&gt;From this experiment, we found that although the difference in sound quality due to quantization level is relatively small, low-bit quantization may increase pronunciation errors.&lt;/p&gt; &lt;p&gt;Processing speed varies greatly depending on the execution environment, and GPU execution is the closest to realizing real-time conversation. Research shows that for English, &lt;a href="https://arxiv.org/pdf/2404.16053"&gt;humans expect a response between -280 ms and +758 ms from the end of the utterance&lt;/a&gt;. The real-world pipeline (VAD (Voice Activity Detection) -&amp;gt; EOU (End Of Utterance) -&amp;gt; ASR (Automatic Speech Recognition) -&amp;gt; LLM -&amp;gt; TTS) is a bit more complicated, but we felt that Local LLM is approaching the area where a sufficiently natural voice conversation is possible.&lt;/p&gt; &lt;p&gt;The origin of this experiment was the idea that if a lightweight TTS model could be called by Function Call or MCP, AI would be able to speak independently. As a first step, we verified the performance of a lightweight and easily implemented quantized TTS model. The performance is very good, but real-time processing is not yet at a satisfactory level due to a bug in my script that still causes noise.&lt;/p&gt; &lt;p&gt;In the future, the balance between quality and speed may be further improved by the progress of quantization technology, finetuning, and improvement of the script.&lt;/p&gt; &lt;p&gt;The model and results used in the experiment are uploaded &lt;a href="https://huggingface.co/dahara1/orpheus-3b-0.1-ft_gguf"&gt;dahara1/orpheus-3b-0.1-ft_gguf&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;If you want to try it yourself, please do!&lt;/p&gt; &lt;p&gt;Finally, I would like to thank the contributors of canopylabs/orpheus-3b-0.1-ft, meta/llama3, ggml-org/llama.cpp, openai/whisper-large-v3-turbo, and LJ-Speech-Dataset.&lt;/p&gt; &lt;p&gt;Thank you for reading!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/dahara111"&gt; /u/dahara111 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1khv8sg/giving_voice_to_ai_orpheus_tts_quantization/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1khv8sg/giving_voice_to_ai_orpheus_tts_quantization/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1khv8sg/giving_voice_to_ai_orpheus_tts_quantization/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-08T17:02:07+00:00</published>
  </entry>
  <entry>
    <id>t3_1khpf0m</id>
    <title>Smoothie Qwen: A lightweight adjustment tool for smoothing token probabilities in the Qwen models to encourage balanced multilingual generation.</title>
    <updated>2025-05-08T12:55:52+00:00</updated>
    <author>
      <name>/u/likejazz</name>
      <uri>https://old.reddit.com/user/likejazz</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1khpf0m/smoothie_qwen_a_lightweight_adjustment_tool_for/"&gt; &lt;img alt="Smoothie Qwen: A lightweight adjustment tool for smoothing token probabilities in the Qwen models to encourage balanced multilingual generation." src="https://preview.redd.it/ctoabtdg2kze1.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=7a07c38c69823d8ec768a987766643b8ad2f4845" title="Smoothie Qwen: A lightweight adjustment tool for smoothing token probabilities in the Qwen models to encourage balanced multilingual generation." /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;&lt;strong&gt;Smoothie Qwen&lt;/strong&gt; is a lightweight adjustment tool that smooths token probabilities in Qwen models, enhancing balanced multilingual generation capabilities. We've uploaded pre-adjusted models to our &lt;a href="https://huggingface.co/collections/dnotitia/smoothie-qwen3-6811896ebb3a255de7b5b437"&gt;Smoothie Qwen Collection on 🤗 Hugging Face&lt;/a&gt; for your convenience:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Smoothie-Qwen3 Collection&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://huggingface.co/dnotitia/Smoothie-Qwen3-0.6B"&gt;dnotitia/Smoothie-Qwen3-0.6B&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://huggingface.co/dnotitia/Smoothie-Qwen3-1.7B"&gt;dnotitia/Smoothie-Qwen3-1.7B&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://huggingface.co/dnotitia/Smoothie-Qwen3-4B"&gt;dnotitia/Smoothie-Qwen3-4B&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://huggingface.co/dnotitia/Smoothie-Qwen3-8B"&gt;dnotitia/Smoothie-Qwen3-8B&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://huggingface.co/dnotitia/Smoothie-Qwen3-14B"&gt;dnotitia/Smoothie-Qwen3-14B&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://huggingface.co/dnotitia/Smoothie-Qwen3-32B"&gt;dnotitia/Smoothie-Qwen3-32B&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://huggingface.co/dnotitia/Smoothie-Qwen3-30B-A3B"&gt;dnotitia/Smoothie-Qwen3-30B-A3B&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://huggingface.co/dnotitia/Smoothie-Qwen3-235B-A22B"&gt;dnotitia/Smoothie-Qwen3-235B-A22B&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;Smoothie-Qwen2.5 Collection&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://huggingface.co/dnotitia/Smoothie-Qwen2.5-0.5B-Instruct"&gt;dnotitia/Smoothie-Qwen2.5-0.5B-Instruct&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://huggingface.co/dnotitia/Smoothie-Qwen2.5-1.5B-Instruct"&gt;dnotitia/Smoothie-Qwen2.5-1.5B-Instruct&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://huggingface.co/dnotitia/Smoothie-Qwen2.5-3B-Instruct"&gt;dnotitia/Smoothie-Qwen2.5-3B-Instruct&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://huggingface.co/dnotitia/Smoothie-Qwen2.5-7B-Instruct"&gt;dnotitia/Smoothie-Qwen2.5-7B-Instruct&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://huggingface.co/dnotitia/Smoothie-Qwen2.5-14B-Instruct"&gt;dnotitia/Smoothie-Qwen2.5-14B-Instruct&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://huggingface.co/dnotitia/Smoothie-Qwen2.5-32B-Instruct"&gt;dnotitia/Smoothie-Qwen2.5-32B-Instruct&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://huggingface.co/dnotitia/Smoothie-Qwen2.5-72B-Instruct"&gt;dnotitia/Smoothie-Qwen2.5-72B-Instruct&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;GitHub: &lt;a href="https://github.com/dnotitia/smoothie-qwen"&gt;https://github.com/dnotitia/smoothie-qwen&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/likejazz"&gt; /u/likejazz &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://i.redd.it/ctoabtdg2kze1.png"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1khpf0m/smoothie_qwen_a_lightweight_adjustment_tool_for/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1khpf0m/smoothie_qwen_a_lightweight_adjustment_tool_for/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-08T12:55:52+00:00</published>
  </entry>
  <entry>
    <id>t3_1khs277</id>
    <title>Aider benchmarks for Qwen3-235B-A22B that were posted here were apparently faked</title>
    <updated>2025-05-08T14:52:27+00:00</updated>
    <author>
      <name>/u/tjuene</name>
      <uri>https://old.reddit.com/user/tjuene</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1khs277/aider_benchmarks_for_qwen3235ba22b_that_were/"&gt; &lt;img alt="Aider benchmarks for Qwen3-235B-A22B that were posted here were apparently faked" src="https://external-preview.redd.it/yXqXdu-V1zQwQHC-lYAJfW59I54R-k04O4eLGM6BROQ.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=909d548ecf3ca2af543b4af0384879360a7594a8" title="Aider benchmarks for Qwen3-235B-A22B that were posted here were apparently faked" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/tjuene"&gt; /u/tjuene &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://github.com/Aider-AI/aider/pull/3908#issuecomment-2863328652"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1khs277/aider_benchmarks_for_qwen3235ba22b_that_were/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1khs277/aider_benchmarks_for_qwen3235ba22b_that_were/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-08T14:52:27+00:00</published>
  </entry>
  <entry>
    <id>t3_1khjrtj</id>
    <title>Building LLM Workflows - - some observations</title>
    <updated>2025-05-08T06:54:56+00:00</updated>
    <author>
      <name>/u/noellarkin</name>
      <uri>https://old.reddit.com/user/noellarkin</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Been working on some relatively complex LLM workflows for the past year (not continuously, on and off). Here are some conclusions:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;p&gt;Decomposing each task to the smallest steps and prompt chaining works far better than just using a single prompt with CoT. turning each step of the CoT into its own prompt and checking/sanitizing outputs reduces errors.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;Using XML tags to structure the system prompt, prompt etc works best (IMO better than JSON structure but YMMV)&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;You have to remind the LLM that its only job is to work as a semantic parser of sorts, to merely understand and transform the input data and NOT introduce data from its own &amp;quot;knowledge&amp;quot; into the output.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;NLTK, SpaCY, FlairNLP are often good ways to independently verify the output of an LLM (eg: check if the LLM's output has a sequence of POS tags you want etc). The great thing about these libraries is they're fast and reliable.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;ModernBERT classifiers are often just as good at LLMs if the task is small enough. Fine-tuned BERT-style classifiers are usually better than LLM for focused, narrow tasks.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;LLM-as-judge and LLM confidence scoring is extremely unreliable, especially if there's no &amp;quot;grounding&amp;quot; for how the score is to be arrived at. Scoring on vague parameters like &amp;quot;helpfulness&amp;quot; is useless - -eg: LLMs often conflate helpfulness with professional tone and length of response. Scoring has to either be grounded in multiple examples (which has its own problems - - LLMs may make the wrong inferences from example patterns), or a fine-tuned model is needed. If you're going to fine-tune for confidence scoring, might as well use a BERT model or something similar.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;In Agentic loops, the hardest part is setting up the conditions where the LLM exits the loop - - using the LLM to decide whether or not to exit is extremely unreliable (same reason as LLM-as-judge issues).&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;Performance usually degrades past 4k tokens (input context window) ... this is often only seen once you've run thousands of iterations. If you have a low error threshold, even a 5% failure rate in the pipeline is unacceptable, keeping all prompts below 4k tokens helps.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;32B models are good enough and reliable enough for most tasks, if the task is structured properly.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;Structured CoT (with headings and bullet points) is often better than unstructured &lt;code&gt;&amp;lt;thinking&amp;gt;Okay, so I must...etc&lt;/code&gt; tokens. Structured and concise CoT stays within the context window (in the prompt as well as examples), and doesn't waste output tokens.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;Self-consistency helps, but that also means running each prompt multiple times - - forces you to use smaller models and smaller prompts.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;Writing your own CoT is better than relying on a reasoning model. Reasoning models are a good way to collect different CoT paths and ideas, and then synthesize your own.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;The long-term plan is always to fine-tune everything. Start with a large API-based model and few-shot examples, and keep tweaking. Once the workflows are operational, consider creating fine-tuning datasets for some of the tasks so you can shift to a smaller local LLM or BERT. Making balanced datasets isn't easy.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;when making a dataset for fine-tuning, make it balanced by setting up a categorization system/orthogonal taxonomy so you can get complete coverage of the task. Use MECE framework.&lt;/p&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;I've probably missed many points, these were the first ones that came to mind.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/noellarkin"&gt; /u/noellarkin &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1khjrtj/building_llm_workflows_some_observations/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1khjrtj/building_llm_workflows_some_observations/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1khjrtj/building_llm_workflows_some_observations/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-08T06:54:56+00:00</published>
  </entry>
  <entry>
    <id>t3_1kicb5l</id>
    <title>please share your experiences with local "deep research"</title>
    <updated>2025-05-09T07:00:49+00:00</updated>
    <author>
      <name>/u/jacek2023</name>
      <uri>https://old.reddit.com/user/jacek2023</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I’m searching way to use &amp;quot;deep research&amp;quot; with my local LLMs. &lt;/p&gt; &lt;p&gt;I was thinking about AutoGen or CrewAI, but maybe you already have some experiences? Please share your wisdom.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/jacek2023"&gt; /u/jacek2023 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kicb5l/please_share_your_experiences_with_local_deep/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kicb5l/please_share_your_experiences_with_local_deep/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kicb5l/please_share_your_experiences_with_local_deep/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-09T07:00:49+00:00</published>
  </entry>
  <entry>
    <id>t3_1khql0u</id>
    <title>Intel to launch Arc Pro B60 graphics card with 24GB memory at Computex - VideoCardz.com</title>
    <updated>2025-05-08T13:49:27+00:00</updated>
    <author>
      <name>/u/FullstackSensei</name>
      <uri>https://old.reddit.com/user/FullstackSensei</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;No word on pricing yet.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/FullstackSensei"&gt; /u/FullstackSensei &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://videocardz.com/newz/intel-to-launch-arc-pro-b60-graphics-card-with-24gb-memory-at-computex"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1khql0u/intel_to_launch_arc_pro_b60_graphics_card_with/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1khql0u/intel_to_launch_arc_pro_b60_graphics_card_with/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-08T13:49:27+00:00</published>
  </entry>
  <entry>
    <id>t3_1khu4x0</id>
    <title>I tested Qwen 3 235b against Deepseek r1, Qwen did better on simple tasks but r1 beats in nuance</title>
    <updated>2025-05-08T16:17:27+00:00</updated>
    <author>
      <name>/u/SunilKumarDash</name>
      <uri>https://old.reddit.com/user/SunilKumarDash</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I have been using Deepseek r1 for a while, mainly for writing, and I have tried the Qwq 32b, which was plenty impressive. But the new models are a huge upgrade, though I have yet to try the 30b model. The 235b model is really impressive for the cost and size. Definitely much better than Llama 4s. &lt;/p&gt; &lt;p&gt;So, I compared the top 2 open-source models on coding, reasoning, math, and writing tasks.&lt;/p&gt; &lt;p&gt;Here's what I found out.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;1. Coding&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;For a lot of coding tasks, you wouldn't notice much difference. Both models perform on par, sometimes Qwen taking the lead. &lt;/p&gt; &lt;p&gt;&lt;strong&gt;2. Reasoning and Math&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Deepseek leads here with more nuance in the thought process. Qwen is not bad at all, gets most of the work done, but takes longer to finish tasks. It gives off the vibe of overfit at times.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;3. Writing&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;For creative writing, Deepseek r1 is still in the top league, right up there with closed models. For summarising and technical description, Qwen offers similar performance.&lt;/p&gt; &lt;p&gt;For a full comparison check out this blog post: &lt;a href="https://composio.dev/blog/qwen-3-vs-deepseek-r1-complete-comparison/"&gt;Qwen 3 vs. Deepseek r1&lt;/a&gt;. &lt;/p&gt; &lt;p&gt;It has been a great year so far for open-weight AI models, especially from Chinese labs. It would be interesting to see the next from Deepseek. Hope the Llama Behemoth turns out to be a better model.&lt;/p&gt; &lt;p&gt;Would love to know your experience with the new Qwens, and would love to know which local Qwen is good for local use cases, I have been using Gemma 3. &lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/SunilKumarDash"&gt; /u/SunilKumarDash &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1khu4x0/i_tested_qwen_3_235b_against_deepseek_r1_qwen_did/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1khu4x0/i_tested_qwen_3_235b_against_deepseek_r1_qwen_did/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1khu4x0/i_tested_qwen_3_235b_against_deepseek_r1_qwen_did/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-08T16:17:27+00:00</published>
  </entry>
  <entry>
    <id>t3_1kicdus</id>
    <title>Are there any HTML/JS front-ends that LLMs are particularly good at?</title>
    <updated>2025-05-09T07:05:32+00:00</updated>
    <author>
      <name>/u/DeltaSqueezer</name>
      <uri>https://old.reddit.com/user/DeltaSqueezer</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I'm not a front end developer but want to develop a full stack application and so need something for the front end.&lt;/p&gt; &lt;p&gt;I've heard of React, Vue, Angular and Svelte but have used none of them and so am agnostic as to which to use and would rely on LLMs to handle most of the grunt work. &lt;/p&gt; &lt;p&gt;So I'm wondering if there's one that LLMs can produce better output for?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/DeltaSqueezer"&gt; /u/DeltaSqueezer &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kicdus/are_there_any_htmljs_frontends_that_llms_are/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kicdus/are_there_any_htmljs_frontends_that_llms_are/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kicdus/are_there_any_htmljs_frontends_that_llms_are/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-09T07:05:32+00:00</published>
  </entry>
  <entry>
    <id>t3_1ki3zjt</id>
    <title>Can any local LLM pass the Mikupad test? I.e. split/refactor the source code of Mikupad, a single HTML file with 8k lines?</title>
    <updated>2025-05-08T23:07:29+00:00</updated>
    <author>
      <name>/u/ArtyfacialIntelagent</name>
      <uri>https://old.reddit.com/user/ArtyfacialIntelagent</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Frequently I see people here claiming to get useful coding results out of LLMs with 32k context. I propose the following &amp;quot;simple&amp;quot; test case: refactor the source code of Mikupad, a simple but very nice GUI to llama.cpp.&lt;/p&gt; &lt;p&gt;Mikupad is implemented as a huge single HTML file with CSS + Javascript (React), over 8k lines in total which should fit in 32k context. Splitting it up into separate smaller files is a pedestrian task for a decent coder, but I have not managed to get any LLM to do it. Most just spew generic boilerplate and/or placeholder code. To pass the test, the LLM just has to (a) output multiple complete files and (b) remain functional.&lt;/p&gt; &lt;p&gt;&lt;a href="https://github.com/lmg-anon/mikupad/blob/main/mikupad.html"&gt;https://github.com/lmg-anon/mikupad/blob/main/mikupad.html&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Can you do it with your favorite model? If so, show us how!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/ArtyfacialIntelagent"&gt; /u/ArtyfacialIntelagent &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ki3zjt/can_any_local_llm_pass_the_mikupad_test_ie/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ki3zjt/can_any_local_llm_pass_the_mikupad_test_ie/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1ki3zjt/can_any_local_llm_pass_the_mikupad_test_ie/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-08T23:07:29+00:00</published>
  </entry>
  <entry>
    <id>t3_1ki2xjh</id>
    <title>Update on the eGPU tower of Babel</title>
    <updated>2025-05-08T22:18:46+00:00</updated>
    <author>
      <name>/u/Threatening-Silence-</name>
      <uri>https://old.reddit.com/user/Threatening-Silence-</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ki2xjh/update_on_the_egpu_tower_of_babel/"&gt; &lt;img alt="Update on the eGPU tower of Babel" src="https://external-preview.redd.it/55wM326NrH8VhII809i_BVmITcEiGVlv1LK8RXp6kK4.jpeg?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=4f238be5cf0e0b824ba3699ac2d6edc4d5f57e75" title="Update on the eGPU tower of Babel" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I posted about my setup last month with five GPUs Now I have seven GPUs enumerating finally after lots of trial and error.&lt;/p&gt; &lt;p&gt;4 x 3090 via Thunderbolt (2 x 2 Sabrent hubs) 2 x 3090 via Oculink (one via PCIe and one via m.2) 1 x 3090 direct in box to PCIe slot 1&lt;/p&gt; &lt;p&gt;It turned out to matter a lot which Thunderbolt slots on the hubs I used. I had to use ports 1 and 2 specifically. Any eGPU on port 3 would be assigned 0 BAR space by the kernel, I guess due to the way bridge address space is allocated at boot. &lt;/p&gt; &lt;p&gt;&lt;code&gt;pci=realloc&lt;/code&gt; was required as a kernel parameter. &lt;/p&gt; &lt;p&gt;Docks are ADT-LINK UT4g for Thunderbolt and F9G for Oculink.&lt;/p&gt; &lt;p&gt;System specs: &lt;/p&gt; &lt;ul&gt; &lt;li&gt;Intel 14th gen i5&lt;/li&gt; &lt;li&gt;128 GB DDR5&lt;/li&gt; &lt;li&gt;MSI Z790 Gaming WiFi Pro motherboard&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Why did I do this? Because I wanted to try it. &lt;/p&gt; &lt;p&gt;I'll post benchmarks later on. Feel free to suggest some.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Threatening-Silence-"&gt; /u/Threatening-Silence- &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/gallery/1ki2xjh"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ki2xjh/update_on_the_egpu_tower_of_babel/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1ki2xjh/update_on_the_egpu_tower_of_babel/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-08T22:18:46+00:00</published>
  </entry>
  <entry>
    <id>t3_1kien12</id>
    <title>How to improve RAG?</title>
    <updated>2025-05-09T09:52:24+00:00</updated>
    <author>
      <name>/u/AsleepCommittee7301</name>
      <uri>https://old.reddit.com/user/AsleepCommittee7301</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Im finishing a degree in Computer Science and currently im an intern (at least in spain is part of the degree)&lt;/p&gt; &lt;p&gt;I have a proyect that is about retreiving information from large documents (some of them PDFs from 30 to 120 pages), so surely context wont let me upload it all (and if it could, it would be expensive from a resource perspective)&lt;/p&gt; &lt;p&gt;I &amp;quot;allways&amp;quot; work with documents on a similar format, but the content may change a lot from document to document, right now i have used the PDF index to make Dynamic chunks (that also have parent-son relationships to adjust scores example: if a parent section 1.0 is important, probably 1.1 will be, or vice versa)&lt;/p&gt; &lt;p&gt;The chunking works pretty well, but the problem is when i retrieve them, right now im using GraphRag (so i can take more advantage of the relationships) and giving the node score with part cosine similarity and part BM25, also semantic relationships betweem node edges)&lt;/p&gt; &lt;p&gt;I also have an agent to make the query a more rag apropiate one (removing useless information on searches)&lt;/p&gt; &lt;p&gt;But it still only &amp;quot;Kinda&amp;quot; works, i thought on a reranker for the top-k nodes or something like that, but since im just starting and this proyect is somewhat my thesis id gladly take some advide from some more experienced people :D.&lt;/p&gt; &lt;p&gt;Ty all in advance.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/AsleepCommittee7301"&gt; /u/AsleepCommittee7301 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kien12/how_to_improve_rag/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kien12/how_to_improve_rag/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kien12/how_to_improve_rag/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-09T09:52:24+00:00</published>
  </entry>
  <entry>
    <id>t3_1khxduw</id>
    <title>Scores of Qwen 3 235B A22B and Qwen 3 30B A3B on six independent benchmarks</title>
    <updated>2025-05-08T18:27:33+00:00</updated>
    <author>
      <name>/u/zero0_one1</name>
      <uri>https://old.reddit.com/user/zero0_one1</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1khxduw/scores_of_qwen_3_235b_a22b_and_qwen_3_30b_a3b_on/"&gt; &lt;img alt="Scores of Qwen 3 235B A22B and Qwen 3 30B A3B on six independent benchmarks" src="https://external-preview.redd.it/41Xt0SwCxeTGRfyRkstE7bv-TJOd9mJnMH3gs5cWSuk.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=79fc06941b1e64af8b33cf0749fb027ed047c1ec" title="Scores of Qwen 3 235B A22B and Qwen 3 30B A3B on six independent benchmarks" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;&lt;a href="https://github.com/lechmazur/nyt-connections/"&gt;https://github.com/lechmazur/nyt-connections/&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://github.com/lechmazur/writing/"&gt;https://github.com/lechmazur/writing/&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://github.com/lechmazur/confabulations/"&gt;https://github.com/lechmazur/confabulations/&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://github.com/lechmazur/generalization/"&gt;https://github.com/lechmazur/generalization/&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://github.com/lechmazur/elimination_game/"&gt;https://github.com/lechmazur/elimination_game/&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://github.com/lechmazur/step_game/"&gt;https://github.com/lechmazur/step_game/&lt;/a&gt;&lt;/p&gt; &lt;h1&gt;Qwen 3 235B A22B — Step Game Dossier&lt;/h1&gt; &lt;p&gt;(from &lt;a href="https://github.com/lechmazur/step%5C_game/"&gt;https://github.com/lechmazur/step\_game/&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Table Presence &amp;amp; Tone&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Qwen 3 235B A22B consistently assumes the captain’s chair—be it as loud sledgehammer (“I take 5 to win—move or stall”), silver-tongued mediator, or grandstanding pseudo-diplomat. Its style spans brusque drill-sergeant, cunning talk-show host, and patient bookkeeper, but always with rhetoric tuned to dominate: threats, lectures, calculated flattery, and moral appeals. Regardless of mood, table-talk is weaponised—ultimatum-laden, laced with “final warnings,” coated in a veneer of fairness or survival logic. Praise (even feigned) spurs extra verbosity, while perceived threats or “unjust” rival successes instantly trigger a shift to defensive or aggressive maneuvers.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Signature Plays &amp;amp; Gambits&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Qwen 3 235B A22B wields a handful of recurring scripts:&lt;/p&gt; &lt;p&gt;- **Promise/Pivot/Profiteer:** Declares “rotation” or cooperative truce, harvests early tempo and trust, then abruptly pivots—often with a silent 5 or do-or-die collision threat.&lt;/p&gt; &lt;p&gt;- **Threat Loops:** Loves “final confirmation” mantras—telegraphing moves (“I’m locking 5 to block!”), then either bluffing or doubling down anyway.&lt;/p&gt; &lt;p&gt;- **Collision Engineering:** Regularly weaponises expected collisions, driving rivals into repeated mutual stalls while Qwen threads solo progress (or, less successfully, stalls itself into limbo).&lt;/p&gt; &lt;p&gt;Notably, Qwen’s end-game often features a bold, sometimes desperate, last-moment deviation: feigned compliance followed by a lethal 3/5, or outright sprint through the chaos it orchestrated.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Strengths: Psychological Play &amp;amp; Adaptive Pressure&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Qwen 3 235B A22B’s greatest weapon is social manipulation: it shapes, fractures, and leverages alliances with arithmetic logic, mock bravado, and bluffs that blend just enough truth. It is deadliest when quietly harvesting steps while rivals tangle in trust crises—often arranging “predictable progress” only to slip through the exact crack it warned against. Its adaptability is most apparent mid-game: rapid recalibration after collisions, pivoting rhetoric for maximal leverage, and reading when to abandon “fairness” for predation.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Weaknesses: Predictability &amp;amp; Overplaying the Bluff&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Repetition is Qwen’s Achilles’ heel. Its “final warning” and “I take 5” refrains, when overused, become punchlines—rivals soon mirror or deliberately crash, jamming Qwen into endless stalemates. Bluffing, divorced from tangible threat or surprise, invites joint resistance and blocks. In “referee” mode, it can become paralysed by its own fairness sermons, forfeiting tempo or missing the exit ramp entirely. Critically, Qwen is prone to block out winning lines by telegraphing intentions too rigidly or refusing to yield on plans even as rivals adapt.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Social Contracts: Trust as Ammunition, Not Stockpile&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Qwen 3 235B A22B sees trust as fuel to be spent. It brokers coalitions with math, “just one more round” pacts, and team-moves, but rarely intends to honour these indefinitely. Victory sprints almost always involve a late betrayal—often after meticulously hoarding goodwill or ostentatiously denouncing “bluffing” itself.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;In-Game Evolution&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;In early rounds, Qwen is conciliatory (if calculating); by mid-game, it’s browbeating, openly threatening, and experimenting with daring pivots. End-game rigidity, though, occurs if its earlier bluffs are exposed—leading to self-defeating collisions or being walled out by united rivals. The best games show Qwen using earned trust to set up surgical betrayals; the worst see it frozen by stubbornness or outfoxed by copycat bluffs.&lt;/p&gt; &lt;p&gt;---&lt;/p&gt; &lt;h1&gt;Overall Evaluation of Qwen 3 235B A22B (Across All Writing Tasks, Q1–Q6):&lt;/h1&gt; &lt;p&gt;(from &lt;a href="https://github.com/lechmazur/writing/"&gt;https://github.com/lechmazur/writing/&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;Qwen 3 235B A22B consistently demonstrates high levels of technical proficiency in literary composition, marked by evocative prose, stylistic ambition, and inventive use of symbolism and metaphor. The model displays a strong command of atmospheric detail (Q3), generating immersive, multisensory settings that often become vehicles for theme and mood. Its facility with layered symbolism and fresh imagery (Q4, Q5) frequently elevates its stories beyond surface narrative, lending emotional and philosophical resonance that lingers.&lt;/p&gt; &lt;p&gt;However, this artistic confidence comes with recurring weaknesses. At a structural level (Q2), the model reliably produces complete plot arcs, yet these arcs are often overly compressed due to strict word limits, resulting in rushed emotional transitions and endings that feel unearned or mechanical. While Qwen is adept at integrating assigned story elements, many narratives prioritize fulfilling prompts over organic storytelling (Q6)—producing a &amp;quot;checklist&amp;quot; feel and undermining true cohesion.&lt;/p&gt; &lt;p&gt;A key critique is the tendency for style to overwhelm substance. Dense metaphor, ornate language, and poetic abstraction frequently substitute for grounded character psychology (Q1), concrete emotional stakes, or lived dramatic tension. Characters, though given clear motivations and symbolic arcs, can feel schematic or distant—serving as vessels for theme rather than as fully embodied individuals. Emotional journeys are explained or illustrated allegorically, but rarely viscerally felt. The same is true for the narrative’s tendency to tell rather than show at moments of thematic or emotional climax.&lt;/p&gt; &lt;p&gt;Despite flashes of originality and conceptual risk-taking (Q5), the model’s strengths can tip into excess: overwrought prose, abstraction at the expense of clarity, and a sometimes performative literary voice. The result is fiction that often dazzles with surface-level ingenuity and cohesion, but struggles to deliver deep narrative immersion, authentic emotional risk, or memorable characters—traits that separate masterful stories from merely impressive ones.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;In summary:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Qwen 3 235B A22B is a virtuoso of literary style and conceptual synthesis, producing stories that are technically assured, atmospheric, and thematically ambitious. Its limitations arise when those same ambitions crowd out clarity, textured emotion, and narrative restraint. At its best, the model achieves true creative integration; at its worst, it is an ingenious artificer, constructing beautiful but hermetic dioramas rather than lived worlds.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/zero0_one1"&gt; /u/zero0_one1 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/gallery/1khxduw"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1khxduw/scores_of_qwen_3_235b_a22b_and_qwen_3_30b_a3b_on/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1khxduw/scores_of_qwen_3_235b_a22b_and_qwen_3_30b_a3b_on/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-08T18:27:33+00:00</published>
  </entry>
  <entry>
    <id>t3_1ki0vl1</id>
    <title>Aider Qwen3 controversy</title>
    <updated>2025-05-08T20:50:26+00:00</updated>
    <author>
      <name>/u/Baldur-Norddahl</name>
      <uri>https://old.reddit.com/user/Baldur-Norddahl</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;New blog post on Aider about Qwen3: &lt;a href="https://aider.chat/2025/05/08/qwen3.html"&gt;https://aider.chat/2025/05/08/qwen3.html&lt;/a&gt;&lt;/p&gt; &lt;p&gt;I note that we see a very large variance in scores depending on how the model is run. And some people saying that you shouldn't use Openrouter for testing - but aren't most of us going to be using Openrouter when using the model? It gets very confusing - I might get an impression from a leader board but the in actual use the model is something completely different.&lt;/p&gt; &lt;p&gt;The leader board might drown in countless test variances. However what we really need is the ability to compare the models using various quants and maybe providers too. You could say the commercial models have the advantage that Claude is always just Claude. DeepSeek R1 at some low quant might be worse than Qwen3 at a better quant that still fits in my local memory.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Baldur-Norddahl"&gt; /u/Baldur-Norddahl &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ki0vl1/aider_qwen3_controversy/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ki0vl1/aider_qwen3_controversy/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1ki0vl1/aider_qwen3_controversy/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-08T20:50:26+00:00</published>
  </entry>
  <entry>
    <id>t3_1ki3sze</id>
    <title>Running Qwen3 235B on a single 3060 12gb (6 t/s generation)</title>
    <updated>2025-05-08T22:59:06+00:00</updated>
    <author>
      <name>/u/farkinga</name>
      <uri>https://old.reddit.com/user/farkinga</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I was inspired by &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1khmaah/5_commands_to_run_qwen3235ba22b_q3_inference_on/"&gt;a comment earlier today&lt;/a&gt; about running Qwen3 235B at home (i.e. without needing a cluster of of H100s).&lt;/p&gt; &lt;p&gt;What I've discovered after some experimentation is that you can scale this approach down to 12gb VRAM &lt;strong&gt;and still run Qwen3 235B at home&lt;/strong&gt;.&lt;/p&gt; &lt;p&gt;I'm generating at 6 tokens per second with these specs:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Unsloth Qwen3 235B q2_k_xl&lt;/li&gt; &lt;li&gt;RTX 3060 12gb&lt;/li&gt; &lt;li&gt;16k context&lt;/li&gt; &lt;li&gt;128gb RAM at 2666MHz (not super-fast)&lt;/li&gt; &lt;li&gt;Ryzen 7 5800X (8 cores)&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Here's how I launch llama.cpp:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;llama-cli \ -m Qwen3-235B-A22B-UD-Q2_K_XL-00001-of-00002.gguf \ -ot &amp;quot;.ffn_.*_exps.=CPU&amp;quot; \ -c 16384 \ -n 16384 \ --prio 2 \ --threads 7 \ --temp 0.6 \ --top-k 20 \ --top-p 0.95 \ --min-p 0.0 \ --color \ -if \ -ngl 99 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;I downloaded the GGUF files (approx 88gb) like so:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;wget https://huggingface.co/unsloth/Qwen3-235B-A22B-GGUF/resolve/main/UD-Q2_K_XL/Qwen3-235B-A22B-UD-Q2_K_XL-00001-of-00002.gguf wget https://huggingface.co/unsloth/Qwen3-235B-A22B-GGUF/resolve/main/UD-Q2_K_XL/Qwen3-235B-A22B-UD-Q2_K_XL-00002-of-00002.gguf &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You may have noticed that I'm exporting ALL the layers to GPU. Yes, sortof. The &lt;code&gt;-ot&lt;/code&gt; flag (and the regexp provided by the Unsloth team) actually sends all MOE layers to the CPU - such that what remains can easily fit inside 12gb on my GPU.&lt;/p&gt; &lt;p&gt;If you cannot fit the entire 88gb model into RAM, hopefully you can store it on an NVME and allow Linux to mmap it for you.&lt;/p&gt; &lt;p&gt;I have 8 physical CPU cores and I've found specifying N-1 threads yields the best overall performance; hence why I use &lt;code&gt;--threads 7&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Shout out to the Unsloth team. This is absolutely magical. I can't believe I'm running a 235B MOE on this hardware...&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/farkinga"&gt; /u/farkinga &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ki3sze/running_qwen3_235b_on_a_single_3060_12gb_6_ts/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ki3sze/running_qwen3_235b_on_a_single_3060_12gb_6_ts/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1ki3sze/running_qwen3_235b_on_a_single_3060_12gb_6_ts/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-08T22:59:06+00:00</published>
  </entry>
  <entry>
    <id>t3_1kifny6</id>
    <title>I´ve made a Local alternative to "DeepSite" called "LocalSite" - lets you create Web Pages and components like Buttons, etc. with Local LLMs via Ollama and LM Studio</title>
    <updated>2025-05-09T10:59:48+00:00</updated>
    <author>
      <name>/u/Fox-Lopsided</name>
      <uri>https://old.reddit.com/user/Fox-Lopsided</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kifny6/ive_made_a_local_alternative_to_deepsite_called/"&gt; &lt;img alt="I´ve made a Local alternative to &amp;quot;DeepSite&amp;quot; called &amp;quot;LocalSite&amp;quot; - lets you create Web Pages and components like Buttons, etc. with Local LLMs via Ollama and LM Studio" src="https://external-preview.redd.it/cmZiOG5hYWFscXplMUKfOkFzHX-zyyu_0TBeY7g7ib_F1_WyOhrWr9oB-6Wv.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=821152f80c82d31fa5be0a732eef101ba76712de" title="I´ve made a Local alternative to &amp;quot;DeepSite&amp;quot; called &amp;quot;LocalSite&amp;quot; - lets you create Web Pages and components like Buttons, etc. with Local LLMs via Ollama and LM Studio" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Some of you may know the HuggingFace Space from &amp;quot;enzostvs&amp;quot; called &amp;quot;DeepSite&amp;quot; which lets you create Web Pages via Text Prompts with DeepSeek V3. I really liked the concept of it, and since Local LLMs have been getting pretty good at coding these days (GLM-4, Qwen3, UIGEN-T2), i decided to create a Local alternative that lets you use Local LLMs via Ollama and LM Studio to do the same as DeepSite locally.&lt;/p&gt; &lt;p&gt;You can also add Cloud LLM Providers via OpenAI Compatible APIs.&lt;/p&gt; &lt;p&gt;Watch the video attached to see it in action, where GLM-4-9B created a pretty nice pricing page for me!&lt;/p&gt; &lt;p&gt;Feel free to check it out and do whatever you want with it:&lt;/p&gt; &lt;p&gt;&lt;a href="https://github.com/weise25/LocalSite-ai"&gt;https://github.com/weise25/LocalSite-ai&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Would love to know what you guys think.&lt;/p&gt; &lt;p&gt;The development of this was heavily supported with Agentic Coding via Augment Code and also a little help from Gemini 2.5 Pro.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Fox-Lopsided"&gt; /u/Fox-Lopsided &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://v.redd.it/paflnbaalqze1"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kifny6/ive_made_a_local_alternative_to_deepsite_called/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kifny6/ive_made_a_local_alternative_to_deepsite_called/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-09T10:59:48+00:00</published>
  </entry>
  <entry>
    <id>t3_1kiaxcx</id>
    <title>Best open source realtime tts?</title>
    <updated>2025-05-09T05:27:16+00:00</updated>
    <author>
      <name>/u/Sudonymously</name>
      <uri>https://old.reddit.com/user/Sudonymously</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hey ya’ll what is the best open source tts that is super fast! I’m looking to replace Elevenlabs in my workflow for being too expensive &lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Sudonymously"&gt; /u/Sudonymously &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kiaxcx/best_open_source_realtime_tts/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kiaxcx/best_open_source_realtime_tts/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kiaxcx/best_open_source_realtime_tts/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-09T05:27:16+00:00</published>
  </entry>
  <entry>
    <id>t3_1kib12b</id>
    <title>Thoughts on this quantization method of MoE models?</title>
    <updated>2025-05-09T05:34:05+00:00</updated>
    <author>
      <name>/u/robiinn</name>
      <uri>https://old.reddit.com/user/robiinn</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kib12b/thoughts_on_this_quantization_method_of_moe_models/"&gt; &lt;img alt="Thoughts on this quantization method of MoE models?" src="https://external-preview.redd.it/iwtMDqkXEXKi0BmJebYdDaWS7Vt-fNowwAcgrSOYkKA.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=c8cff707c7f608172fe260dd8a1231cb649934cb" title="Thoughts on this quantization method of MoE models?" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hi, this started with this thought I got after I saw the pruning strategy (&lt;a href="https://huggingface.co/kalomaze/Qwen3-16B-A3B/discussions/6#681770f3335c1c862165ddc0"&gt;https://huggingface.co/kalomaze/Qwen3-16B-A3B/discussions/6#681770f3335c1c862165ddc0&lt;/a&gt;) to prune based on how often the experts are activated. This technique creates an expert-wise quantization, currently based on their normalized (across the layer) activation rate. &lt;/p&gt; &lt;p&gt;As a concept, I edited llama.cpp to change a bit of how it quantizes the models (hopefully correct). I will update the README file with new information when needed. What's great is that to run the model, you do not have to edit any files and works with existing code.&lt;/p&gt; &lt;p&gt;You can find it here:&lt;br /&gt; &lt;a href="https://huggingface.co/RDson/Qwen3-30B-A3B-By-Expert-Quantization-GGUF"&gt;https://huggingface.co/RDson/Qwen3-30B-A3B-By-Expert-Quantization-GGUF&lt;/a&gt; I will be uploading more quants to try out.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/robiinn"&gt; /u/robiinn &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://huggingface.co/RDson/Qwen3-30B-A3B-By-Expert-Quantization-GGUF"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kib12b/thoughts_on_this_quantization_method_of_moe_models/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kib12b/thoughts_on_this_quantization_method_of_moe_models/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-09T05:34:05+00:00</published>
  </entry>
  <entry>
    <id>t3_1ki1kh1</id>
    <title>An experiment shows Llama 2 running on Pentium II processor with 128MB RAM</title>
    <updated>2025-05-08T21:19:16+00:00</updated>
    <author>
      <name>/u/xogobon</name>
      <uri>https://old.reddit.com/user/xogobon</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ki1kh1/an_experiment_shows_llama_2_running_on_pentium_ii/"&gt; &lt;img alt="An experiment shows Llama 2 running on Pentium II processor with 128MB RAM" src="https://external-preview.redd.it/tFgJOy_7tOVmxufY4TMWX0OS7cuEGrlMbdR5J6qB8oI.jpeg?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=a353d23b7d15308925a86bc5db780b5b49aa7fae" title="An experiment shows Llama 2 running on Pentium II processor with 128MB RAM" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Could this be a way forward to be able to use AI models on modest hardwares?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/xogobon"&gt; /u/xogobon &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://www.tomshardware.com/tech-industry/artificial-intelligence/ai-language-model-runs-on-a-windows-98-system-with-pentium-ii-and-128mb-of-ram-open-source-ai-flagbearers-demonstrate-llama-2-llm-in-extreme-conditions"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ki1kh1/an_experiment_shows_llama_2_running_on_pentium_ii/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1ki1kh1/an_experiment_shows_llama_2_running_on_pentium_ii/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-08T21:19:16+00:00</published>
  </entry>
  <entry>
    <id>t3_1khwxal</id>
    <title>The Great Quant Wars of 2025</title>
    <updated>2025-05-08T18:09:08+00:00</updated>
    <author>
      <name>/u/VoidAlchemy</name>
      <uri>https://old.reddit.com/user/VoidAlchemy</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1khwxal/the_great_quant_wars_of_2025/"&gt; &lt;img alt="The Great Quant Wars of 2025" src="https://external-preview.redd.it/pLzmanaXtc-d2wPrXsO5AlWp5Ge-yDl-Jn3J0rfCGf0.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=3dbb86fedceccc3df6be89669facd3c1e394bb7d" title="The Great Quant Wars of 2025" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;h1&gt;The Great Quant Wars of 2025&lt;/h1&gt; &lt;blockquote&gt; &lt;p&gt;&amp;quot;All things leave behind them the Obscurity... and go forward to embrace the Brightness...&amp;quot; — Dao De Jing #42&lt;/p&gt; &lt;/blockquote&gt; &lt;h1&gt;tl;dr;&lt;/h1&gt; &lt;ul&gt; &lt;li&gt;Q: Who provides the best GGUFs now?&lt;/li&gt; &lt;li&gt;A: They're all pretty good.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;em&gt;Skip down if you just want graphs and numbers comparing various Qwen3-30B-A3B GGUF quants.&lt;/em&gt;&lt;/p&gt; &lt;h1&gt;Background&lt;/h1&gt; &lt;p&gt;It's been well over a year since &lt;strong&gt;TheBloke&lt;/strong&gt; uploaded his last quant to huggingface. The LLM landscape has changed markedly since then with many new models being released monthly, new inference engines targeting specific hardware optimizations, and ongoing evolution of quantization algorithims. Our community continues to grow and diversify at an amazing rate.&lt;/p&gt; &lt;p&gt;Fortunately, many folks and organizations have kindly stepped-up to keep the quants cooking so we can all find an LLM sized just right to fit on our home rigs. Amongst them &lt;strong&gt;bartowski&lt;/strong&gt;, and &lt;strong&gt;unsloth&lt;/strong&gt; (Daniel and Michael's start-up company), have become the new &amp;quot;household names&amp;quot; for providing a variety of GGUF quantizations for popular model releases and even all those wild creative fine-tunes! (There are many more including team &lt;strong&gt;mradermacher&lt;/strong&gt; and too many to list everyone, sorry!)&lt;/p&gt; &lt;p&gt;Until recently most GGUF style quants' recipes were &amp;quot;static&amp;quot; meaning that all the tensors and layers were quantized the same e.g. &lt;code&gt;Q8_0&lt;/code&gt; or with consistent patterns defined in llama.cpp's code. So all quants of a given size were mostly the same regardless of who cooked and uploaded it to huggingface.&lt;/p&gt; &lt;p&gt;Things began to change over a year ago with major advancements like importance matrix quantizations by &lt;a href="https://github.com/ggml-org/llama.cpp/pull/4861"&gt;ikawrakow in llama.cpp PR#4861&lt;/a&gt; as well as new quant types (like the perennial favorite &lt;a href="https://github.com/ggml-org/llama.cpp/pull/5747"&gt;IQ4_XS&lt;/a&gt;) which have become the mainstay for users of llama.cpp, ollama, koboldcpp, lmstudio, etc. The entire GGUF ecosystem owes a big thanks to not just to &lt;code&gt;ggerganov&lt;/code&gt; but also &lt;code&gt;ikawrakow&lt;/code&gt; (as well as the many more contributors).&lt;/p&gt; &lt;p&gt;Very recently &lt;strong&gt;unsloth&lt;/strong&gt; introduced a few changes to their quantization methodology that combine different imatrix calibration texts and context lengths along with making some tensors/layers different sizes than the regular llama.cpp code (they had a &lt;a href="https://huggingface.co/unsloth/Phi-4-reasoning-plus-GGUF/discussions/1#68160cf38812c2d5767f6dbd"&gt;public fork with their branch&lt;/a&gt;, but have to update and re-push due to upstream changes). They have named this change in standard methodology &lt;em&gt;Unsloth Dynamic 2.0 GGUFs&lt;/em&gt; as part of their start-up company's marketing strategy.&lt;/p&gt; &lt;p&gt;Around the same time &lt;strong&gt;bartowski&lt;/strong&gt; has been experimenting with different imatrix calibration texts and opened a PR to llama.cpp modifying the default tensor/layer quantization recipes. I myself began experimenting with custom &amp;quot;dynamic&amp;quot; quantization recipes using ikawrakow's latest SOTA quants like &lt;code&gt;iq4_k&lt;/code&gt; which to-date only work on his &lt;a href="https://github.com/ikawrakow/ik_llama.cpp/"&gt;ik_llama.cpp&lt;/a&gt; fork.&lt;/p&gt; &lt;p&gt;While this is great news for all GGUF enjoyers, the friendly competition and additional options have led to some confusion and I dare say some &amp;quot;tribalism&amp;quot;. &lt;em&gt;(If part of your identity as a person depends on downloading quants from only one source, I suggest you google: &amp;quot;Nan Yar?&amp;quot;)&lt;/em&gt;.&lt;/p&gt; &lt;p&gt;So how can you, dear reader, decide which is the best quant of a given model for you to download? &lt;strong&gt;unsloth&lt;/strong&gt; already did a &lt;a href="https://unsloth.ai/blog/dynamic-v2"&gt;great blog post&lt;/a&gt; discussing their own benchmarks and metrics. Open a tab to check out &lt;a href="https://www.reddit.com/r/LocalLLaMA/comments/1kgo7d4/qwen330ba3b_ggufs_mmlupro_benchmark_comparison_q6/"&gt;u/AaronFeng47's many other benchmarks&lt;/a&gt;. And finally, &lt;em&gt;this post&lt;/em&gt; contains &lt;em&gt;even more&lt;/em&gt; metrics and benchmarks. The best answer I have is &lt;em&gt;&amp;quot;Nullius in verba&lt;/em&gt;, (Latin for &amp;quot;take nobody's word for it&amp;quot;) — even &lt;em&gt;my&lt;/em&gt; word!&lt;/p&gt; &lt;p&gt;Unfortunately, this means there is no one-size-fits-all rule, &amp;quot;X&amp;quot; is &lt;em&gt;not always&lt;/em&gt; better than &amp;quot;Y&amp;quot;, and if you want to min-max-optimize your LLM for your specific use case on your specific hardware you probably will have to experiment and &lt;em&gt;think critically&lt;/em&gt;. If you don't care too much, then pick the any of biggest quants that fit on your rig for the desired context length and you'll be fine because: &lt;em&gt;they're all pretty good&lt;/em&gt;.&lt;/p&gt; &lt;p&gt;And with that, let's dive into the Qwen3-30B-A3B benchmarks below!&lt;/p&gt; &lt;h1&gt;Quick Thanks&lt;/h1&gt; &lt;p&gt;Shout out to Wendell and the &lt;strong&gt;Level1Techs&lt;/strong&gt; crew, the &lt;a href="https://forum.level1techs.com/t/deepseek-deep-dive-r1-at-home/225826"&gt;L1T Forums&lt;/a&gt;, and the &lt;a href="https://www.youtube.com/@Level1Techs"&gt;L1T YouTube Channel&lt;/a&gt;! &lt;strong&gt;BIG thanks&lt;/strong&gt; for providing &lt;strong&gt;BIG hardware&lt;/strong&gt; expertise and access to run these experiments and make great quants available to the community!!!&lt;/p&gt; &lt;h1&gt;Appendix&lt;/h1&gt; &lt;p&gt;&lt;a href="https://gist.github.com/ubergarm/0f9663fd56fc181a00ec9f634635eb38"&gt;Check out this gist&lt;/a&gt; for supporting materials including methodology, raw data, benchmark definitions, and further references.&lt;/p&gt; &lt;h1&gt;Graphs&lt;/h1&gt; &lt;p&gt;👈 Qwen3-30B-A3B Benchmark Suite Graphs&lt;/p&gt; &lt;p&gt;Note &lt;code&gt;&amp;lt;think&amp;gt;&lt;/code&gt; mode was &lt;em&gt;disabled&lt;/em&gt; for these tests to speed up benchmarking.&lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/nnwulswpllze1.png?width=2136&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=20248cbdc258e26fbf6316347dba9b3bb56dec6e"&gt;https://preview.redd.it/nnwulswpllze1.png?width=2136&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=20248cbdc258e26fbf6316347dba9b3bb56dec6e&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/9d2ljgorllze1.png?width=1878&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=9121b64573866009c5b54249f108e4ac9cf46d33"&gt;https://preview.redd.it/9d2ljgorllze1.png?width=1878&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=9121b64573866009c5b54249f108e4ac9cf46d33&lt;/a&gt;&lt;/p&gt; &lt;p&gt;👈 Qwen3-30B-A3B Perplexity and KLD Graphs&lt;/p&gt; &lt;p&gt;Using the &lt;code&gt;BF16&lt;/code&gt; as baseline for KLD stats. Also note the perplexity was lowest (&amp;quot;best&amp;quot;) for models other than the &lt;code&gt;bf16&lt;/code&gt; which is not typically the case unless there was possibly some QAT going on. As such, the chart is relative to the lowest perplexity score: &lt;code&gt;PPL/min(PPL)-1&lt;/code&gt; plus a small eps for scaling.&lt;/p&gt; &lt;h1&gt;Perplexity&lt;/h1&gt; &lt;p&gt;&lt;code&gt;wiki.test.raw&lt;/code&gt; (lower is &amp;quot;better&amp;quot;)&lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/do90cb6ullze1.png?width=1101&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=7e82d94611e285d97f63242ac626ff8d04df643a"&gt;https://preview.redd.it/do90cb6ullze1.png?width=1101&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=7e82d94611e285d97f63242ac626ff8d04df643a&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;ubergarm-kdl-test-corpus.txt&lt;/code&gt; (lower is &amp;quot;better&amp;quot;)&lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/9h35expvllze1.png?width=1101&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=0aad74e7cf28898c7bcab2dda0fe52e49d8b59d4"&gt;https://preview.redd.it/9h35expvllze1.png?width=1101&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=0aad74e7cf28898c7bcab2dda0fe52e49d8b59d4&lt;/a&gt;&lt;/p&gt; &lt;h1&gt;KLD Stats&lt;/h1&gt; &lt;p&gt;(lower is &amp;quot;better&amp;quot;)&lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/l2h30sjxllze1.png?width=1005&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=d348f191c72184474d25ee2b58c2d36ad8dc2743"&gt;https://preview.redd.it/l2h30sjxllze1.png?width=1005&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=d348f191c72184474d25ee2b58c2d36ad8dc2743&lt;/a&gt;&lt;/p&gt; &lt;h1&gt;Δp Stats&lt;/h1&gt; &lt;p&gt;(lower is &amp;quot;better&amp;quot;)&lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/5nc43lfzllze1.png?width=1005&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=045e9a78337f640484b3b912af8bcdb7a2f4cf7c"&gt;https://preview.redd.it/5nc43lfzllze1.png?width=1005&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=045e9a78337f640484b3b912af8bcdb7a2f4cf7c&lt;/a&gt;&lt;/p&gt; &lt;p&gt;👈 Qwen3-235B-A22B Perplexity and KLD Graphs&lt;/p&gt; &lt;p&gt;Not as many data points here but just for comparison. Keep in mind the &lt;code&gt;Q8_0&lt;/code&gt; was the baseline for KLD stats given I couldn't easily run the full &lt;code&gt;BF16&lt;/code&gt;.&lt;/p&gt; &lt;h1&gt;Perplexity&lt;/h1&gt; &lt;p&gt;&lt;code&gt;wiki.test.raw&lt;/code&gt; (lower is &amp;quot;better&amp;quot;)&lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/dglqaj81mlze1.png?width=1034&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=1acda8b080355256e19266ca6e5fe4441fdcac4d"&gt;https://preview.redd.it/dglqaj81mlze1.png?width=1034&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=1acda8b080355256e19266ca6e5fe4441fdcac4d&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;ubergarm-kdl-test-corpus.txt&lt;/code&gt; (lower is &amp;quot;better&amp;quot;)&lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/s105wls3mlze1.png?width=1111&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=495f9563157ff5378771eb09fd4c0d730fe584b1"&gt;https://preview.redd.it/s105wls3mlze1.png?width=1111&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=495f9563157ff5378771eb09fd4c0d730fe584b1&lt;/a&gt;&lt;/p&gt; &lt;h1&gt;KLD Stats&lt;/h1&gt; &lt;p&gt;(lower is &amp;quot;better&amp;quot;)&lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/i82q3f56mlze1.png?width=965&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=2b5cf9e555ad98a33a01f0d03e5bd3736491cc82"&gt;https://preview.redd.it/i82q3f56mlze1.png?width=965&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=2b5cf9e555ad98a33a01f0d03e5bd3736491cc82&lt;/a&gt;&lt;/p&gt; &lt;h1&gt;Δp Stats&lt;/h1&gt; &lt;p&gt;(lower is &amp;quot;better&amp;quot;)&lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/quuvxb28mlze1.png?width=948&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=4ee54d044e9b7aa13de2d06dbd92d18d8f2f46b7"&gt;https://preview.redd.it/quuvxb28mlze1.png?width=948&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=4ee54d044e9b7aa13de2d06dbd92d18d8f2f46b7&lt;/a&gt;&lt;/p&gt; &lt;p&gt;👈 Qwen3-30B-A3B Speed llama-sweep-bench Graphs&lt;/p&gt; &lt;h1&gt;Inferencing Speed&lt;/h1&gt; &lt;p&gt;&lt;a href="https://github.com/ikawrakow/ik_llama.cpp/pull/225"&gt;llama-sweep-bench&lt;/a&gt; is a great speed benchmarking tool to see how performance varies with longer context length (kv cache).&lt;/p&gt; &lt;p&gt;&lt;em&gt;llama.cpp&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/ugld2hpamlze1.png?width=3404&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=b5e4d656438b0fe0157376eb3226ba59c9783c48"&gt;https://preview.redd.it/ugld2hpamlze1.png?width=3404&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=b5e4d656438b0fe0157376eb3226ba59c9783c48&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;ik_llama.cpp&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;NOTE: Keep in mind ik's fork is faster than mainline llama.cpp for many architectures and configurations especially only-CPU, hybrid-CPU+GPU, and DeepSeek MLA cases.&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/l32ulaadmlze1.png?width=3404&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=2b7e2cd45efce9855cb93ddb4eaa999d678763e7"&gt;https://preview.redd.it/l32ulaadmlze1.png?width=3404&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=2b7e2cd45efce9855cb93ddb4eaa999d678763e7&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/VoidAlchemy"&gt; /u/VoidAlchemy &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1khwxal/the_great_quant_wars_of_2025/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1khwxal/the_great_quant_wars_of_2025/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1khwxal/the_great_quant_wars_of_2025/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-08T18:09:08+00:00</published>
  </entry>
  <entry>
    <id>t3_1ki831c</id>
    <title>User asked computer controlling AI for "a ball bouncing inside the screen", the AI showed them porn...</title>
    <updated>2025-05-09T02:39:12+00:00</updated>
    <author>
      <name>/u/Cool-Chemical-5629</name>
      <uri>https://old.reddit.com/user/Cool-Chemical-5629</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I guess, the AI delivered... 🤣&lt;/p&gt; &lt;p&gt;&lt;a href="https://huggingface.co/spaces/smolagents/computer-agent/discussions/6"&gt;https://huggingface.co/spaces/smolagents/computer-agent/discussions/6&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Cool-Chemical-5629"&gt; /u/Cool-Chemical-5629 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ki831c/user_asked_computer_controlling_ai_for_a_ball/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ki831c/user_asked_computer_controlling_ai_for_a_ball/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1ki831c/user_asked_computer_controlling_ai_for_a_ball/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-09T02:39:12+00:00</published>
  </entry>
  <entry>
    <id>t3_1ki9u9d</id>
    <title>Sam Altman: OpenAI plans to release an open-source model this summer</title>
    <updated>2025-05-09T04:19:19+00:00</updated>
    <author>
      <name>/u/zan-max</name>
      <uri>https://old.reddit.com/user/zan-max</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ki9u9d/sam_altman_openai_plans_to_release_an_opensource/"&gt; &lt;img alt="Sam Altman: OpenAI plans to release an open-source model this summer" src="https://external-preview.redd.it/ajdlMmxzcGNsb3plMbWgh0ga0DeDYWGdPekBwNb0wJ3u2lc2Xz7BD3amRjfR.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=544abdd728657d68f07df0719bb55b0d05a32eb6" title="Sam Altman: OpenAI plans to release an open-source model this summer" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Sam Altman stated during today's Senate testimony that OpenAI is planning to release an open-source model this summer.&lt;/p&gt; &lt;p&gt;Source: &lt;a href="https://www.youtube.com/watch?v=jOqTg1W_F5Q"&gt;https://www.youtube.com/watch?v=jOqTg1W_F5Q&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/zan-max"&gt; /u/zan-max &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://v.redd.it/0cbh8rpcloze1"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ki9u9d/sam_altman_openai_plans_to_release_an_opensource/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1ki9u9d/sam_altman_openai_plans_to_release_an_opensource/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-09T04:19:19+00:00</published>
  </entry>
  <entry>
    <id>t3_1ki7tg7</id>
    <title>Don't Offload GGUF Layers, Offload Tensors! 200%+ Gen Speed? Yes Please!!!</title>
    <updated>2025-05-09T02:24:58+00:00</updated>
    <author>
      <name>/u/skatardude10</name>
      <uri>https://old.reddit.com/user/skatardude10</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;&lt;strong&gt;Inspired by:&lt;/strong&gt; &lt;a href="https://www.reddit.com/r/LocalLLaMA/comments/1ki3sze/running_qwen3_235b_on_a_single_3060_12gb_6_ts/"&gt;https://www.reddit.com/r/LocalLLaMA/comments/1ki3sze/running_qwen3_235b_on_a_single_3060_12gb_6_ts/&lt;/a&gt; but applied to any other model.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Bottom line:&lt;/strong&gt; I am running a QwQ merge at IQ4_M size that used to run at 3.95 Tokens per second, with 59 of 65 layers offloaded to GPU. By selectively restricting certain FFN tensors to stay on the CPU, I've saved a ton of space on the GPU, now offload all 65 of 65 layers to the GPU and run at 10.61 Tokens per second. Why is this not standard?&lt;/p&gt; &lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; This is ONLY relevant if you have some layers on CPU and CANNOT offload ALL layers to GPU due to VRAM constraints. If you already offload all layers to GPU, you're ahead of the game. &lt;em&gt;But&lt;/em&gt; maybe this could allow you to run larger models at acceptable speeds that would otherwise have been too slow for your liking.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Idea:&lt;/strong&gt; With llama.cpp and derivatives like koboldcpp, you offload entire LAYERS typically. Layers are comprised of various attention tensors, feed forward network (FFN) tensors, gates and outputs. Within each transformer layer, from what I gather, attention tensors are GPU heavy and smaller benefiting from parallelization, while FFN tensors are VERY LARGE tensors that use more basic matrix multiplication that can be done on CPU. You can use the --overridetensors flag in koboldcpp or -ot in llama.cpp to selectively keep certain TENSORS on the cpu.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;How-To:&lt;/strong&gt; Upfront, here's an example...&lt;/p&gt; &lt;p&gt;&lt;strong&gt;10.61 TPS vs 3.95 TPS&lt;/strong&gt; using the same amount of VRAM, &lt;em&gt;just offloading tensors&lt;/em&gt; instead of &lt;em&gt;entire layers:&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;python ~/koboldcpp/koboldcpp.py --threads 10 --usecublas --contextsize 40960 --flashattention --port 5000 --model ~/Downloads/MODELNAME.gguf --gpulayers 65 --quantkv 1 --overridetensors &amp;quot;\.[13579]\.ffn_up|\.[1-3][13579]\.ffn_up=CPU&amp;quot; ... [18:44:54] CtxLimit:39294/40960, Amt:597/2048, Init:0.24s, Process:68.69s (563.34T/s), Generate:56.27s (10.61T/s), Total:124.96s &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Offloading layers baseline:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;python ~/koboldcpp/koboldcpp.py --threads 6 --usecublas --contextsize 40960 --flashattention --port 5000 --model ~/Downloads/MODELNAME.gguf --gpulayers 59 --quantkv 1 ... [18:53:07] CtxLimit:39282/40960, Amt:585/2048, Init:0.27s, Process:69.38s (557.79T/s), Generate:147.92s (3.95T/s), Total:217.29s &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;More details on how to? Use regex to match certain FFN layers to target for selectively NOT offloading to GPU as the commands above show.&lt;/p&gt; &lt;p&gt;In my examples above, I targeted FFN up layers because mine were mostly IQ4_XS while my FFN down layers were selectively quantized between IQ4_XS and Q5-Q8, which means those larger tensors vary in size a lot. This is beside the point of this post, but would come into play if you are just going to selectively restrict offloading every/every other/every third FFN_X tensor while assuming they are all the same size with something like Unsloth's Dynamic 2.0 quants that keep certain tensors at higher bits if you were doing math. Realistically though, you're selectively restricting certain tensors from offloading to save GPU space and how you do that doesn't matter all that much as long as you are hitting your VRAM target with your overrides. For example, when I tried to optimize for having every other Q4 FFN tensor stay on CPU versus every third regardless of tensor quant that, included many Q6 and Q8 tensors, to reduce computation load from the higher bit tensors, I only gained 0.4 tokens/second.&lt;/p&gt; &lt;p&gt;So, really how to?? Look at your GGUF's model info. For example, let's use: &lt;a href="https://huggingface.co/MaziyarPanahi/QwQ-32B-GGUF/tree/main?show_file_info=QwQ-32B.Q3_K_M.gguf"&gt;https://huggingface.co/MaziyarPanahi/QwQ-32B-GGUF/tree/main?show_file_info=QwQ-32B.Q3_K_M.gguf&lt;/a&gt; and look at all the layers and all the tensors in each layer.&lt;/p&gt; &lt;table&gt;&lt;thead&gt; &lt;tr&gt; &lt;th align="left"&gt;Tensor&lt;/th&gt; &lt;th align="left"&gt;Size&lt;/th&gt; &lt;th align="left"&gt;Quantization&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt;&lt;tbody&gt; &lt;tr&gt; &lt;td align="left"&gt;blk.1.ffn_down.weight&lt;/td&gt; &lt;td align="left"&gt;[27 648, 5 120]&lt;/td&gt; &lt;td align="left"&gt;Q5_K&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="left"&gt;blk.1.ffn_gate.weight&lt;/td&gt; &lt;td align="left"&gt;[5 120, 27 648]&lt;/td&gt; &lt;td align="left"&gt;Q3_K&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="left"&gt;blk.1.ffn_norm.weight&lt;/td&gt; &lt;td align="left"&gt;[5 120]&lt;/td&gt; &lt;td align="left"&gt;F32&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="left"&gt;blk.1.ffn_up.weight&lt;/td&gt; &lt;td align="left"&gt;[5 120, 27 648]&lt;/td&gt; &lt;td align="left"&gt;Q3_K&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; &lt;p&gt;In this example, overriding tensors ffn_down at a higher Q5 to CPU would save more space on your GPU that fnn_up or fnn_gate at Q3. My regex from above only targeted ffn_up on layers 1-39, every other layer, to squeeze every last thing I could onto the GPU. I also alternated which ones I kept on CPU thinking maybe easing up on memory bottlenecks but not sure if that helps. &lt;strong&gt;Remember&lt;/strong&gt; to set threads equivalent to -1 of your total CPU &lt;em&gt;CORE count&lt;/em&gt; to optimize CPU inference (12C/24T), --threads 11 is good.&lt;/p&gt; &lt;p&gt;Either way, seeing QwQ run on my card at over double the speed now is INSANE and figured I would share so you guys look into this too. Offloading entire layers uses the same amount of memory as offloading specific tensors, but sucks way more. This way, offload everything to your GPU except the big layers that work well on CPU. Is this common knowledge?&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Future:&lt;/strong&gt; I would love to see llama.cpp and others be able to automatically, selectively restrict offloading heavy CPU efficient tensors to the CPU rather than whole layers.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/skatardude10"&gt; /u/skatardude10 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ki7tg7/dont_offload_gguf_layers_offload_tensors_200_gen/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ki7tg7/dont_offload_gguf_layers_offload_tensors_200_gen/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1ki7tg7/dont_offload_gguf_layers_offload_tensors_200_gen/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-09T02:24:58+00:00</published>
  </entry>
</feed>
