<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>/r/LocalLLaMA/.rss</id>
  <title>LocalLlama</title>
  <updated>2025-05-04T00:31:34+00:00</updated>
  <link href="https://old.reddit.com/r/LocalLLaMA/" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <icon>https://www.redditstatic.com/icon.png/</icon>
  <subtitle>Subreddit to discuss about Llama, the large language model created by Meta AI.</subtitle>
  <entry>
    <id>t3_1kdre6g</id>
    <title>Dia-JAX – Run a 1.6B Text-to-Speech Model on TPU with JAX</title>
    <updated>2025-05-03T12:04:53+00:00</updated>
    <author>
      <name>/u/Due-Yoghurt2093</name>
      <uri>https://old.reddit.com/user/Due-Yoghurt2093</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;&lt;a href="https://github.com/jaco-bro/diajax"&gt;JAX port of the Dia TTS model&lt;/a&gt; from Nari Labs for inference on any machine.&lt;/p&gt; &lt;p&gt;``` pip install diajax==0.0.7&lt;/p&gt; &lt;p&gt;dia --text &amp;quot;Hey, I'm really sorry for getting back to you so late. (cough) But voice cloning is just super easy, it's barely an inconvenience at all. I will show you how.&amp;quot; --audio &amp;quot;assets/example_prompt.mp3&amp;quot; ```&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Due-Yoghurt2093"&gt; /u/Due-Yoghurt2093 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kdre6g/diajax_run_a_16b_texttospeech_model_on_tpu_with/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kdre6g/diajax_run_a_16b_texttospeech_model_on_tpu_with/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kdre6g/diajax_run_a_16b_texttospeech_model_on_tpu_with/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-03T12:04:53+00:00</published>
  </entry>
  <entry>
    <id>t3_1kdvlv6</id>
    <title>Note to LLM researchers: we need graded benchmarks measuring levels of difficulty where models work at 100% accuracy</title>
    <updated>2025-05-03T15:29:59+00:00</updated>
    <author>
      <name>/u/ethereel1</name>
      <uri>https://old.reddit.com/user/ethereel1</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Just about all benchmarks I've seen are designed to be challenging, with no model reaching 100% accurate results, the main purpose being relative assessment of models against each other. In production use, however, there are situations where we need to know that for the given use case, the model we want to use will be 100% reliable and accurate. So we need benchmarks with different levels of difficulty, with the easiest levels reliably saturated by the smallest models, and onward from there. If we had this, it would take a lot of the guesswork out of our attempts to use small models for tasks that have to be done right 100% of the time.&lt;/p&gt; &lt;p&gt;Now I might be told that this is simply not possible, that no matter how easy a task, no LLM can be guaranteed to always produce 100% accurate output. I don't know if this is true, but even if it is, it could be accounted for and the small possibility of error accepted. As long as a reasonably thorough benchmark at a set level of difficutly results in 100%, that would be good enough, never mind that such perfection may not be attainable in production.&lt;/p&gt; &lt;p&gt;What do you all think? Would this be of use to you?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/ethereel1"&gt; /u/ethereel1 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kdvlv6/note_to_llm_researchers_we_need_graded_benchmarks/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kdvlv6/note_to_llm_researchers_we_need_graded_benchmarks/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kdvlv6/note_to_llm_researchers_we_need_graded_benchmarks/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-03T15:29:59+00:00</published>
  </entry>
  <entry>
    <id>t3_1ke4juq</id>
    <title>How to get around slow prompt eval?</title>
    <updated>2025-05-03T22:10:31+00:00</updated>
    <author>
      <name>/u/antonlyap</name>
      <uri>https://old.reddit.com/user/antonlyap</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I'm running Qwen2.5 Coder 1.5B on my Ryzen 5 5625U APU using llama.cpp and Vulkan. I would like to use it as a code completion modal, however, I only get about 30t/s on prompt evaluation.&lt;/p&gt; &lt;p&gt;This means that ingesting a whole code file and generating a completion takes a lot of time, especially as context fills up.&lt;/p&gt; &lt;p&gt;I've tried the Continue.dev and llama.vscode extensions. The latter is more lightweight, but doesn't cancel the previous request when the file is modified.&lt;/p&gt; &lt;p&gt;Is there a way I can make local models more usable for code autocomplete? Should I perhaps try another engine? Is a newer MoE model going to have faster PP?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/antonlyap"&gt; /u/antonlyap &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ke4juq/how_to_get_around_slow_prompt_eval/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ke4juq/how_to_get_around_slow_prompt_eval/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1ke4juq/how_to_get_around_slow_prompt_eval/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-03T22:10:31+00:00</published>
  </entry>
  <entry>
    <id>t3_1kdv8by</id>
    <title>Is GLM-4's Long Context Performance Enough? An Undereducated Investigation</title>
    <updated>2025-05-03T15:12:59+00:00</updated>
    <author>
      <name>/u/vvimpcrvsh</name>
      <uri>https://old.reddit.com/user/vvimpcrvsh</uri>
    </author>
    <content type="html">&amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/vvimpcrvsh"&gt; /u/vvimpcrvsh &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://adamniederer.com/blog/llm-context-benchmarks.html"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kdv8by/is_glm4s_long_context_performance_enough_an/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kdv8by/is_glm4s_long_context_performance_enough_an/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-03T15:12:59+00:00</published>
  </entry>
  <entry>
    <id>t3_1kdzwyf</id>
    <title>Qwen3 on 3060 12GB VRAM and 16GB RAM</title>
    <updated>2025-05-03T18:38:40+00:00</updated>
    <author>
      <name>/u/RaviieR</name>
      <uri>https://old.reddit.com/user/RaviieR</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;is there any way to run this LLM on my PC? how to install and which model is suitable for my PC?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/RaviieR"&gt; /u/RaviieR &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kdzwyf/qwen3_on_3060_12gb_vram_and_16gb_ram/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kdzwyf/qwen3_on_3060_12gb_vram_and_16gb_ram/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kdzwyf/qwen3_on_3060_12gb_vram_and_16gb_ram/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-03T18:38:40+00:00</published>
  </entry>
  <entry>
    <id>t3_1kds51e</id>
    <title>Inference needs nontrivial amount of PCIe bandwidth (8x RTX 3090 rig, tensor parallelism)</title>
    <updated>2025-05-03T12:46:15+00:00</updated>
    <author>
      <name>/u/pmur12</name>
      <uri>https://old.reddit.com/user/pmur12</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I wanted to share my experience which is contrary to common opinion on Reddit that inference does not need PCIe bandwidth between GPUs. Hopefully this post will be informative to anyone who wants to design a large rig.&lt;/p&gt; &lt;p&gt;First, theoretical and real PCIe differ substantially. In my specific case, 4x PCIe only provides 1.6GB/s in single direction, whereas theoretical bandwidth is 4GB/s. This is on x399 threadripper machine and can be reproduced in multiple ways: nvtop during inference, all_reduce_perf from nccl, p2pBandwidthLatencyTest from cuda-samples.&lt;/p&gt; &lt;p&gt;Second, when doing tensor parallelism the required PCIe bandwidth between GPUs scales by the number of GPUs. So 8x GPUs will require 2x bandwidth for each GPU compared to 4x GPUs. This means that any data acquired on small rigs does directly apply when designing large rigs.&lt;/p&gt; &lt;p&gt;As a result, connecting 8 GPUs using 4x PCIe 3.0 is bad idea. I profiled prefill on Mistral Large 2411 on sglang (vllm was even slower) and saw around 80% of time spent communicating between GPUs. I really wanted 4x PCIe 3.0 to work, as 8x PCIe 4.0 adds 1500 Eur to the cost, but unfortunately the results are what they are. I will post again once GPUs are connected via 8x PCIe 4.0. Right now TechxGenus/Mistral-Large-Instruct-2411-AWQ provides me ~25 t/s generation and ~100 t/s prefill on 80k context.&lt;/p&gt; &lt;p&gt;Any similar experiences here?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/pmur12"&gt; /u/pmur12 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kds51e/inference_needs_nontrivial_amount_of_pcie/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kds51e/inference_needs_nontrivial_amount_of_pcie/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kds51e/inference_needs_nontrivial_amount_of_pcie/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-03T12:46:15+00:00</published>
  </entry>
  <entry>
    <id>t3_1kd4old</id>
    <title>Wife running our local llama, a bit slow because it's too large (the llama not my wife)</title>
    <updated>2025-05-02T16:04:05+00:00</updated>
    <author>
      <name>/u/Osama_Saba</name>
      <uri>https://old.reddit.com/user/Osama_Saba</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kd4old/wife_running_our_local_llama_a_bit_slow_because/"&gt; &lt;img alt="Wife running our local llama, a bit slow because it's too large (the llama not my wife)" src="https://preview.redd.it/vx6db70m6eye1.jpeg?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=c58f7f25eff35b200125a5a8beef9f4fce7ffd2e" title="Wife running our local llama, a bit slow because it's too large (the llama not my wife)" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Osama_Saba"&gt; /u/Osama_Saba &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://i.redd.it/vx6db70m6eye1.jpeg"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kd4old/wife_running_our_local_llama_a_bit_slow_because/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kd4old/wife_running_our_local_llama_a_bit_slow_because/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-02T16:04:05+00:00</published>
  </entry>
  <entry>
    <id>t3_1ke2kcp</id>
    <title>Dockerfile for Running BitNet-b1.58-2B-4T on ARM</title>
    <updated>2025-05-03T20:38:00+00:00</updated>
    <author>
      <name>/u/ajsween</name>
      <uri>https://old.reddit.com/user/ajsween</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;h3&gt;Repo&lt;/h3&gt; &lt;p&gt;&lt;a href="https://github.com/ajsween/bitnet-b1-58-arm-docker"&gt;GitHub: ajsween/bitnet-b1-58-arm-docker&lt;/a&gt;&lt;/p&gt; &lt;p&gt;I put this Dockerfile together so I could run the BitNet 1.58 model with less hassle on my M-series MacBook. Hopefully its useful to some else and saves you some time getting it running locally.&lt;/p&gt; &lt;h3&gt;Run interactive:&lt;/h3&gt; &lt;pre&gt;&lt;code&gt;docker run -it --rm bitnet-b1.58-2b-4t-arm:latest &lt;/code&gt;&lt;/pre&gt; &lt;h3&gt;Run noninteractive with arguments:&lt;/h3&gt; &lt;pre&gt;&lt;code&gt;docker run --rm bitnet-b1.58-2b-4t-arm:latest \ -m models/BitNet-b1.58-2B-4T/ggml-model-i2_s.gguf \ -p &amp;quot;Hello from BitNet on MacBook!&amp;quot; &lt;/code&gt;&lt;/pre&gt; &lt;h3&gt;Reference for run_interference.py (ENTRYPOINT):&lt;/h3&gt; &lt;pre&gt;&lt;code&gt;usage: run_inference.py [-h] [-m MODEL] [-n N_PREDICT] -p PROMPT [-t THREADS] [-c CTX_SIZE] [-temp TEMPERATURE] [-cnv] Run inference optional arguments: -h, --help show this help message and exit -m MODEL, --model MODEL Path to model file -n N_PREDICT, --n-predict N_PREDICT Number of tokens to predict when generating text -p PROMPT, --prompt PROMPT Prompt to generate text from -t THREADS, --threads THREADS Number of threads to use -c CTX_SIZE, --ctx-size CTX_SIZE Size of the prompt context -temp TEMPERATURE, --temperature TEMPERATURE Temperature, a hyperparameter that controls the randomness of the generated text -cnv, --conversation Whether to enable chat mode or not (for instruct models.) (When this option is turned on, the prompt specified by -p will be used as the system prompt.) &lt;/code&gt;&lt;/pre&gt; &lt;h3&gt;Dockerfile&lt;/h3&gt; &lt;pre&gt;&lt;code&gt;# Build stage FROM python:3.9-slim AS builder # Set environment variables ENV DEBIAN_FRONTEND=noninteractive ENV PYTHONDONTWRITEBYTECODE=1 ENV PYTHONUNBUFFERED=1 # Install build dependencies RUN apt-get update &amp;amp;&amp;amp; apt-get install -y \ python3-pip \ python3-dev \ cmake \ build-essential \ git \ software-properties-common \ wget \ &amp;amp;&amp;amp; rm -rf /var/lib/apt/lists/* # Install LLVM RUN wget -O - https://apt.llvm.org/llvm.sh | bash -s 18 # Clone the BitNet repository WORKDIR /build RUN git clone --recursive https://github.com/microsoft/BitNet.git # Install Python dependencies RUN pip install --no-cache-dir -r /build/BitNet/requirements.txt # Build BitNet WORKDIR /build/BitNet RUN pip install --no-cache-dir -r requirements.txt \ &amp;amp;&amp;amp; python utils/codegen_tl1.py \ --model bitnet_b1_58-3B \ --BM 160,320,320 \ --BK 64,128,64 \ --bm 32,64,32 \ &amp;amp;&amp;amp; export CC=clang-18 CXX=clang++-18 \ &amp;amp;&amp;amp; mkdir -p build &amp;amp;&amp;amp; cd build \ &amp;amp;&amp;amp; cmake .. -DCMAKE_BUILD_TYPE=Release \ &amp;amp;&amp;amp; make -j$(nproc) # Download the model RUN huggingface-cli download microsoft/BitNet-b1.58-2B-4T-gguf \ --local-dir /build/BitNet/models/BitNet-b1.58-2B-4T # Convert the model to GGUF format and sets up env. Probably not needed. RUN python setup_env.py -md /build/BitNet/models/BitNet-b1.58-2B-4T -q i2_s # Final stage FROM python:3.9-slim # Set environment variables. All but the last two are not used as they don't expand in the CMD step. ENV MODEL_PATH=/app/models/BitNet-b1.58-2B-4T/ggml-model-i2_s.gguf ENV NUM_TOKENS=1024 ENV NUM_THREADS=4 ENV CONTEXT_SIZE=4096 ENV PROMPT=&amp;quot;Hello from BitNet!&amp;quot; ENV PYTHONUNBUFFERED=1 ENV LD_LIBRARY_PATH=/usr/local/lib # Copy from builder stage WORKDIR /app COPY --from=builder /build/BitNet /app # Install Python dependencies (only runtime) RUN &amp;lt;&amp;lt;EOF pip install --no-cache-dir -r /app/requirements.txt cp /app/build/3rdparty/llama.cpp/ggml/src/libggml.so /usr/local/lib cp /app/build/3rdparty/llama.cpp/src/libllama.so /usr/local/lib EOF # Set working directory WORKDIR /app # Set entrypoint for more flexibility ENTRYPOINT [&amp;quot;python&amp;quot;, &amp;quot;./run_inference.py&amp;quot;] # Default command arguments CMD [&amp;quot;-m&amp;quot;, &amp;quot;/app/models/BitNet-b1.58-2B-4T/ggml-model-i2_s.gguf&amp;quot;, &amp;quot;-n&amp;quot;, &amp;quot;1024&amp;quot;, &amp;quot;-cnv&amp;quot;, &amp;quot;-t&amp;quot;, &amp;quot;4&amp;quot;, &amp;quot;-c&amp;quot;, &amp;quot;4096&amp;quot;, &amp;quot;-p&amp;quot;, &amp;quot;Hello from BitNet!&amp;quot;] &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/ajsween"&gt; /u/ajsween &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ke2kcp/dockerfile_for_running_bitnetb1582b4t_on_arm/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ke2kcp/dockerfile_for_running_bitnetb1582b4t_on_arm/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1ke2kcp/dockerfile_for_running_bitnetb1582b4t_on_arm/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-03T20:38:00+00:00</published>
  </entry>
  <entry>
    <id>t3_1ke1sei</id>
    <title>Surprising results fine tuning Qwen3-4B</title>
    <updated>2025-05-03T20:02:10+00:00</updated>
    <author>
      <name>/u/indicava</name>
      <uri>https://old.reddit.com/user/indicava</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I’ve had a lot of experience fine tuning Qwen2.5 models on a proprietary programming language which wasn’t in pre-training data. I have an extensive SFT dataset which I’ve used with pretty decent success on the Qwen2.5 models.&lt;/p&gt; &lt;p&gt;Naturally when the latest Qwen3 crop dropped I was keen on seeing the results I’ll get with them. &lt;/p&gt; &lt;p&gt;Here’s the strange part: &lt;/p&gt; &lt;p&gt;I use an evaluation dataset of 50 coding tasks which I check against my fine tuned models. I actually send the model’s response to a compiler to check if it’s legible code.&lt;/p&gt; &lt;p&gt;Fine tuned Qwen3-4B (Default) Thinking ON - 40% success rate&lt;/p&gt; &lt;p&gt;Fine tuned Qwen3-4B Thinking OFF - 64% success rate&lt;/p&gt; &lt;p&gt;WTF? (Sorry for being crass)&lt;/p&gt; &lt;p&gt;A few side notes:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;p&gt;These are both great results, base Qwen3-4B scores 0% and they are much better than Qwen2.5-3B&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;My SFT dataset does not contain &amp;lt;think&amp;gt;ing tags&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;I’m doing a full parameter fine tune at BF16 precision. No LoRA’s or quants.&lt;/p&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Would love to hear some theories on why this is happening. And any ideas how to improve this.&lt;/p&gt; &lt;p&gt;As I said above, in general these models are awesome and performing (for my purposes) several factors better than Qwen2.5. Can’t wait to fine tune bigger sizes soon (as soon as I figure this out).&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/indicava"&gt; /u/indicava &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ke1sei/surprising_results_fine_tuning_qwen34b/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ke1sei/surprising_results_fine_tuning_qwen34b/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1ke1sei/surprising_results_fine_tuning_qwen34b/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-03T20:02:10+00:00</published>
  </entry>
  <entry>
    <id>t3_1kdpy20</id>
    <title>I trained a Language Model to schedule events with GRPO! (full project inside)</title>
    <updated>2025-05-03T10:34:41+00:00</updated>
    <author>
      <name>/u/anakin_87</name>
      <uri>https://old.reddit.com/user/anakin_87</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kdpy20/i_trained_a_language_model_to_schedule_events/"&gt; &lt;img alt="I trained a Language Model to schedule events with GRPO! (full project inside)" src="https://preview.redd.it/zjcglrbjnjye1.gif?width=640&amp;amp;crop=smart&amp;amp;s=365257273a6c8ebb24c3d9d5ca79c52df9d4a9e2" title="I trained a Language Model to schedule events with GRPO! (full project inside)" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I experimented with GRPO lately.&lt;/p&gt; &lt;p&gt;I am fascinated by models learning from prompts and rewards - no example answers needed like in Supervised Fine-Tuning.&lt;/p&gt; &lt;p&gt;After the DeepSeek boom, everyone is trying GRPO with GSM8K or the Countdown Game...&lt;/p&gt; &lt;p&gt;I wanted a different challenge, like &lt;strong&gt;&lt;em&gt;teaching a model to create a schedule from a list of events and priorities&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt; &lt;p&gt;Choosing an original problem forced me to:&lt;br /&gt; 🤔 Think about the problem setting&lt;br /&gt; 🧬 Generate data&lt;br /&gt; 🤏 Choose the right base model&lt;br /&gt; 🏆 Design reward functions&lt;br /&gt; 🔄 Run multiple rounds of training, hoping that my model would learn something.&lt;/p&gt; &lt;p&gt;A fun and rewarding 😄 experience.&lt;/p&gt; &lt;p&gt;I learned a lot of things, that I want to share with you. 👇&lt;br /&gt; ✍️ Blog post: &lt;a href="https://huggingface.co/blog/anakin87/qwen-scheduler-grpo"&gt;https://huggingface.co/blog/anakin87/qwen-scheduler-grpo&lt;/a&gt;&lt;br /&gt; 💻 Code: &lt;a href="https://github.com/anakin87/qwen-scheduler-grpo"&gt;https://github.com/anakin87/qwen-scheduler-grpo&lt;/a&gt;&lt;br /&gt; 🤗 Hugging Face collection (dataset and model): &lt;a href="https://huggingface.co/collections/anakin87/qwen-scheduler-grpo-680bcc583e817390525a8837"&gt;https://huggingface.co/collections/anakin87/qwen-scheduler-grpo-680bcc583e817390525a8837&lt;/a&gt;&lt;/p&gt; &lt;p&gt;🔥 Some hot takes from my experiment:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;GRPO is cool for verifiable tasks, but is more about eliciting desired behaviors from the trained model than teaching completely new stuff to it.&lt;/li&gt; &lt;li&gt;Choosing the right base model (and size) matters.&lt;/li&gt; &lt;li&gt;&amp;quot;Aha moment&amp;quot; might be over-hyped.&lt;/li&gt; &lt;li&gt;Reward functions design is crucial. If your rewards are not robust, you might experience reward hacking (as it happened to me).&lt;/li&gt; &lt;li&gt;Unsloth is great for saving GPU, but beware of bugs.&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/anakin_87"&gt; /u/anakin_87 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://i.redd.it/zjcglrbjnjye1.gif"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kdpy20/i_trained_a_language_model_to_schedule_events/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kdpy20/i_trained_a_language_model_to_schedule_events/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-03T10:34:41+00:00</published>
  </entry>
  <entry>
    <id>t3_1kdpjuz</id>
    <title>Mistral-Small-3.1-24B-Instruct-2503 &lt;32b UGI scores</title>
    <updated>2025-05-03T10:08:00+00:00</updated>
    <author>
      <name>/u/Hujkis9</name>
      <uri>https://old.reddit.com/user/Hujkis9</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kdpjuz/mistralsmall3124binstruct2503_32b_ugi_scores/"&gt; &lt;img alt="Mistral-Small-3.1-24B-Instruct-2503 &amp;lt;32b UGI scores" src="https://preview.redd.it/brtajevzjjye1.jpeg?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=dc88e9798928b0e6c47dd1e936f8e2ecad4c4d28" title="Mistral-Small-3.1-24B-Instruct-2503 &amp;lt;32b UGI scores" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;It's been there for some time and I wonder why is nobody talking about it. I mean, from the handful of models that have a higher UGI score, all of them have lower natint and coding scores. Looks to me like an ideal choice for uncensored single-gpu inference? Plus, it supports tool usage. Am I missing something? :)&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Hujkis9"&gt; /u/Hujkis9 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://i.redd.it/brtajevzjjye1.jpeg"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kdpjuz/mistralsmall3124binstruct2503_32b_ugi_scores/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kdpjuz/mistralsmall3124binstruct2503_32b_ugi_scores/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-03T10:08:00+00:00</published>
  </entry>
  <entry>
    <id>t3_1kdutys</id>
    <title>deepseek r2 distill qwen 3?</title>
    <updated>2025-05-03T14:55:05+00:00</updated>
    <author>
      <name>/u/allforyi_mf</name>
      <uri>https://old.reddit.com/user/allforyi_mf</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;hmm i really hope they make somehthing like that when the R2 comeout, and that the community can push doing something like this i think it will be an insane model for finetuning and local run. what do you think about this dream?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/allforyi_mf"&gt; /u/allforyi_mf &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kdutys/deepseek_r2_distill_qwen_3/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kdutys/deepseek_r2_distill_qwen_3/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kdutys/deepseek_r2_distill_qwen_3/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-03T14:55:05+00:00</published>
  </entry>
  <entry>
    <id>t3_1kdh6rl</id>
    <title>Qwen 3 30B Pruned to 16B by Leveraging Biased Router Distributions, 235B Pruned to 150B Coming Soon!</title>
    <updated>2025-05-03T01:18:05+00:00</updated>
    <author>
      <name>/u/TKGaming_11</name>
      <uri>https://old.reddit.com/user/TKGaming_11</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kdh6rl/qwen_3_30b_pruned_to_16b_by_leveraging_biased/"&gt; &lt;img alt="Qwen 3 30B Pruned to 16B by Leveraging Biased Router Distributions, 235B Pruned to 150B Coming Soon!" src="https://external-preview.redd.it/ySpO_7RYQ0SVsPSOMMWIe_bDz8SWExrfxn-1JYoQHZ8.jpg?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=20bab6ab4e35ba7f6eda9be1e741fcf3e281b406" title="Qwen 3 30B Pruned to 16B by Leveraging Biased Router Distributions, 235B Pruned to 150B Coming Soon!" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/TKGaming_11"&gt; /u/TKGaming_11 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://huggingface.co/kalomaze/Qwen3-16B-A3B"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kdh6rl/qwen_3_30b_pruned_to_16b_by_leveraging_biased/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kdh6rl/qwen_3_30b_pruned_to_16b_by_leveraging_biased/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-03T01:18:05+00:00</published>
  </entry>
  <entry>
    <id>t3_1kdul92</id>
    <title>Incredible Maverick speeds on single RTX3090 - Ik_llama solved my issue</title>
    <updated>2025-05-03T14:44:09+00:00</updated>
    <author>
      <name>/u/Conscious_Cut_6144</name>
      <uri>https://old.reddit.com/user/Conscious_Cut_6144</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I was getting good generation speeds on Maverick before, but PP was slow.&lt;br /&gt; This is now solved, I'm getting full GPU level performance on a 400B model with 1 gpu.&lt;br /&gt; And the new Xeon DDR5 build takes it to the next level:&lt;/p&gt; &lt;p&gt;Xeon Platinum 8480 &lt;strong&gt;ES&lt;/strong&gt; - $170&lt;br /&gt; 8x 32GB DDR5 4800 RDIMM used - $722&lt;br /&gt; 1x Gigabyte MS03-CE0 - $753 (I got a MS73-HB1 but would recommend single CPU)&lt;br /&gt; RTX 3090 - ~$750&lt;br /&gt; Heatsink + PSU + Case + SSD = ~$500&lt;/p&gt; &lt;p&gt;prompt eval time = 835.47 ms / 372 tokens ( 2.25 ms per token, &lt;strong&gt;445.26 tokens per second&lt;/strong&gt;&lt;br /&gt; generation eval time = 43317.29 ms / 1763 runs ( 24.57 ms per token, &lt;strong&gt;40.70 tokens per second&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;prompt eval time = 3290.21 ms / 1623 tokens ( 2.03 ms per token, &lt;strong&gt;493.28 tokens per second&lt;/strong&gt;&lt;br /&gt; generation eval time = 7530.90 ms / 303 runs ( 24.85 ms per token, &lt;strong&gt;40.23 tokens per second&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;prompt eval time = 13713.39 ms / 7012 tokens ( 1.96 ms per token, &lt;strong&gt;511.33 tokens per second&lt;/strong&gt;&lt;br /&gt; generation eval time = 16773.69 ms / 584 runs ( 28.72 ms per token, &lt;strong&gt;34.82 tokens per second&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;This is with Ik_Llama and the following command:&lt;br /&gt; ./llama-server -m Llama-4-Maverick-17B-128E-Instruct-UD-IQ4_XS-00001-of-00005.gguf -c 32000 -fa -fmoe -amb 512 -rtr -ctk q8_0 -ctv q8_0 --host &lt;a href="http://0.0.0.0"&gt;0.0.0.0&lt;/a&gt; --port 8000 --alias Llama4-Maverick -ngl 99 -t 54 -ot &amp;quot;.*ffn_.*_exps.*=CPU&amp;quot;&lt;/p&gt; &lt;p&gt;Using an ES cpu is somewhat risky, but a real 8480 cost $9k&lt;/p&gt; &lt;p&gt;This also works fine with an even cheaper DDR4 epyc cpu, getting 200+ Promp speeds and more like 28T/s gen with the same command.&lt;/p&gt; &lt;p&gt;This really makes me really hopeful for Llama 4 reasoner!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Conscious_Cut_6144"&gt; /u/Conscious_Cut_6144 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kdul92/incredible_maverick_speeds_on_single_rtx3090_ik/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kdul92/incredible_maverick_speeds_on_single_rtx3090_ik/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kdul92/incredible_maverick_speeds_on_single_rtx3090_ik/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-03T14:44:09+00:00</published>
  </entry>
  <entry>
    <id>t3_1kdqcjk</id>
    <title>Teaching LLMs to use tools with RL! Successfully trained 0.5B/3B Qwen models to use a calculator tool 🔨</title>
    <updated>2025-05-03T11:00:49+00:00</updated>
    <author>
      <name>/u/DanAiTuning</name>
      <uri>https://old.reddit.com/user/DanAiTuning</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kdqcjk/teaching_llms_to_use_tools_with_rl_successfully/"&gt; &lt;img alt="Teaching LLMs to use tools with RL! Successfully trained 0.5B/3B Qwen models to use a calculator tool 🔨" src="https://external-preview.redd.it/p1q0NLBPvDKer4wLl6MMJh8XzyT5jyGdKYucra-ZJAU.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=f79f79565267c758b305dee548b6ca5439f9e39a" title="Teaching LLMs to use tools with RL! Successfully trained 0.5B/3B Qwen models to use a calculator tool 🔨" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;&lt;strong&gt;👋 I recently had great fun training small language models (Qwen2.5 0.5B &amp;amp; 3B) to use a slightly complex calculator syntax through multi-turn reinforcement learning. Results were pretty cool: the 3B model went from 27% to 89% accuracy!&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;What I did:&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Built a custom environment where model's output can be parsed &amp;amp; calculated&lt;/li&gt; &lt;li&gt;Used Claude-3.5-Haiku as a reward model judge + software verifier&lt;/li&gt; &lt;li&gt;Applied GRPO for training&lt;/li&gt; &lt;li&gt;Total cost: ~$40 (~£30) on rented GPUs&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;Key results:&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Qwen 0.5B: 0.6% → 34% accuracy (+33 points)&lt;/li&gt; &lt;li&gt;Qwen 3B: 27% → 89% accuracy (+62 points)&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;Technical details:&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The model parses nested operations like: &amp;quot;What's the sum of 987 times 654, and 987 divided by the total of 321 and 11?&amp;quot;&lt;/li&gt; &lt;li&gt;Uses XML/YAML format to structure calculator calls&lt;/li&gt; &lt;li&gt;Rewards combine LLM judging + code verification&lt;/li&gt; &lt;li&gt;1 epoch training with 8 samples per prompt&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;My &lt;a href="https://github.com/Danau5tin/calculator_agent_rl"&gt;Github repo&lt;/a&gt; has way more technical details if you're interested!&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Models are now on HuggingFace:&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://huggingface.co/Dan-AiTuning/calculator_agent_qwen2.5_0.5b"&gt;Qwen 2.5 0.5B Calculator Agent&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://huggingface.co/Dan-AiTuning/calculator_agent_qwen2.5_3b"&gt;Qwen 2.5 3B Calculator Agent&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Thought I'd share because I believe the future may tend toward multi-turn RL with tool use agentic LLMs at the center.&lt;/p&gt; &lt;p&gt;(Built using the &lt;a href="https://github.com/willccbb/verifiers"&gt;Verifiers&lt;/a&gt; RL framework - It is a fantastic repo! Although not quite ready for prime time, it was extremely valuable)&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/DanAiTuning"&gt; /u/DanAiTuning &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/gallery/1kdqcjk"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kdqcjk/teaching_llms_to_use_tools_with_rl_successfully/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kdqcjk/teaching_llms_to_use_tools_with_rl_successfully/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-03T11:00:49+00:00</published>
  </entry>
  <entry>
    <id>t3_1kdqibi</id>
    <title>Qwen3 8b on android (it's not half bad)</title>
    <updated>2025-05-03T11:10:50+00:00</updated>
    <author>
      <name>/u/SofeyKujo</name>
      <uri>https://old.reddit.com/user/SofeyKujo</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kdqibi/qwen3_8b_on_android_its_not_half_bad/"&gt; &lt;img alt="Qwen3 8b on android (it's not half bad)" src="https://preview.redd.it/54hu64e7vjye1.jpeg?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=0c65d6be61f794ea572b3b96b13c76ebaf908d18" title="Qwen3 8b on android (it's not half bad)" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;A while ago, I decided to buy a phone with a Snapdragon 8 Gen 3 SoC.&lt;/p&gt; &lt;p&gt;Naturally, I wanted to push it beyond basic tasks and see how well it could handle local LLMs.&lt;/p&gt; &lt;p&gt;I set up &lt;a href="https://github.com/Vali-98/ChatterUI"&gt;ChatterUI&lt;/a&gt;, imported a model, and asked it a question. It took 101 seconds to respond— which is not bad at all, considering the model is typically designed for use on desktop GPUs.&lt;/p&gt; &lt;hr /&gt; &lt;p&gt;And that brings me to the following question: what other models around this size (11B or lower) would you guys recommend?, did anybody else try this ?&lt;/p&gt; &lt;p&gt;The one I tested seems decent for general Q&amp;amp;A, but it's pretty bad at roleplay. I'd really appreciate any suggestions for roleplay/translation/coding models that can work as efficiently.&lt;/p&gt; &lt;p&gt;Thank you! &lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/SofeyKujo"&gt; /u/SofeyKujo &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://i.redd.it/54hu64e7vjye1.jpeg"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kdqibi/qwen3_8b_on_android_its_not_half_bad/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kdqibi/qwen3_8b_on_android_its_not_half_bad/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-03T11:10:50+00:00</published>
  </entry>
  <entry>
    <id>t3_1ke26sl</id>
    <title>Another Attempt to Measure Speed for Qwen3 MoE on 2x4090, 2x3090, M3 Max with Llama.cpp, VLLM, MLX</title>
    <updated>2025-05-03T20:20:44+00:00</updated>
    <author>
      <name>/u/chibop1</name>
      <uri>https://old.reddit.com/user/chibop1</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;First, thank you all the people who gave constructive feedback on my previous attempt. Hopefully this is better. :)&lt;/p&gt; &lt;h3&gt;Observation&lt;/h3&gt; &lt;p&gt;TL;TR: As expected, fastest to slowest: RTX 4090 VLLM, RTX 4090 Llama.CPP, RTX 3090 Llama.CPP, M3 Max MLX, M3 Max Llama.CPP&lt;/p&gt; &lt;h3&gt;Notes&lt;/h3&gt; &lt;p&gt;To ensure consistency, I used a custom Python script that sends requests to the server via the OpenAI-compatible API. Metrics were calculated as follows:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Time to First Token (TTFT): Measured from the start of the streaming request to the first streaming event received.&lt;/li&gt; &lt;li&gt;Prompt Processing Speed (PP): Number of prompt tokens divided by TTFT.&lt;/li&gt; &lt;li&gt;Token Generation Speed (TG): Number of generated tokens divided by (total duration - TTFT).&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The displayed results were truncated to two decimal places, but the calculations used full precision.&lt;/p&gt; &lt;p&gt;Some servers, like MLX-LM, don't let you disable prompt caching. To work around this, I made the script to prepend 40% new material in the beginning of next longer prompt to avoid caching effect.&lt;/p&gt; &lt;h3&gt;Setup&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;VLLM 0.8.5.post1&lt;/li&gt; &lt;li&gt;MLX-LM 0.24.0, MLX 0.25.1&lt;/li&gt; &lt;li&gt;Llama.CPP 5269&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Each row in the results represents a test (a specific combination of machine, engine, and prompt length). There are 5 tests per prompt length.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Setup 1: 2xRTX-4090, VLLM, FP8, tensor-parallel-size 2&lt;/li&gt; &lt;li&gt;Setup 2: 2xRTX-4090, Llama.cpp, q8_0, flash attention&lt;/li&gt; &lt;li&gt;Setup 3: 2x3090, Llama.cpp, q8_0, flash attention&lt;/li&gt; &lt;li&gt;Setup 4: M3Max, MLX, 8bit&lt;/li&gt; &lt;li&gt;Setup 5: M3Max, Llama.cpp, q8_0, flash attention&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;VLLM doesn't support Mac. Also there's no test with RTX-3090 and VLLM either because you can't run Qwen3 MoE in FP8, w8a8, gptq-int8, gguf, with RTX-3090 using VLLM. &lt;/p&gt; &lt;table&gt;&lt;thead&gt; &lt;tr&gt; &lt;th&gt;Machine&lt;/th&gt; &lt;th&gt;Engine&lt;/th&gt; &lt;th&gt;Prompt Tokens&lt;/th&gt; &lt;th&gt;PP&lt;/th&gt; &lt;th&gt;TTFT&lt;/th&gt; &lt;th&gt;Generated Tokens&lt;/th&gt; &lt;th&gt;TG&lt;/th&gt; &lt;th&gt;Duration&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt;&lt;tbody&gt; &lt;tr&gt; &lt;td&gt;rtx4090&lt;/td&gt; &lt;td&gt;VLLM&lt;/td&gt; &lt;td&gt;702&lt;/td&gt; &lt;td&gt;6823.88&lt;/td&gt; &lt;td&gt;0.10&lt;/td&gt; &lt;td&gt;1334&lt;/td&gt; &lt;td&gt;93.73&lt;/td&gt; &lt;td&gt;14.34&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX4090&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;702&lt;/td&gt; &lt;td&gt;2521.87&lt;/td&gt; &lt;td&gt;0.28&lt;/td&gt; &lt;td&gt;1540&lt;/td&gt; &lt;td&gt;100.87&lt;/td&gt; &lt;td&gt;15.55&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;702&lt;/td&gt; &lt;td&gt;1632.82&lt;/td&gt; &lt;td&gt;0.43&lt;/td&gt; &lt;td&gt;1258&lt;/td&gt; &lt;td&gt;84.04&lt;/td&gt; &lt;td&gt;15.40&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;M3Max&lt;/td&gt; &lt;td&gt;MLX&lt;/td&gt; &lt;td&gt;702&lt;/td&gt; &lt;td&gt;1216.27&lt;/td&gt; &lt;td&gt;0.57&lt;/td&gt; &lt;td&gt;1296&lt;/td&gt; &lt;td&gt;65.69&lt;/td&gt; &lt;td&gt;20.30&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;M3Max&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;702&lt;/td&gt; &lt;td&gt;290.22&lt;/td&gt; &lt;td&gt;2.42&lt;/td&gt; &lt;td&gt;1485&lt;/td&gt; &lt;td&gt;55.79&lt;/td&gt; &lt;td&gt;29.04&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;rtx4090&lt;/td&gt; &lt;td&gt;VLLM&lt;/td&gt; &lt;td&gt;959&lt;/td&gt; &lt;td&gt;6837.26&lt;/td&gt; &lt;td&gt;0.14&lt;/td&gt; &lt;td&gt;1337&lt;/td&gt; &lt;td&gt;94.74&lt;/td&gt; &lt;td&gt;14.25&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX4090&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;959&lt;/td&gt; &lt;td&gt;2657.34&lt;/td&gt; &lt;td&gt;0.36&lt;/td&gt; &lt;td&gt;1187&lt;/td&gt; &lt;td&gt;97.13&lt;/td&gt; &lt;td&gt;12.58&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;959&lt;/td&gt; &lt;td&gt;1685.90&lt;/td&gt; &lt;td&gt;0.57&lt;/td&gt; &lt;td&gt;1487&lt;/td&gt; &lt;td&gt;83.67&lt;/td&gt; &lt;td&gt;18.34&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;M3Max&lt;/td&gt; &lt;td&gt;MLX&lt;/td&gt; &lt;td&gt;959&lt;/td&gt; &lt;td&gt;1214.74&lt;/td&gt; &lt;td&gt;0.79&lt;/td&gt; &lt;td&gt;1523&lt;/td&gt; &lt;td&gt;65.09&lt;/td&gt; &lt;td&gt;24.18&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;M3Max&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;959&lt;/td&gt; &lt;td&gt;465.91&lt;/td&gt; &lt;td&gt;2.06&lt;/td&gt; &lt;td&gt;1337&lt;/td&gt; &lt;td&gt;55.43&lt;/td&gt; &lt;td&gt;26.18&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;rtx4090&lt;/td&gt; &lt;td&gt;VLLM&lt;/td&gt; &lt;td&gt;1306&lt;/td&gt; &lt;td&gt;7214.16&lt;/td&gt; &lt;td&gt;0.18&lt;/td&gt; &lt;td&gt;1167&lt;/td&gt; &lt;td&gt;94.17&lt;/td&gt; &lt;td&gt;12.57&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX4090&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;1306&lt;/td&gt; &lt;td&gt;2646.48&lt;/td&gt; &lt;td&gt;0.49&lt;/td&gt; &lt;td&gt;1114&lt;/td&gt; &lt;td&gt;98.95&lt;/td&gt; &lt;td&gt;11.75&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;1306&lt;/td&gt; &lt;td&gt;1674.10&lt;/td&gt; &lt;td&gt;0.78&lt;/td&gt; &lt;td&gt;995&lt;/td&gt; &lt;td&gt;83.36&lt;/td&gt; &lt;td&gt;12.72&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;M3Max&lt;/td&gt; &lt;td&gt;MLX&lt;/td&gt; &lt;td&gt;1306&lt;/td&gt; &lt;td&gt;1258.91&lt;/td&gt; &lt;td&gt;1.04&lt;/td&gt; &lt;td&gt;1119&lt;/td&gt; &lt;td&gt;64.76&lt;/td&gt; &lt;td&gt;18.31&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;M3Max&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;1306&lt;/td&gt; &lt;td&gt;458.79&lt;/td&gt; &lt;td&gt;2.85&lt;/td&gt; &lt;td&gt;1213&lt;/td&gt; &lt;td&gt;55.00&lt;/td&gt; &lt;td&gt;24.90&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;rtx4090&lt;/td&gt; &lt;td&gt;VLLM&lt;/td&gt; &lt;td&gt;1774&lt;/td&gt; &lt;td&gt;7857.53&lt;/td&gt; &lt;td&gt;0.23&lt;/td&gt; &lt;td&gt;1353&lt;/td&gt; &lt;td&gt;93.24&lt;/td&gt; &lt;td&gt;14.74&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX4090&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;1774&lt;/td&gt; &lt;td&gt;2625.51&lt;/td&gt; &lt;td&gt;0.68&lt;/td&gt; &lt;td&gt;1282&lt;/td&gt; &lt;td&gt;98.68&lt;/td&gt; &lt;td&gt;13.67&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;1774&lt;/td&gt; &lt;td&gt;1730.67&lt;/td&gt; &lt;td&gt;1.03&lt;/td&gt; &lt;td&gt;1411&lt;/td&gt; &lt;td&gt;82.66&lt;/td&gt; &lt;td&gt;18.09&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;M3Max&lt;/td&gt; &lt;td&gt;MLX&lt;/td&gt; &lt;td&gt;1774&lt;/td&gt; &lt;td&gt;1276.55&lt;/td&gt; &lt;td&gt;1.39&lt;/td&gt; &lt;td&gt;1330&lt;/td&gt; &lt;td&gt;63.03&lt;/td&gt; &lt;td&gt;22.49&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;M3Max&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;1774&lt;/td&gt; &lt;td&gt;321.31&lt;/td&gt; &lt;td&gt;5.52&lt;/td&gt; &lt;td&gt;1281&lt;/td&gt; &lt;td&gt;54.26&lt;/td&gt; &lt;td&gt;29.13&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;rtx4090&lt;/td&gt; &lt;td&gt;VLLM&lt;/td&gt; &lt;td&gt;2584&lt;/td&gt; &lt;td&gt;7851.00&lt;/td&gt; &lt;td&gt;0.33&lt;/td&gt; &lt;td&gt;1369&lt;/td&gt; &lt;td&gt;92.48&lt;/td&gt; &lt;td&gt;15.13&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX4090&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;2584&lt;/td&gt; &lt;td&gt;2634.01&lt;/td&gt; &lt;td&gt;0.98&lt;/td&gt; &lt;td&gt;1308&lt;/td&gt; &lt;td&gt;97.20&lt;/td&gt; &lt;td&gt;14.44&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;2584&lt;/td&gt; &lt;td&gt;1728.13&lt;/td&gt; &lt;td&gt;1.50&lt;/td&gt; &lt;td&gt;1334&lt;/td&gt; &lt;td&gt;81.80&lt;/td&gt; &lt;td&gt;17.80&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;M3Max&lt;/td&gt; &lt;td&gt;MLX&lt;/td&gt; &lt;td&gt;2584&lt;/td&gt; &lt;td&gt;1302.66&lt;/td&gt; &lt;td&gt;1.98&lt;/td&gt; &lt;td&gt;1247&lt;/td&gt; &lt;td&gt;60.79&lt;/td&gt; &lt;td&gt;22.49&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;M3Max&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;2584&lt;/td&gt; &lt;td&gt;449.35&lt;/td&gt; &lt;td&gt;5.75&lt;/td&gt; &lt;td&gt;1321&lt;/td&gt; &lt;td&gt;53.06&lt;/td&gt; &lt;td&gt;30.65&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;rtx4090&lt;/td&gt; &lt;td&gt;VLLM&lt;/td&gt; &lt;td&gt;3557&lt;/td&gt; &lt;td&gt;8619.84&lt;/td&gt; &lt;td&gt;0.41&lt;/td&gt; &lt;td&gt;1682&lt;/td&gt; &lt;td&gt;92.46&lt;/td&gt; &lt;td&gt;18.60&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX4090&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;3557&lt;/td&gt; &lt;td&gt;2684.50&lt;/td&gt; &lt;td&gt;1.33&lt;/td&gt; &lt;td&gt;2000&lt;/td&gt; &lt;td&gt;93.68&lt;/td&gt; &lt;td&gt;22.67&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;3557&lt;/td&gt; &lt;td&gt;1779.73&lt;/td&gt; &lt;td&gt;2.00&lt;/td&gt; &lt;td&gt;1414&lt;/td&gt; &lt;td&gt;80.31&lt;/td&gt; &lt;td&gt;19.60&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;M3Max&lt;/td&gt; &lt;td&gt;MLX&lt;/td&gt; &lt;td&gt;3557&lt;/td&gt; &lt;td&gt;1272.91&lt;/td&gt; &lt;td&gt;2.79&lt;/td&gt; &lt;td&gt;2001&lt;/td&gt; &lt;td&gt;59.81&lt;/td&gt; &lt;td&gt;36.25&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;M3Max&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;3557&lt;/td&gt; &lt;td&gt;443.93&lt;/td&gt; &lt;td&gt;8.01&lt;/td&gt; &lt;td&gt;1481&lt;/td&gt; &lt;td&gt;51.52&lt;/td&gt; &lt;td&gt;36.76&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;rtx4090&lt;/td&gt; &lt;td&gt;VLLM&lt;/td&gt; &lt;td&gt;4739&lt;/td&gt; &lt;td&gt;7944.01&lt;/td&gt; &lt;td&gt;0.60&lt;/td&gt; &lt;td&gt;1710&lt;/td&gt; &lt;td&gt;91.43&lt;/td&gt; &lt;td&gt;19.30&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX4090&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;4739&lt;/td&gt; &lt;td&gt;2622.29&lt;/td&gt; &lt;td&gt;1.81&lt;/td&gt; &lt;td&gt;1082&lt;/td&gt; &lt;td&gt;91.46&lt;/td&gt; &lt;td&gt;13.64&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;4739&lt;/td&gt; &lt;td&gt;1736.44&lt;/td&gt; &lt;td&gt;2.73&lt;/td&gt; &lt;td&gt;1968&lt;/td&gt; &lt;td&gt;78.02&lt;/td&gt; &lt;td&gt;27.95&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;M3Max&lt;/td&gt; &lt;td&gt;MLX&lt;/td&gt; &lt;td&gt;4739&lt;/td&gt; &lt;td&gt;1239.93&lt;/td&gt; &lt;td&gt;3.82&lt;/td&gt; &lt;td&gt;1836&lt;/td&gt; &lt;td&gt;58.63&lt;/td&gt; &lt;td&gt;35.14&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;M3Max&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;4739&lt;/td&gt; &lt;td&gt;421.45&lt;/td&gt; &lt;td&gt;11.24&lt;/td&gt; &lt;td&gt;1472&lt;/td&gt; &lt;td&gt;49.94&lt;/td&gt; &lt;td&gt;40.72&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;rtx4090&lt;/td&gt; &lt;td&gt;VLLM&lt;/td&gt; &lt;td&gt;6520&lt;/td&gt; &lt;td&gt;8330.26&lt;/td&gt; &lt;td&gt;0.78&lt;/td&gt; &lt;td&gt;1588&lt;/td&gt; &lt;td&gt;90.54&lt;/td&gt; &lt;td&gt;18.32&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX4090&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;6520&lt;/td&gt; &lt;td&gt;2616.54&lt;/td&gt; &lt;td&gt;2.49&lt;/td&gt; &lt;td&gt;1471&lt;/td&gt; &lt;td&gt;87.03&lt;/td&gt; &lt;td&gt;19.39&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;6520&lt;/td&gt; &lt;td&gt;1726.75&lt;/td&gt; &lt;td&gt;3.78&lt;/td&gt; &lt;td&gt;2000&lt;/td&gt; &lt;td&gt;75.44&lt;/td&gt; &lt;td&gt;30.29&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;M3Max&lt;/td&gt; &lt;td&gt;MLX&lt;/td&gt; &lt;td&gt;6520&lt;/td&gt; &lt;td&gt;1164.00&lt;/td&gt; &lt;td&gt;5.60&lt;/td&gt; &lt;td&gt;1546&lt;/td&gt; &lt;td&gt;55.89&lt;/td&gt; &lt;td&gt;33.26&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;M3Max&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;6520&lt;/td&gt; &lt;td&gt;418.88&lt;/td&gt; &lt;td&gt;15.57&lt;/td&gt; &lt;td&gt;1998&lt;/td&gt; &lt;td&gt;47.61&lt;/td&gt; &lt;td&gt;57.53&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;rtx4090&lt;/td&gt; &lt;td&gt;VLLM&lt;/td&gt; &lt;td&gt;9101&lt;/td&gt; &lt;td&gt;8156.34&lt;/td&gt; &lt;td&gt;1.12&lt;/td&gt; &lt;td&gt;1571&lt;/td&gt; &lt;td&gt;88.01&lt;/td&gt; &lt;td&gt;18.97&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX4090&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;9101&lt;/td&gt; &lt;td&gt;2563.10&lt;/td&gt; &lt;td&gt;3.55&lt;/td&gt; &lt;td&gt;1342&lt;/td&gt; &lt;td&gt;83.52&lt;/td&gt; &lt;td&gt;19.62&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;9101&lt;/td&gt; &lt;td&gt;1661.47&lt;/td&gt; &lt;td&gt;5.48&lt;/td&gt; &lt;td&gt;1445&lt;/td&gt; &lt;td&gt;72.36&lt;/td&gt; &lt;td&gt;25.45&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;M3Max&lt;/td&gt; &lt;td&gt;MLX&lt;/td&gt; &lt;td&gt;9101&lt;/td&gt; &lt;td&gt;1061.38&lt;/td&gt; &lt;td&gt;8.57&lt;/td&gt; &lt;td&gt;1601&lt;/td&gt; &lt;td&gt;52.07&lt;/td&gt; &lt;td&gt;39.32&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;M3Max&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;9101&lt;/td&gt; &lt;td&gt;397.69&lt;/td&gt; &lt;td&gt;22.88&lt;/td&gt; &lt;td&gt;1941&lt;/td&gt; &lt;td&gt;44.81&lt;/td&gt; &lt;td&gt;66.20&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;rtx4090&lt;/td&gt; &lt;td&gt;VLLM&lt;/td&gt; &lt;td&gt;12430&lt;/td&gt; &lt;td&gt;6590.37&lt;/td&gt; &lt;td&gt;1.89&lt;/td&gt; &lt;td&gt;1805&lt;/td&gt; &lt;td&gt;84.48&lt;/td&gt; &lt;td&gt;23.25&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX4090&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;12430&lt;/td&gt; &lt;td&gt;2441.21&lt;/td&gt; &lt;td&gt;5.09&lt;/td&gt; &lt;td&gt;1573&lt;/td&gt; &lt;td&gt;78.33&lt;/td&gt; &lt;td&gt;25.17&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;12430&lt;/td&gt; &lt;td&gt;1615.05&lt;/td&gt; &lt;td&gt;7.70&lt;/td&gt; &lt;td&gt;1150&lt;/td&gt; &lt;td&gt;68.79&lt;/td&gt; &lt;td&gt;24.41&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;M3Max&lt;/td&gt; &lt;td&gt;MLX&lt;/td&gt; &lt;td&gt;12430&lt;/td&gt; &lt;td&gt;954.98&lt;/td&gt; &lt;td&gt;13.01&lt;/td&gt; &lt;td&gt;1627&lt;/td&gt; &lt;td&gt;47.89&lt;/td&gt; &lt;td&gt;46.99&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;M3Max&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;12430&lt;/td&gt; &lt;td&gt;359.69&lt;/td&gt; &lt;td&gt;34.56&lt;/td&gt; &lt;td&gt;1291&lt;/td&gt; &lt;td&gt;41.95&lt;/td&gt; &lt;td&gt;65.34&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;rtx4090&lt;/td&gt; &lt;td&gt;VLLM&lt;/td&gt; &lt;td&gt;17078&lt;/td&gt; &lt;td&gt;6539.04&lt;/td&gt; &lt;td&gt;2.61&lt;/td&gt; &lt;td&gt;1230&lt;/td&gt; &lt;td&gt;83.61&lt;/td&gt; &lt;td&gt;17.32&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX4090&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;17078&lt;/td&gt; &lt;td&gt;2362.40&lt;/td&gt; &lt;td&gt;7.23&lt;/td&gt; &lt;td&gt;1217&lt;/td&gt; &lt;td&gt;71.79&lt;/td&gt; &lt;td&gt;24.18&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;17078&lt;/td&gt; &lt;td&gt;1524.14&lt;/td&gt; &lt;td&gt;11.21&lt;/td&gt; &lt;td&gt;1229&lt;/td&gt; &lt;td&gt;65.38&lt;/td&gt; &lt;td&gt;30.00&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;M3Max&lt;/td&gt; &lt;td&gt;MLX&lt;/td&gt; &lt;td&gt;17078&lt;/td&gt; &lt;td&gt;829.37&lt;/td&gt; &lt;td&gt;20.59&lt;/td&gt; &lt;td&gt;2001&lt;/td&gt; &lt;td&gt;41.34&lt;/td&gt; &lt;td&gt;68.99&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;M3Max&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;17078&lt;/td&gt; &lt;td&gt;330.01&lt;/td&gt; &lt;td&gt;51.75&lt;/td&gt; &lt;td&gt;1461&lt;/td&gt; &lt;td&gt;38.28&lt;/td&gt; &lt;td&gt;89.91&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;rtx4090&lt;/td&gt; &lt;td&gt;VLLM&lt;/td&gt; &lt;td&gt;23658&lt;/td&gt; &lt;td&gt;6645.42&lt;/td&gt; &lt;td&gt;3.56&lt;/td&gt; &lt;td&gt;1310&lt;/td&gt; &lt;td&gt;81.88&lt;/td&gt; &lt;td&gt;19.56&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX4090&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;23658&lt;/td&gt; &lt;td&gt;2225.83&lt;/td&gt; &lt;td&gt;10.63&lt;/td&gt; &lt;td&gt;1213&lt;/td&gt; &lt;td&gt;63.60&lt;/td&gt; &lt;td&gt;29.70&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;23658&lt;/td&gt; &lt;td&gt;1432.59&lt;/td&gt; &lt;td&gt;16.51&lt;/td&gt; &lt;td&gt;1058&lt;/td&gt; &lt;td&gt;60.61&lt;/td&gt; &lt;td&gt;33.97&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;M3Max&lt;/td&gt; &lt;td&gt;MLX&lt;/td&gt; &lt;td&gt;23658&lt;/td&gt; &lt;td&gt;699.38&lt;/td&gt; &lt;td&gt;33.82&lt;/td&gt; &lt;td&gt;2001&lt;/td&gt; &lt;td&gt;35.56&lt;/td&gt; &lt;td&gt;90.09&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;M3Max&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;23658&lt;/td&gt; &lt;td&gt;294.29&lt;/td&gt; &lt;td&gt;80.39&lt;/td&gt; &lt;td&gt;1681&lt;/td&gt; &lt;td&gt;33.96&lt;/td&gt; &lt;td&gt;129.88&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;rtx4090&lt;/td&gt; &lt;td&gt;VLLM&lt;/td&gt; &lt;td&gt;33525&lt;/td&gt; &lt;td&gt;5680.62&lt;/td&gt; &lt;td&gt;5.90&lt;/td&gt; &lt;td&gt;1138&lt;/td&gt; &lt;td&gt;77.42&lt;/td&gt; &lt;td&gt;20.60&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX4090&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;33525&lt;/td&gt; &lt;td&gt;2051.73&lt;/td&gt; &lt;td&gt;16.34&lt;/td&gt; &lt;td&gt;990&lt;/td&gt; &lt;td&gt;54.96&lt;/td&gt; &lt;td&gt;34.35&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;33525&lt;/td&gt; &lt;td&gt;1287.74&lt;/td&gt; &lt;td&gt;26.03&lt;/td&gt; &lt;td&gt;1272&lt;/td&gt; &lt;td&gt;54.62&lt;/td&gt; &lt;td&gt;49.32&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;M3Max&lt;/td&gt; &lt;td&gt;MLX&lt;/td&gt; &lt;td&gt;33525&lt;/td&gt; &lt;td&gt;557.25&lt;/td&gt; &lt;td&gt;60.16&lt;/td&gt; &lt;td&gt;1328&lt;/td&gt; &lt;td&gt;28.26&lt;/td&gt; &lt;td&gt;107.16&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;M3Max&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;33525&lt;/td&gt; &lt;td&gt;250.40&lt;/td&gt; &lt;td&gt;133.89&lt;/td&gt; &lt;td&gt;1453&lt;/td&gt; &lt;td&gt;29.17&lt;/td&gt; &lt;td&gt;183.69&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/chibop1"&gt; /u/chibop1 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ke26sl/another_attempt_to_measure_speed_for_qwen3_moe_on/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ke26sl/another_attempt_to_measure_speed_for_qwen3_moe_on/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1ke26sl/another_attempt_to_measure_speed_for_qwen3_moe_on/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-03T20:20:44+00:00</published>
  </entry>
  <entry>
    <id>t3_1kdsp4z</id>
    <title>Qwen 3 Performance: Quick Benchmarks Across Different Setups</title>
    <updated>2025-05-03T13:14:34+00:00</updated>
    <author>
      <name>/u/mimirium_</name>
      <uri>https://old.reddit.com/user/mimirium_</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hey &lt;a href="/r/LocalLLaMA"&gt;r/LocalLLaMA&lt;/a&gt;,&lt;/p&gt; &lt;p&gt;Been keeping an eye on the discussions around the new Qwen 3 models and wanted to put together a quick summary of the performance people are seeing on different hardware based on what folks are saying. Just trying to collect some of the info floating around in one place.&lt;/p&gt; &lt;p&gt;NVIDIA GPUs &lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;p&gt;Small Models (0.6B - 14B): Some users have noted the 4B model seems surprisingly capable for reasoning.There's also talk about the 14B model being solid for coding.However, experiences seem to vary, with some finding the 4B model less impressive.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;Mid-Range (30B - 32B): This seems to be where things get interesting for a lot of people.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The 30B-A3B (MoE) model is getting a lot of love for its speed. One user with a 12GB VRAM card reported around 12 tokens per second at Q6 , and someone else with an RTX 3090 saw much faster speeds, around 72.9 t/s.It even seems to run on CPUs at decent speeds.&lt;/li&gt; &lt;li&gt;The 32B dense model is also a strong contender, especially for coding.One user on an RTX 3090 got about 12.5 tokens per second with the Q8 quantized version.Some folks find the 32B better for creative tasks , while coding performance reports are mixed.&lt;/li&gt; &lt;/ul&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;High-End (235B): This model needs some serious hardware. If you've got a beefy setup like four RTX 3090s (96GB VRAM), you might see speeds of around 3 to 7 tokens per second.Quantization is probably a must to even try running this locally, and opinions on the quality at lower bitrates seem to vary.&lt;/p&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Apple Silicon &lt;/p&gt; &lt;p&gt;Apple Silicon seems to be a really efficient place to run Qwen 3, especially if you're using the MLX framework.The 30B-A3B model is reportedly very fast on M4 Max chips, exceeding 100 tokens per second in some cases.Here's a quick look at some reported numbers :&lt;/p&gt; &lt;ul&gt; &lt;li&gt;M2 Max, 30B-A3B, MLX 4-bit: 68.318 t/s&lt;/li&gt; &lt;li&gt;M4 Max, 30B-A3B, MLX Q4: 100+ t/s&lt;/li&gt; &lt;li&gt;M1 Max, 30B-A3B, GGUF Q4_K_M: ~40 t/s&lt;/li&gt; &lt;li&gt;M3 Max, 30B-A3B, MLX 8-bit: 68.016 t/s&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;MLX often seems to give better prompt processing speeds compared to llama.cpp on Macs.&lt;/p&gt; &lt;p&gt;CPU-Only Rigs &lt;/p&gt; &lt;p&gt;The 30B-A3B model can even run on systems without a dedicated GPU if you've got enough RAM.One user with 16GB of RAM reported getting over 10 tokens per second with the Q4 quantized version.Here are some examples :&lt;/p&gt; &lt;ul&gt; &lt;li&gt;AMD Ryzen 9 7950x3d, 30B-A3B, Q4, 32GB RAM: 12-15 t/s&lt;/li&gt; &lt;li&gt;Intel i5-8250U, 30B-A3B, Q3_K_XL, 32GB RAM: 7 t/s&lt;/li&gt; &lt;li&gt;AMD Ryzen 5 5600G, 30B-A3B, Q4_K_M, 32GB RAM: 12 t/s&lt;/li&gt; &lt;li&gt;Intel i7 ultra 155, 30B-A3B, Q4, 32GB RAM: ~12-15 t/s&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Lower bit quantizations are usually needed for decent CPU performance.&lt;/p&gt; &lt;p&gt;General Thoughts:&lt;/p&gt; &lt;p&gt;The 30B-A3B model seems to be a good all-around performer. Apple Silicon users seem to be in for a treat with the MLX optimizations. Even CPU-only setups can get some use out of these models. Keep in mind that these are just some of the experiences being shared, and actual performance can vary.&lt;/p&gt; &lt;p&gt;What have your experiences been with Qwen 3? Share your benchmarks and thoughts below! &lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/mimirium_"&gt; /u/mimirium_ &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kdsp4z/qwen_3_performance_quick_benchmarks_across/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kdsp4z/qwen_3_performance_quick_benchmarks_across/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kdsp4z/qwen_3_performance_quick_benchmarks_across/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-03T13:14:34+00:00</published>
  </entry>
  <entry>
    <id>t3_1kdxbd7</id>
    <title>zero dollars vibe debugging menace</title>
    <updated>2025-05-03T16:45:56+00:00</updated>
    <author>
      <name>/u/AntelopeEntire9191</name>
      <uri>https://old.reddit.com/user/AntelopeEntire9191</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kdxbd7/zero_dollars_vibe_debugging_menace/"&gt; &lt;img alt="zero dollars vibe debugging menace" src="https://preview.redd.it/wckdwzhiilye1.gif?width=640&amp;amp;crop=smart&amp;amp;s=ed09e370865a1d4f607b60e7a14d5cce5bdb0ae9" title="zero dollars vibe debugging menace" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Been tweaking on building &lt;strong&gt;Cloi&lt;/strong&gt; its &lt;em&gt;local&lt;/em&gt; debugging agent that runs in your terminal. got sick of cloud models bleeding my wallet dry (o3 at $0.30 per request?? claude 3.7 still taking $0.05 a pop) so built something with zero dollar sign vibes. &lt;/p&gt; &lt;p&gt;the tech is straightforward: cloi deadass catches your error tracebacks, spins up your local LLM (phi/qwen/llama), and only with permission (we respectin boundaries), drops clean af patches directly to your files.&lt;/p&gt; &lt;p&gt;zero api key nonsense, no cloud tax - just pure on-device cooking with the models y'all are already optimizing FRFR&lt;/p&gt; &lt;p&gt;been working on this during my research downtime. If anyone's interested in exploring the implementation or wants to issue feedback: &lt;a href="https://github.com/cloi-ai/cloi"&gt;https://github.com/cloi-ai/cloi&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/AntelopeEntire9191"&gt; /u/AntelopeEntire9191 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://i.redd.it/wckdwzhiilye1.gif"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kdxbd7/zero_dollars_vibe_debugging_menace/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kdxbd7/zero_dollars_vibe_debugging_menace/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-03T16:45:56+00:00</published>
  </entry>
  <entry>
    <id>t3_1ke3heg</id>
    <title>How is your experience with Qwen3 so far?</title>
    <updated>2025-05-03T21:20:12+00:00</updated>
    <author>
      <name>/u/Balance-</name>
      <uri>https://old.reddit.com/user/Balance-</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Do they prove their worth? Are the benchmark scores representative to their real world performance?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Balance-"&gt; /u/Balance- &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ke3heg/how_is_your_experience_with_qwen3_so_far/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ke3heg/how_is_your_experience_with_qwen3_so_far/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1ke3heg/how_is_your_experience_with_qwen3_so_far/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-03T21:20:12+00:00</published>
  </entry>
  <entry>
    <id>t3_1kdrx3b</id>
    <title>I am probably late to the party...</title>
    <updated>2025-05-03T12:34:17+00:00</updated>
    <author>
      <name>/u/TacticalSniper</name>
      <uri>https://old.reddit.com/user/TacticalSniper</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kdrx3b/i_am_probably_late_to_the_party/"&gt; &lt;img alt="I am probably late to the party..." src="https://preview.redd.it/n8fr9l83akye1.jpeg?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=d15015f5609fd116dac2b28f4ab293d1b513803e" title="I am probably late to the party..." /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/TacticalSniper"&gt; /u/TacticalSniper &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://i.redd.it/n8fr9l83akye1.jpeg"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kdrx3b/i_am_probably_late_to_the_party/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kdrx3b/i_am_probably_late_to_the_party/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-03T12:34:17+00:00</published>
  </entry>
  <entry>
    <id>t3_1kdqqkp</id>
    <title>Qwen3-235B-A22B (no thinking) Seemingly Outperforms Claude 3.7 with 32k Thinking Tokens in Coding (Aider)</title>
    <updated>2025-05-03T11:25:40+00:00</updated>
    <author>
      <name>/u/Greedy_Letterhead155</name>
      <uri>https://old.reddit.com/user/Greedy_Letterhead155</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Came across this benchmark PR on Aider&lt;br /&gt; I did my own benchmarks with aider and had consistent results&lt;br /&gt; This is just impressive...&lt;/p&gt; &lt;p&gt;PR: &lt;a href="https://github.com/Aider-AI/aider/pull/3908/commits/015384218f9c87d68660079b70c30e0b59ffacf3"&gt;https://github.com/Aider-AI/aider/pull/3908/commits/015384218f9c87d68660079b70c30e0b59ffacf3&lt;/a&gt;&lt;br /&gt; Comment: &lt;a href="https://github.com/Aider-AI/aider/pull/3908#issuecomment-2841120815"&gt;https://github.com/Aider-AI/aider/pull/3908#issuecomment-2841120815&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Greedy_Letterhead155"&gt; /u/Greedy_Letterhead155 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kdqqkp/qwen3235ba22b_no_thinking_seemingly_outperforms/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kdqqkp/qwen3235ba22b_no_thinking_seemingly_outperforms/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kdqqkp/qwen3235ba22b_no_thinking_seemingly_outperforms/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-03T11:25:40+00:00</published>
  </entry>
  <entry>
    <id>t3_1kdy8ia</id>
    <title>Microsoft is cooking coding models, NextCoder.</title>
    <updated>2025-05-03T17:26:07+00:00</updated>
    <author>
      <name>/u/mlon_eusk-_-</name>
      <uri>https://old.reddit.com/user/mlon_eusk-_-</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kdy8ia/microsoft_is_cooking_coding_models_nextcoder/"&gt; &lt;img alt="Microsoft is cooking coding models, NextCoder." src="https://external-preview.redd.it/Ucgd876uHUi68EnzSBM_dLw0RYz0XUiaeONwhBsyglM.jpg?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=7d72cbc224e62aa30d0164faecb579c9a6eee406" title="Microsoft is cooking coding models, NextCoder." /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/mlon_eusk-_-"&gt; /u/mlon_eusk-_- &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://huggingface.co/collections/microsoft/nextcoder-6815ee6bfcf4e42f20d45028"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kdy8ia/microsoft_is_cooking_coding_models_nextcoder/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kdy8ia/microsoft_is_cooking_coding_models_nextcoder/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-03T17:26:07+00:00</published>
  </entry>
  <entry>
    <id>t3_1kdyasr</id>
    <title>Hey step-bro, that's HF forum, not the AI chat...</title>
    <updated>2025-05-03T17:28:57+00:00</updated>
    <author>
      <name>/u/Cool-Chemical-5629</name>
      <uri>https://old.reddit.com/user/Cool-Chemical-5629</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kdyasr/hey_stepbro_thats_hf_forum_not_the_ai_chat/"&gt; &lt;img alt="Hey step-bro, that's HF forum, not the AI chat..." src="https://preview.redd.it/3a4xy047qlye1.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=2f0827b40d5dad9a38133015ced4dd0b976f205e" title="Hey step-bro, that's HF forum, not the AI chat..." /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Cool-Chemical-5629"&gt; /u/Cool-Chemical-5629 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://i.redd.it/3a4xy047qlye1.png"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kdyasr/hey_stepbro_thats_hf_forum_not_the_ai_chat/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kdyasr/hey_stepbro_thats_hf_forum_not_the_ai_chat/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-03T17:28:57+00:00</published>
  </entry>
  <entry>
    <id>t3_1ke3nw3</id>
    <title>Qwen 3 235b beats sonnet 3.7 in aider polyglot</title>
    <updated>2025-05-03T21:28:35+00:00</updated>
    <author>
      <name>/u/Independent-Wind4462</name>
      <uri>https://old.reddit.com/user/Independent-Wind4462</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ke3nw3/qwen_3_235b_beats_sonnet_37_in_aider_polyglot/"&gt; &lt;img alt="Qwen 3 235b beats sonnet 3.7 in aider polyglot" src="https://preview.redd.it/sjw1h2yexmye1.jpeg?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=3228950c23440471a53b0440043d2bbfaeaa2b03" title="Qwen 3 235b beats sonnet 3.7 in aider polyglot" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Win for open source &lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Independent-Wind4462"&gt; /u/Independent-Wind4462 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://i.redd.it/sjw1h2yexmye1.jpeg"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ke3nw3/qwen_3_235b_beats_sonnet_37_in_aider_polyglot/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1ke3nw3/qwen_3_235b_beats_sonnet_37_in_aider_polyglot/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-03T21:28:35+00:00</published>
  </entry>
</feed>
