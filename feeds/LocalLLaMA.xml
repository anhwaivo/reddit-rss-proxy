<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>/r/LocalLLaMA/.rss</id>
  <title>LocalLlama</title>
  <updated>2025-06-21T21:05:21+00:00</updated>
  <link href="https://old.reddit.com/r/LocalLLaMA/" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <icon>https://www.redditstatic.com/icon.png/</icon>
  <subtitle>Subreddit to discuss Llama, the large language model created by Meta AI.</subtitle>
  <entry>
    <id>t3_1lghrf9</id>
    <title>If your tools and parameters aren’t too complex, even Qwen1.5 0.5B can handle tool calling with a simple DSL and finetuning.</title>
    <updated>2025-06-20T23:04:41+00:00</updated>
    <author>
      <name>/u/umtksa</name>
      <uri>https://old.reddit.com/user/umtksa</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;&lt;em&gt;Update: I tried Qwen3-0.6B and its better at converting natural language Turkish math problems to math formulas and handling complex sentences&lt;/em&gt;&lt;/p&gt; &lt;p&gt;I designed a super minimal syntax like:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;TOOL: param1, param2, param3 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Then fine-tuned Qwen 1.5 0.5B for just &lt;strong&gt;5 epochs&lt;/strong&gt;, and now it can reliably call &lt;strong&gt;all 11 tools&lt;/strong&gt; in my dataset without any issues.&lt;/p&gt; &lt;p&gt;I'm working in Turkish, and before this, I could only get accurate tool calls using much larger models like &lt;strong&gt;Gemma3:12B&lt;/strong&gt;. But this little model now handles it surprisingly well.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt; – If your tool names and parameters are relatively simple like mine, just invent a small DSL and fine-tune a base model. Even &lt;strong&gt;Google Colab’s free tier&lt;/strong&gt; is enough.&lt;/p&gt; &lt;p&gt;here is my own dataset that I use to fine tune&lt;br /&gt; &lt;a href="https://huggingface.co/datasets/umtksa/tools"&gt;https://huggingface.co/datasets/umtksa/tools&lt;/a&gt;&lt;/p&gt; &lt;p&gt;and here is the finetune script I use on my macbook pro m2 &lt;a href="https://gist.github.com/umtksa/912050d7c76c4aff182f4e922432bf94"&gt;https://gist.github.com/umtksa/912050d7c76c4aff182f4e922432bf94&lt;/a&gt;&lt;/p&gt; &lt;p&gt;and here is the Modelfile to use finetuned model with ollama&lt;br /&gt; &lt;a href="https://gist.github.com/umtksa/4071e6ff8e31b557a2b650babadcc3d0"&gt;https://gist.github.com/umtksa/4071e6ff8e31b557a2b650babadcc3d0&lt;/a&gt;&lt;/p&gt; &lt;p&gt;*added train script link and ollama Modelfile link for Qwen3-0.6B&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/umtksa"&gt; /u/umtksa &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lghrf9/if_your_tools_and_parameters_arent_too_complex/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lghrf9/if_your_tools_and_parameters_arent_too_complex/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1lghrf9/if_your_tools_and_parameters_arent_too_complex/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-20T23:04:41+00:00</published>
  </entry>
  <entry>
    <id>t3_1lgkhdk</id>
    <title>A100 80GB can't serve 10 concurrent users - what am I doing wrong?</title>
    <updated>2025-06-21T01:18:55+00:00</updated>
    <author>
      <name>/u/Creative_Yoghurt25</name>
      <uri>https://old.reddit.com/user/Creative_Yoghurt25</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Running Qwen2.5-14B-AWQ on A100 80GB for voice calls.&lt;/p&gt; &lt;p&gt;People say RTX 4090 serves 10+ users fine. My A100 with 80GB VRAM can't even handle 10 concurrent requests without terrible TTFT (30+ seconds).&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Current vLLM config:&lt;/strong&gt; &lt;code&gt;yaml --model Qwen/Qwen2.5-14B-Instruct-AWQ --quantization awq_marlin --gpu-memory-utilization 0.95 --max-model-len 12288 --max-num-batched-tokens 4096 --max-num-seqs 64 --enable-chunked-prefill --enable-prefix-caching --block-size 32 --preemption-mode recompute --enforce-eager &lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Configs I've tried:&lt;/strong&gt; - &lt;code&gt;max-num-seqs&lt;/code&gt;: 4, 32, 64, 256, 1024 - &lt;code&gt;max-num-batched-tokens&lt;/code&gt;: 2048, 4096, 8192, 16384, 32768 - &lt;code&gt;gpu-memory-utilization&lt;/code&gt;: 0.7, 0.85, 0.9, 0.95 - &lt;code&gt;max-model-len&lt;/code&gt;: 2048 (too small), 4096, 8192, 12288 - Removed limits entirely - still terrible&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Context:&lt;/strong&gt; Input is ~6K tokens (big system prompt + conversation history). Output is only ~100 tokens. User messages are small but system prompt is large.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;GuideLLM benchmark results:&lt;/strong&gt; - 1 user: 36ms TTFT ✅&lt;br /&gt; - 25 req/s target: Only got 5.34 req/s actual, 30+ second TTFT - Throughput test: 3.4 req/s max, 17+ second TTFT - 10+ concurrent: 30+ second TTFT ❌&lt;/p&gt; &lt;p&gt;Also considering Triton but haven't tried yet.&lt;/p&gt; &lt;p&gt;Need to maintain &amp;lt;500ms TTFT for at least 30 concurrent users. What vLLM config should I use? Is 14B just too big for this workload?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Creative_Yoghurt25"&gt; /u/Creative_Yoghurt25 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lgkhdk/a100_80gb_cant_serve_10_concurrent_users_what_am/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lgkhdk/a100_80gb_cant_serve_10_concurrent_users_what_am/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1lgkhdk/a100_80gb_cant_serve_10_concurrent_users_what_am/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-21T01:18:55+00:00</published>
  </entry>
  <entry>
    <id>t3_1lgtcrb</id>
    <title>Open source tool to fix LLM-generated JSON</title>
    <updated>2025-06-21T10:24:16+00:00</updated>
    <author>
      <name>/u/arthurtakeda</name>
      <uri>https://old.reddit.com/user/arthurtakeda</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hey! Ever since I started using LLMs to generate JSON for my side projects I occasionally get an error and when looking at the logs it’s usually because of some parsing errors.&lt;/p&gt; &lt;p&gt;I’ve built a tool to fix the most common errors I came across: &lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;p&gt;Markdown Block Extraction: Extracts JSON from ```json code blocks and inline code&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;Trailing Content Removal: Removes explanatory text after valid JSON structures&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;Quote Fixing: Fixes unescaped quotes inside JSON strings&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;Missing Comma Detection: Adds missing commas between array elements and object properties&lt;/p&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;It’s just pure typescript so it’s very lightweight, hope it’s useful!! Any feedbacks are welcome, thinking of building a Python equivalent soon.&lt;/p&gt; &lt;p&gt;&lt;a href="https://github.com/aotakeda/ai-json-fixer"&gt;https://github.com/aotakeda/ai-json-fixer&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Thanks!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/arthurtakeda"&gt; /u/arthurtakeda &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lgtcrb/open_source_tool_to_fix_llmgenerated_json/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lgtcrb/open_source_tool_to_fix_llmgenerated_json/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1lgtcrb/open_source_tool_to_fix_llmgenerated_json/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-21T10:24:16+00:00</published>
  </entry>
  <entry>
    <id>t3_1lgnri0</id>
    <title>What are some AI tools (free or paid) that genuinely helped you get more done — especially the underrated ones not many talk about?</title>
    <updated>2025-06-21T04:17:18+00:00</updated>
    <author>
      <name>/u/Melted_gun</name>
      <uri>https://old.reddit.com/user/Melted_gun</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I'm not looking for the obvious ones like ChatGPT or Midjourney — more curious about those lesser-known tools that actually made a difference in your workflow, mindset, or daily routine.&lt;/p&gt; &lt;p&gt;Could be anything — writing, coding, research, time-blocking, design, personal journaling, habit tracking, whatever.&lt;/p&gt; &lt;p&gt;Just trying to find tools that might not be in my radar but could quietly improve things.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Melted_gun"&gt; /u/Melted_gun &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lgnri0/what_are_some_ai_tools_free_or_paid_that/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lgnri0/what_are_some_ai_tools_free_or_paid_that/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1lgnri0/what_are_some_ai_tools_free_or_paid_that/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-21T04:17:18+00:00</published>
  </entry>
  <entry>
    <id>t3_1lgv0y9</id>
    <title>Help me build a good TTS + LLM + STT stack</title>
    <updated>2025-06-21T12:07:25+00:00</updated>
    <author>
      <name>/u/sync_co</name>
      <uri>https://old.reddit.com/user/sync_co</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hello everyone. I am currently in the lookout for a good conversational AI system I can run. I want to use it conversational AI and be able to handle some complex prompts. Essentially I would like to try and build a alternative to retell or VAPI voice AI systems but using some of the newer voice systems &amp;amp; in my own cloud for privacy.&lt;/p&gt; &lt;p&gt;Can anyone help me with directions on how best to implement this?&lt;/p&gt; &lt;p&gt;So far I have tried -&lt;br /&gt; LiveKit for the telephony&lt;br /&gt; Cerebras for the LLM&lt;br /&gt; Orpheus for the STT&lt;br /&gt; Whisper as the TTS (tried Whisperx, Faster-Whisper, v3 on baseten. All batshit slow)&lt;br /&gt; Deepgram (very fast but not very accurate)&lt;br /&gt; Existing voice to voice models (ultravox etc. not attached to any smart LLM)&lt;/p&gt; &lt;p&gt;I would ideally like to have a response of full voice to voice to be under 600ms. I think this is possible because Orpheus TTFB is quite fast (sub 150ms) and the cerebras LLMs are also very high throughput but getting around 300ms TTFB (could also have network latency) but using whisper is very slow. Deepgram still has alot of transcription errors&lt;/p&gt; &lt;p&gt;Can anyone recommend a stack and a system that can work sub 600ms voice to voice? Details including hosting options would be ideal.&lt;/p&gt; &lt;p&gt;my dream is seasame's platform but they have released a garbage open source 1b while their 8b shines.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/sync_co"&gt; /u/sync_co &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lgv0y9/help_me_build_a_good_tts_llm_stt_stack/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lgv0y9/help_me_build_a_good_tts_llm_stt_stack/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1lgv0y9/help_me_build_a_good_tts_llm_stt_stack/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-21T12:07:25+00:00</published>
  </entry>
  <entry>
    <id>t3_1lh328r</id>
    <title>Moore Threads: An overlooked possibility for cheap local LLM inference?</title>
    <updated>2025-06-21T18:16:17+00:00</updated>
    <author>
      <name>/u/HugoCortell</name>
      <uri>https://old.reddit.com/user/HugoCortell</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;There's a Chinese company called Moore Threads which makes very mediocre but affordable gaming GPUs, including the MTT S80 &lt;strong&gt;which is $170 for 16GB&lt;/strong&gt;.&lt;/p&gt; &lt;p&gt;Of course, no CUDA or VULKAN, but even so, with how expensive even used mining cards are nowadays, it might be a very good choice for affordably running very large models at acceptable speeds (~10t/s). Admittedly, I don't have any benchmarks.&lt;/p&gt; &lt;p&gt;I've never seen a single comment in this entire sub mention this company, which makes me think that perhaps we have overlooked them and should include them in discussions of budget-friendly inference hardware setups.&lt;/p&gt; &lt;p&gt;While I look forward to the release of the Intel's B60 DUAL, we won't be able to confirm their real price until they release, so for now I wanted to explore the cards which are on the market today.&lt;/p&gt; &lt;p&gt;Perhaps this card is no good at all for ML purposes, but I still believe a discussion is warranted.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/HugoCortell"&gt; /u/HugoCortell &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lh328r/moore_threads_an_overlooked_possibility_for_cheap/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lh328r/moore_threads_an_overlooked_possibility_for_cheap/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1lh328r/moore_threads_an_overlooked_possibility_for_cheap/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-21T18:16:17+00:00</published>
  </entry>
  <entry>
    <id>t3_1lh5gwl</id>
    <title>Built a LiteLLM adapter for locally hosted HuggingFace models on your machine because local transformers deserved the OpenAI API treatment</title>
    <updated>2025-06-21T20:03:10+00:00</updated>
    <author>
      <name>/u/arkbhatta</name>
      <uri>https://old.reddit.com/user/arkbhatta</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;: Made local HuggingFace transformers work through LiteLLM's OpenAI-compatible interface. No more API inconsistencies between local and cloud models. Feel free to use it or help me enriching and making it more mature&lt;/p&gt; &lt;p&gt;Hey everyone!&lt;/p&gt; &lt;p&gt;So here's the thing: &lt;a href="https://docs.litellm.ai/docs/"&gt;LiteLLM&lt;/a&gt; is AMAZING for calling 100+ LLM providers through a unified OpenAI-like interface. It supports HuggingFace models too... but only through their cloud inference providers (Serverless, Dedicated Endpoints, etc.).&lt;/p&gt; &lt;p&gt;&lt;strong&gt;The missing piece?&lt;/strong&gt; Using your local HuggingFace models (the ones you run with &lt;code&gt;transformers&lt;/code&gt;) through the same clean OpenAI API interface.&lt;/p&gt; &lt;h1&gt;&lt;a href="https://github.com/arkaprovob/litellm-hf-local"&gt;What I built&lt;/a&gt;:&lt;/h1&gt; &lt;p&gt;A &lt;strong&gt;custom LiteLLM provider&lt;/strong&gt; that bridges this gap, giving you:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;OpenAI API compatibility&lt;/strong&gt; for your local HF models no more switching between different interfaces&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Seamless integration&lt;/strong&gt; with any LiteLLM-compatible framework (CrewAI, LangChain, AutoGen, Google-ADK, etc.)&lt;/li&gt; &lt;li&gt;&lt;strong&gt;4-bit/8-bit quantization&lt;/strong&gt; OOTB support for bitsandbytes&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Streaming support&lt;/strong&gt; that actually works properly with LiteLLM's chunk formatting&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Auto chat templates&lt;/strong&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Multi-GPU support&lt;/strong&gt; and memory monitoring&lt;/li&gt; &lt;/ul&gt; &lt;h1&gt;Why this matters:&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;# Option 1: Direct integration import litellm litellm.custom_provider_map = [ {&amp;quot;provider&amp;quot;: &amp;quot;huggingface-local&amp;quot;, &amp;quot;custom_handler&amp;quot;: adapter} ] response = litellm.completion( model=&amp;quot;huggingface-local/Phi-4-reasoning&amp;quot;, messages=[{&amp;quot;role&amp;quot;: &amp;quot;user&amp;quot;, &amp;quot;content&amp;quot;: &amp;quot;Hello!&amp;quot;}] ) # Option 2: Proxy server (OpenAI-compatible API) # Start: litellm --config litellm_config.yaml # Then use in the following way: curl --location 'http://0.0.0.0:4000/v1/chat/completions' \ --header 'Content-Type: application/json' \ --data '{ &amp;quot;model&amp;quot;: &amp;quot;qwen-local&amp;quot;, &amp;quot;messages&amp;quot;: [ { &amp;quot;role&amp;quot;: &amp;quot;system&amp;quot;, &amp;quot;content&amp;quot;: &amp;quot;You are a helpful assistant.&amp;quot; }, { &amp;quot;role&amp;quot;: &amp;quot;user&amp;quot;, &amp;quot;content&amp;quot;: &amp;quot;what is LLM?&amp;quot; } ], &amp;quot;stream&amp;quot;: false }' &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;The real value&lt;/strong&gt;: Your local models get OpenAI API compatibility + work with existing LiteLLM-based tools + serve via REST API and may more.&lt;/p&gt; &lt;h1&gt;Current status:&lt;/h1&gt; &lt;p&gt;✅ Working with Qwen, Phi-4, Gemma 3 models and technically should work with other Text generation models.&lt;br /&gt; ✅ Streaming, quantization, memory monitoring&lt;br /&gt; ✅ LiteLLM proxy server integration&lt;br /&gt; ✅ Clean, modular codebase&lt;/p&gt; &lt;h1&gt;Further improvement scope:&lt;/h1&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Testing more models&lt;/strong&gt; - especially newer architectures&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Documentation/examples&lt;/strong&gt; - because good docs matter&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;This fills a real gap in the ecosystem. LiteLLM is fantastic for cloud providers, but local HF models deserved the same love. Now they have it!&lt;/p&gt; &lt;p&gt;&lt;strong&gt;The bottom line:&lt;/strong&gt; Your local HuggingFace models can now speak fluent OpenAI API, making them first-class citizens in the LiteLLM ecosystem.&lt;/p&gt; &lt;p&gt;Happy to get contribution or new feature requests if you have any, will be really glad if you find it useful or it helps you in any of your quest, and if you have any feedback I am all ears!&lt;/p&gt; &lt;p&gt;GitHub: &lt;a href="https://github.com/arkaprovob/litellm-hf-local"&gt;https://github.com/arkaprovob/litellm-hf-local&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/arkbhatta"&gt; /u/arkbhatta &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lh5gwl/built_a_litellm_adapter_for_locally_hosted/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lh5gwl/built_a_litellm_adapter_for_locally_hosted/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1lh5gwl/built_a_litellm_adapter_for_locally_hosted/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-21T20:03:10+00:00</published>
  </entry>
  <entry>
    <id>t3_1lh0div</id>
    <title>Ollama alternatives</title>
    <updated>2025-06-21T16:20:32+00:00</updated>
    <author>
      <name>/u/Maleficent_Payment44</name>
      <uri>https://old.reddit.com/user/Maleficent_Payment44</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I have a Linux Ubuntu server with 192GB ram and a geoforce rtx 4090 GPU. I've been creating some python apps lately using ollama and langchain with models like gemma3:27b.&lt;/p&gt; &lt;p&gt;I know ollama and langchain are both not the most cutting edge tools. I am pretty good in programming and configuration so could probably move on to better options.&lt;/p&gt; &lt;p&gt;Interested in rag and data related projects using statistics and machine learning. Have built some pretty cool stuff with plotly, streamlit and duckdb.&lt;/p&gt; &lt;p&gt;Just started really getting hands on with local LLMs. For those that are further along and graduated from ollama etc. Do you have any suggestions on things that I should consider to maximize accuracy and speed. Either in terms of frameworks, models or LLM clients?&lt;/p&gt; &lt;p&gt;I plan to test qwen3 and llama4 models, but gemma3 is pretty decent. I would like to do more with models that aupport tooling, which gemma3 does not. I installed devstral for that reason.&lt;/p&gt; &lt;p&gt;Even though I mentioned a lot about models, my question is broader than that. I am more interested on others thoughts around ollama and langchain, which I know can be slow or bloated, but that is where I started, and not necessarily where I want to end up.&lt;/p&gt; &lt;p&gt;Thank you :)&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Maleficent_Payment44"&gt; /u/Maleficent_Payment44 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lh0div/ollama_alternatives/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lh0div/ollama_alternatives/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1lh0div/ollama_alternatives/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-21T16:20:32+00:00</published>
  </entry>
  <entry>
    <id>t3_1lh1gkh</id>
    <title>Deepseekv3-0324 671b LORA training</title>
    <updated>2025-06-21T17:07:26+00:00</updated>
    <author>
      <name>/u/triestdain</name>
      <uri>https://old.reddit.com/user/triestdain</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Is there a way currently to train LORAs off of Deepseekv3-0324 (671b) given that there is no huggingface transformers support yet?&lt;/p&gt; &lt;p&gt;I am aware of NeMo:&lt;a href="https://docs.nvidia.com/nemo-framework/user-guide/latest/llms/deepseek_v3.html"&gt;https://docs.nvidia.com/nemo-framework/user-guide/latest/llms/deepseek_v3.html&lt;/a&gt;&lt;/p&gt; &lt;p&gt;But am curious if there is a path out there that works while keeping the model at FP8. &lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/triestdain"&gt; /u/triestdain &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lh1gkh/deepseekv30324_671b_lora_training/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lh1gkh/deepseekv30324_671b_lora_training/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1lh1gkh/deepseekv30324_671b_lora_training/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-21T17:07:26+00:00</published>
  </entry>
  <entry>
    <id>t3_1lgsykj</id>
    <title>AbsenceBench: LLMs can't tell what's missing</title>
    <updated>2025-06-21T09:58:18+00:00</updated>
    <author>
      <name>/u/Chromix_</name>
      <uri>https://old.reddit.com/user/Chromix_</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lgsykj/absencebench_llms_cant_tell_whats_missing/"&gt; &lt;img alt="AbsenceBench: LLMs can't tell what's missing" src="https://b.thumbs.redditmedia.com/PjMEdZcgsAhmRkC952iAQojRviDlyPY_z4tXX2TYqCE.jpg" title="AbsenceBench: LLMs can't tell what's missing" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;The &lt;a href="https://arxiv.org/pdf/2506.11440"&gt;AbsenceBench paper&lt;/a&gt; establishes a test that's basically Needle In A Haystack (NIAH) in reverse. &lt;a href="https://github.com/harvey-fin/absence-bench"&gt;Code here&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;The idea is that models score 100% on NIAH tests, thus perfectly identify added tokens that stand out - which is not equal to perfectly reasoning over longer context though - and try that in reverse, with added hints.&lt;/p&gt; &lt;p&gt;They gave the model poetry, number sequences and GitHub PRs, &lt;em&gt;together with&lt;/em&gt; a modified version with removed words or lines, and then asked the model to identify what's missing. A simple program can figure this out with 100% accurracy. The LLMs can't.&lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/rzlyybfr598f1.png?width=2154&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=fcadbf591cdd0de119850a164f3ad1488efa3285"&gt;https://preview.redd.it/rzlyybfr598f1.png?width=2154&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=fcadbf591cdd0de119850a164f3ad1488efa3285&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Using around 8k thinking tokens improved the score by 8% on average. Those 8k thinking tokens are quite longer than the average input - just 5k, with almost all tests being shorter than 12k. Thus, this isn't an issue of long context handling, although results get worse with longer context. For some reason the results also got worse when testing with shorter omissions.&lt;/p&gt; &lt;p&gt;The hypothesis is that the attention mechanism can only attend to tokens that exist. Omissions have no tokens, thus there are no tokens to put attention on. They tested this by adding placeholders, which boosted the scores by 20% to 50%.&lt;/p&gt; &lt;p&gt;The NIAH test just tested finding literal matches. Models that didn't score close to 100% were also bad at long context understanding. Yet as we've seen with NoLiMa and fiction.liveBench, getting 100% NIAH score doesn't equal good long context &lt;em&gt;understanding&lt;/em&gt;. This paper only tests literal omissions and not semantic omissions, like incomplete evidence for a conclusion. Thus, like NIAH a model scoring 100% here won't automatically guarantee good long context understanding.&lt;/p&gt; &lt;p&gt;Bonus: They also shared the average reasoning tokens per model.&lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/6b6gzd2w698f1.png?width=1053&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=c62b0fe40613886510bd91922032278ec146a874"&gt;https://preview.redd.it/6b6gzd2w698f1.png?width=1053&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=c62b0fe40613886510bd91922032278ec146a874&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Chromix_"&gt; /u/Chromix_ &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lgsykj/absencebench_llms_cant_tell_whats_missing/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lgsykj/absencebench_llms_cant_tell_whats_missing/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1lgsykj/absencebench_llms_cant_tell_whats_missing/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-21T09:58:18+00:00</published>
  </entry>
  <entry>
    <id>t3_1lgyv8a</id>
    <title>Steering LLM outputs</title>
    <updated>2025-06-21T15:14:23+00:00</updated>
    <author>
      <name>/u/Everlier</name>
      <uri>https://old.reddit.com/user/Everlier</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lgyv8a/steering_llm_outputs/"&gt; &lt;img alt="Steering LLM outputs" src="https://external-preview.redd.it/NmN0cDU5bnZwYThmMcWg2kr7Oe9IfY8fGfsf43KXN8n2ZXafTDS0jzzrXQ6i.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=e7b47ea3b5a867f0a76afffe31ce20c58bbf78a4" title="Steering LLM outputs" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;&lt;strong&gt;What is this?&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Optimising LLM proxy runs workflow that mixes instructions from multiple anchor prompts based on their weights&lt;/li&gt; &lt;li&gt;Weights are controlled via specially crafted artifact. The artifact connects back to the workflow over websockets and is able of sending/receiving data.&lt;/li&gt; &lt;li&gt;The artifact can pause or slow down the generation as well for better control.&lt;/li&gt; &lt;li&gt;Runs completely outside the inference engine, at OpenAI-compatible API level&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a href="https://github.com/av/harbor/blob/main/boost/src/modules/promx.py"&gt;Code&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;How to run it?&lt;/strong&gt; &lt;/p&gt; &lt;ul&gt; &lt;li&gt;Standalone - &lt;code&gt;docker pull&lt;/code&gt; &lt;a href="http://ghcr.io/av/harbor-boost:latest"&gt;&lt;code&gt;ghcr.io/av/harbor-boost:latest&lt;/code&gt;&lt;/a&gt;, &lt;a href="https://github.com/av/harbor/wiki/5.2.-Harbor-Boost#standalone-usage"&gt;configuration reference&lt;/a&gt; &lt;ul&gt; &lt;li&gt;Also see &lt;a href="https://github.com/av/boost-starter"&gt;example starter repo&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/li&gt; &lt;li&gt;with &lt;a href="https://github.com/av/harbor"&gt;Harbor&lt;/a&gt; - &lt;code&gt;harbor up boost&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Everlier"&gt; /u/Everlier &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://v.redd.it/0351w9ovpa8f1"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lgyv8a/steering_llm_outputs/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1lgyv8a/steering_llm_outputs/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-21T15:14:23+00:00</published>
  </entry>
  <entry>
    <id>t3_1lgg7a1</id>
    <title>Google releases MagentaRT for real time music generation</title>
    <updated>2025-06-20T21:54:20+00:00</updated>
    <author>
      <name>/u/hackerllama</name>
      <uri>https://old.reddit.com/user/hackerllama</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hi! Omar from the Gemma team here, to talk about MagentaRT, our new music generation model. It's real-time, with a permissive license, and just has 800 million parameters.&lt;/p&gt; &lt;p&gt;You can find a video demo right here &lt;a href="https://www.youtube.com/watch?v=Ae1Kz2zmh9M"&gt;https://www.youtube.com/watch?v=Ae1Kz2zmh9M&lt;/a&gt;&lt;/p&gt; &lt;p&gt;A blog post at &lt;a href="https://magenta.withgoogle.com/magenta-realtime"&gt;https://magenta.withgoogle.com/magenta-realtime&lt;/a&gt; &lt;/p&gt; &lt;p&gt;GitHub repo &lt;a href="https://github.com/magenta/magenta-realtime"&gt;https://github.com/magenta/magenta-realtime&lt;/a&gt;&lt;/p&gt; &lt;p&gt;And our repository #1000 on Hugging Face: &lt;a href="https://huggingface.co/google/magenta-realtime"&gt;https://huggingface.co/google/magenta-realtime&lt;/a&gt; &lt;/p&gt; &lt;p&gt;Enjoy!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/hackerllama"&gt; /u/hackerllama &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lgg7a1/google_releases_magentart_for_real_time_music/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lgg7a1/google_releases_magentart_for_real_time_music/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1lgg7a1/google_releases_magentart_for_real_time_music/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-20T21:54:20+00:00</published>
  </entry>
  <entry>
    <id>t3_1lgy4wa</id>
    <title>Build Qwen3 from Scratch</title>
    <updated>2025-06-21T14:41:27+00:00</updated>
    <author>
      <name>/u/entsnack</name>
      <uri>https://old.reddit.com/user/entsnack</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I'm a big fan of Sebastian Raschka's earlier work on LLMs from scratch. He recently switched from Llama to Qwen (a switch I recently made too thanks to someone in this subreddit) and wrote a Jupyter notebook implementing Qwen3 from scratch.&lt;/p&gt; &lt;p&gt;Highly recommend this resource as a learning project.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/entsnack"&gt; /u/entsnack &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://github.com/rasbt/LLMs-from-scratch/tree/main/ch05/11_qwen3"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lgy4wa/build_qwen3_from_scratch/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1lgy4wa/build_qwen3_from_scratch/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-21T14:41:27+00:00</published>
  </entry>
  <entry>
    <id>t3_1lgx222</id>
    <title>Minimax-M1 is competitive with Gemini 2.5 Pro 05-06 on Fiction.liveBench Long Context Comprehension</title>
    <updated>2025-06-21T13:51:53+00:00</updated>
    <author>
      <name>/u/fictionlive</name>
      <uri>https://old.reddit.com/user/fictionlive</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lgx222/minimaxm1_is_competitive_with_gemini_25_pro_0506/"&gt; &lt;img alt="Minimax-M1 is competitive with Gemini 2.5 Pro 05-06 on Fiction.liveBench Long Context Comprehension" src="https://preview.redd.it/o9sgqppkca8f1.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=b3738a800b971da66fb76ce1bfd12e92a05565ae" title="Minimax-M1 is competitive with Gemini 2.5 Pro 05-06 on Fiction.liveBench Long Context Comprehension" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/fictionlive"&gt; /u/fictionlive &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://i.redd.it/o9sgqppkca8f1.png"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lgx222/minimaxm1_is_competitive_with_gemini_25_pro_0506/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1lgx222/minimaxm1_is_competitive_with_gemini_25_pro_0506/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-21T13:51:53+00:00</published>
  </entry>
  <entry>
    <id>t3_1lgy12q</id>
    <title>moonshotai/Kimi-VL-A3B-Thinking-2506 · Hugging Face</title>
    <updated>2025-06-21T14:36:31+00:00</updated>
    <author>
      <name>/u/Dark_Fire_12</name>
      <uri>https://old.reddit.com/user/Dark_Fire_12</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lgy12q/moonshotaikimivla3bthinking2506_hugging_face/"&gt; &lt;img alt="moonshotai/Kimi-VL-A3B-Thinking-2506 · Hugging Face" src="https://external-preview.redd.it/nn6Om0LrvY9dh6qkhvLPezIS-aJdRaC0O6BpYJYgA5E.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=0c180a6be6bee520890e9e2bcc9303148c925f48" title="moonshotai/Kimi-VL-A3B-Thinking-2506 · Hugging Face" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Dark_Fire_12"&gt; /u/Dark_Fire_12 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://huggingface.co/moonshotai/Kimi-VL-A3B-Thinking-2506"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lgy12q/moonshotaikimivla3bthinking2506_hugging_face/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1lgy12q/moonshotaikimivla3bthinking2506_hugging_face/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-21T14:36:31+00:00</published>
  </entry>
  <entry>
    <id>t3_1lh359d</id>
    <title>From Arch-Function to Arch-Agent. Designed for fast multi-step, multi-turn workflow orchestration in agents.</title>
    <updated>2025-06-21T18:20:02+00:00</updated>
    <author>
      <name>/u/AdditionalWeb107</name>
      <uri>https://old.reddit.com/user/AdditionalWeb107</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lh359d/from_archfunction_to_archagent_designed_for_fast/"&gt; &lt;img alt="From Arch-Function to Arch-Agent. Designed for fast multi-step, multi-turn workflow orchestration in agents." src="https://preview.redd.it/n7hvejg7kb8f1.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=52b7b89164644abd1aa046530243be33db354edd" title="From Arch-Function to Arch-Agent. Designed for fast multi-step, multi-turn workflow orchestration in agents." /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hello - in the past i've shared my work around &lt;a href="https://www.reddit.com/r/LocalLLaMA/comments/1hr9ll1/i_built_a_small_function_calling_llm_that_packs_a/"&gt;function-calling&lt;/a&gt; on this sub. The encouraging feedback and usage (over 100k downloads 🤯) has gotten me and my team cranking away. Six months from our initial launch, I am excited to share our agent models: Arch-Agent. &lt;/p&gt; &lt;p&gt;Full details in the model card: &lt;a href="https://huggingface.co/katanemo/Arch-Agent-7B"&gt;https://huggingface.co/katanemo/Arch-Agent-7B&lt;/a&gt; - but quickly, Arch-Agent offers state-of-the-art performance for advanced function calling scenarios, and sophisticated multi-step/multi-turn agent workflows. Performance was measured on BFCL, although we'll also soon publish results on the Tau-Bench as well. &lt;/p&gt; &lt;p&gt;These models will power &lt;a href="https://github.com/katanemo/archgw/"&gt;Arch&lt;/a&gt; (the universal data plane for AI) - the open source project where some of our science work is vertically integrated. &lt;/p&gt; &lt;p&gt;Hope like last time - you all enjoy these new models and our open source work 🙏&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/AdditionalWeb107"&gt; /u/AdditionalWeb107 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://i.redd.it/n7hvejg7kb8f1.png"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lh359d/from_archfunction_to_archagent_designed_for_fast/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1lh359d/from_archfunction_to_archagent_designed_for_fast/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-21T18:20:02+00:00</published>
  </entry>
  <entry>
    <id>t3_1lgsxyw</id>
    <title>Unsloth Dynamic GGUF Quants For Mistral 3.2</title>
    <updated>2025-06-21T09:57:06+00:00</updated>
    <author>
      <name>/u/No-Refrigerator-1672</name>
      <uri>https://old.reddit.com/user/No-Refrigerator-1672</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lgsxyw/unsloth_dynamic_gguf_quants_for_mistral_32/"&gt; &lt;img alt="Unsloth Dynamic GGUF Quants For Mistral 3.2" src="https://external-preview.redd.it/CrtSkHQg7FYlqUCKyAhEr6h8Hgeh7uXu4dg2iLzQFtI.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=206fbbf02fe74bed130c7c80f847013da0053f61" title="Unsloth Dynamic GGUF Quants For Mistral 3.2" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/No-Refrigerator-1672"&gt; /u/No-Refrigerator-1672 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://huggingface.co/unsloth/Mistral-Small-3.2-24B-Instruct-2506-GGUF"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lgsxyw/unsloth_dynamic_gguf_quants_for_mistral_32/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1lgsxyw/unsloth_dynamic_gguf_quants_for_mistral_32/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-21T09:57:06+00:00</published>
  </entry>
  <entry>
    <id>t3_1lgwcfb</id>
    <title>Semantically search and ask your Gmail using local LLaMA</title>
    <updated>2025-06-21T13:16:44+00:00</updated>
    <author>
      <name>/u/samewakefulinsomnia</name>
      <uri>https://old.reddit.com/user/samewakefulinsomnia</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lgwcfb/semantically_search_and_ask_your_gmail_using/"&gt; &lt;img alt="Semantically search and ask your Gmail using local LLaMA" src="https://external-preview.redd.it/u5mOM2CU1WqdBPMvqlJEeyyQe4ITGIoML7OHXi1ZUCs.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=4550f23557f54ee6f8ab8804140ab8bb8007bf02" title="Semantically search and ask your Gmail using local LLaMA" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I got fed up with Apple Mail’s clunky search and built my own tool: a lightweight, local-LLM-first CLI that lets you semantically search and ask questions about your Gmail inbox:&lt;/p&gt; &lt;p&gt;&lt;a href="https://i.redd.it/vs2cz0f66a8f1.gif"&gt;https://i.redd.it/vs2cz0f66a8f1.gif&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Grab it here: &lt;a href="https://github.com/yahorbarkouski/semantic-mail"&gt;https://github.com/yahorbarkouski/semantic-mail&lt;/a&gt;&lt;/p&gt; &lt;p&gt;any feedback/contributions are very much appreciated!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/samewakefulinsomnia"&gt; /u/samewakefulinsomnia &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lgwcfb/semantically_search_and_ask_your_gmail_using/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lgwcfb/semantically_search_and_ask_your_gmail_using/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1lgwcfb/semantically_search_and_ask_your_gmail_using/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-21T13:16:44+00:00</published>
  </entry>
  <entry>
    <id>t3_1lgxjw2</id>
    <title>Self Adapting LLMs - legit?</title>
    <updated>2025-06-21T14:14:34+00:00</updated>
    <author>
      <name>/u/Desperate_Rub_1352</name>
      <uri>https://old.reddit.com/user/Desperate_Rub_1352</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lgxjw2/self_adapting_llms_legit/"&gt; &lt;img alt="Self Adapting LLMs - legit?" src="https://preview.redd.it/rlhp01gfca8f1.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=ad7294f3dda4aacfc84c69129907508eae493c63" title="Self Adapting LLMs - legit?" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I just came across the new MIT paper &lt;em&gt;Self-Adapting Language Models&lt;/em&gt; (Zweiger et al., June 2025).&lt;br /&gt; The core idea is wild:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The LLM produces a &lt;strong&gt;self-edit&lt;/strong&gt;—a chunk of text that can (a) rewrite / augment the input data, (b) pick hyper-parameters, or (c) call external tools for data augmentation or gradient updates.&lt;/li&gt; &lt;li&gt;Those self-edits are fed straight back into supervised finetuning (or RL), so the model &lt;em&gt;persistently&lt;/em&gt; updates its own weights.&lt;/li&gt; &lt;li&gt;They train the model to &lt;em&gt;judge its own edits&lt;/em&gt; with a downstream reward signal, so it keeps iterating until performance improves.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Essentially the model becomes both &lt;strong&gt;student and curriculum designer&lt;/strong&gt;, continuously generating the exactly-what-it-needs data to get better.&lt;/p&gt; &lt;p&gt;My (much humbler) attempt &amp;amp; pain points&lt;/p&gt; &lt;ul&gt; &lt;li&gt;For a tweet-classification project I had GPT-4 &lt;strong&gt;select&lt;/strong&gt; real tweets and &lt;strong&gt;synthesize&lt;/strong&gt; new ones to expand the finetuning set.&lt;/li&gt; &lt;li&gt;Quality was decent, but (1) &lt;strong&gt;insanely expensive&lt;/strong&gt;, and (2) performance &lt;strong&gt;regressed&lt;/strong&gt; vs. a baseline where I manually hand-picked examples.&lt;/li&gt; &lt;li&gt;I only did straight SFT; didn’t try RL-style feedback (wasn’t aware of anything cleaner than full-blown PPO/DPO at the time).&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Am I wrong to think that this will not hold in main use cases? Why not just try GRPO RL for the use cases that the user wants? I am honestly a bit confused, can someone explain or discuss on what am I missing here? How can a model know what it needs other than a much bigger model giving it feedback on every iteration? Has RL worked on other stuff than text before in this context?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Desperate_Rub_1352"&gt; /u/Desperate_Rub_1352 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://i.redd.it/rlhp01gfca8f1.png"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lgxjw2/self_adapting_llms_legit/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1lgxjw2/self_adapting_llms_legit/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-21T14:14:34+00:00</published>
  </entry>
  <entry>
    <id>t3_1lh0qb9</id>
    <title>how many people will tolerate slow speed for running LLM locally?</title>
    <updated>2025-06-21T16:36:11+00:00</updated>
    <author>
      <name>/u/OwnSoup8888</name>
      <uri>https://old.reddit.com/user/OwnSoup8888</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;just want to check how many people will tolerate speed for privacy? &lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/OwnSoup8888"&gt; /u/OwnSoup8888 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lh0qb9/how_many_people_will_tolerate_slow_speed_for/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lh0qb9/how_many_people_will_tolerate_slow_speed_for/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1lh0qb9/how_many_people_will_tolerate_slow_speed_for/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-21T16:36:11+00:00</published>
  </entry>
  <entry>
    <id>t3_1lglhll</id>
    <title>Mistral's "minor update"</title>
    <updated>2025-06-21T02:12:10+00:00</updated>
    <author>
      <name>/u/_sqrkl</name>
      <uri>https://old.reddit.com/user/_sqrkl</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lglhll/mistrals_minor_update/"&gt; &lt;img alt="Mistral's &amp;quot;minor update&amp;quot;" src="https://preview.redd.it/rb70qb16v68f1.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=a7248b214307a876a51003f595eeeb9564be8245" title="Mistral's &amp;quot;minor update&amp;quot;" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;&lt;a href="https://eqbench.com/creative_writing_longform.html"&gt;https://eqbench.com/creative_writing_longform.html&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/_sqrkl"&gt; /u/_sqrkl &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://i.redd.it/rb70qb16v68f1.png"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lglhll/mistrals_minor_update/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1lglhll/mistrals_minor_update/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-21T02:12:10+00:00</published>
  </entry>
  <entry>
    <id>t3_1lh0noy</id>
    <title>Autopaste MFAs from Gmail using LLaMA</title>
    <updated>2025-06-21T16:32:58+00:00</updated>
    <author>
      <name>/u/samewakefulinsomnia</name>
      <uri>https://old.reddit.com/user/samewakefulinsomnia</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Inspired by Apple's &amp;quot;insert code from SMS&amp;quot; feature, made a tool to speed up the process of inserting incoming email MFAs: &lt;a href="https://github.com/yahorbarkouski/auto-mfa"&gt;https://github.com/yahorbarkouski/auto-mfa&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Connect accounts, choose LLM provider (Ollama supported), add a system shortcut targeting the script, and enjoy your extra 10 seconds every time you need to paste your MFAs &lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/samewakefulinsomnia"&gt; /u/samewakefulinsomnia &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lh0noy/autopaste_mfas_from_gmail_using_llama/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lh0noy/autopaste_mfas_from_gmail_using_llama/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1lh0noy/autopaste_mfas_from_gmail_using_llama/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-21T16:32:58+00:00</published>
  </entry>
  <entry>
    <id>t3_1lgvl40</id>
    <title>After trying to buy Ilya Sutskever's $32B AI startup, Meta looks to hire its CEO | TechCrunch</title>
    <updated>2025-06-21T12:38:20+00:00</updated>
    <author>
      <name>/u/touhidul002</name>
      <uri>https://old.reddit.com/user/touhidul002</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lgvl40/after_trying_to_buy_ilya_sutskevers_32b_ai/"&gt; &lt;img alt="After trying to buy Ilya Sutskever's $32B AI startup, Meta looks to hire its CEO | TechCrunch" src="https://external-preview.redd.it/1Tc0yB3lwHCV4Qo8QzQZtbMZw5Hyi2St2rr1CDzMJaE.jpeg?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=6e72c893ef4fea62f81300f8447709b6c1be403c" title="After trying to buy Ilya Sutskever's $32B AI startup, Meta looks to hire its CEO | TechCrunch" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;What hapening to zuck? after scale ai , now Safe Superintelligence&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/touhidul002"&gt; /u/touhidul002 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://techcrunch.com/2025/06/20/after-trying-to-buy-ilya-sutskevers-32b-ai-startup-meta-looks-to-hire-its-ceo/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lgvl40/after_trying_to_buy_ilya_sutskevers_32b_ai/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1lgvl40/after_trying_to_buy_ilya_sutskevers_32b_ai/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-21T12:38:20+00:00</published>
  </entry>
  <entry>
    <id>t3_1lh2ffp</id>
    <title>CEO Bench: Can AI Replace the C-Suite?</title>
    <updated>2025-06-21T17:49:08+00:00</updated>
    <author>
      <name>/u/dave1010</name>
      <uri>https://old.reddit.com/user/dave1010</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I put together a (slightly tongue in cheek) benchmark to test some LLMs. All open source and all the data is in the repo.&lt;/p&gt; &lt;p&gt;It makes use of the excellent &lt;code&gt;llm&lt;/code&gt; Python package from Simon Willison.&lt;/p&gt; &lt;p&gt;I've only benchmarked a couple of local models but want to see what the smallest LLM is that will score above the estimated &amp;quot;human CEO&amp;quot; performance. How long before a sub-1B parameter model performs better than a tech giant CEO?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/dave1010"&gt; /u/dave1010 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://ceo-bench.dave.engineer/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lh2ffp/ceo_bench_can_ai_replace_the_csuite/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1lh2ffp/ceo_bench_can_ai_replace_the_csuite/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-21T17:49:08+00:00</published>
  </entry>
  <entry>
    <id>t3_1lgwsdr</id>
    <title>DeepSeek Guys Open-Source nano-vLLM</title>
    <updated>2025-06-21T13:38:49+00:00</updated>
    <author>
      <name>/u/nekofneko</name>
      <uri>https://old.reddit.com/user/nekofneko</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;The DeepSeek guys just open-sourced &lt;a href="https://github.com/GeeeekExplorer/nano-vllm"&gt;nano-vLLM&lt;/a&gt;. It’s a lightweight vLLM implementation built from scratch.&lt;/p&gt; &lt;h1&gt;Key Features&lt;/h1&gt; &lt;ul&gt; &lt;li&gt;🚀 &lt;strong&gt;Fast offline inference&lt;/strong&gt; - Comparable inference speeds to vLLM&lt;/li&gt; &lt;li&gt;📖 &lt;strong&gt;Readable codebase&lt;/strong&gt; - Clean implementation in ~ 1,200 lines of Python code&lt;/li&gt; &lt;li&gt;⚡ &lt;strong&gt;Optimization Suite&lt;/strong&gt; - Prefix caching, Tensor Parallelism, Torch compilation, CUDA graph, etc.&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/nekofneko"&gt; /u/nekofneko &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lgwsdr/deepseek_guys_opensource_nanovllm/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lgwsdr/deepseek_guys_opensource_nanovllm/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1lgwsdr/deepseek_guys_opensource_nanovllm/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-21T13:38:49+00:00</published>
  </entry>
</feed>
