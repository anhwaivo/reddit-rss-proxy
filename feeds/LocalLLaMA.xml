<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>/r/LocalLLaMA/.rss</id>
  <title>LocalLlama</title>
  <updated>2025-05-19T03:37:58+00:00</updated>
  <link href="https://old.reddit.com/r/LocalLLaMA/" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <icon>https://www.redditstatic.com/icon.png/</icon>
  <subtitle>Subreddit to discuss about Llama, the large language model created by Meta AI.</subtitle>
  <entry>
    <id>t3_1kparp9</id>
    <title>I built an AI-powered Food &amp; Nutrition Tracker that analyzes meals from photos! Planning to open-source it</title>
    <updated>2025-05-18T03:35:08+00:00</updated>
    <author>
      <name>/u/Solid_Woodpecker3635</name>
      <uri>https://old.reddit.com/user/Solid_Woodpecker3635</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kparp9/i_built_an_aipowered_food_nutrition_tracker_that/"&gt; &lt;img alt="I built an AI-powered Food &amp;amp; Nutrition Tracker that analyzes meals from photos! Planning to open-source it" src="https://external-preview.redd.it/bTdwaTR0Y2luZzFmMevpjUkJAH29ctL9GGNTRuXbe-uU1nbp5uR8WvjIiEr4.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=da78d36d46364fc0d727de49e40329c8901e0201" title="I built an AI-powered Food &amp;amp; Nutrition Tracker that analyzes meals from photos! Planning to open-source it" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hey&lt;/p&gt; &lt;p&gt;Been working on this Diet &amp;amp; Nutrition tracking app and wanted to share a quick demo of its current state. The core idea is to make food logging as painless as possible.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Key features so far:&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;AI Meal Analysis:&lt;/strong&gt; You can upload an image of your food, and the AI tries to identify it and provide nutritional estimates (calories, protein, carbs, fat).&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Manual Logging &amp;amp; Edits:&lt;/strong&gt; Of course, you can add/edit entries manually.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Daily Nutrition Overview:&lt;/strong&gt; Tracks calories against goals, macro distribution.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Water Intake:&lt;/strong&gt; Simple water tracking.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Weekly Stats &amp;amp; Streaks:&lt;/strong&gt; To keep motivation up.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;I'm really excited about the AI integration. It's still a work in progress, but the goal is to streamline the most tedious part of tracking.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Code Status:&lt;/strong&gt; I'm planning to clean up the codebase and open-source it on GitHub in the near future! For now, if you're interested in other AI/LLM related projects and learning resources I've put together, you can check out my &amp;quot;LLM-Learn-PK&amp;quot; repo:&lt;br /&gt; &lt;a href="https://www.google.com/url?sa=E&amp;amp;q=https%3A%2F%2Fgithub.com%2FPavankunchala%2FLLM-Learn-PK"&gt;https://github.com/Pavankunchala/LLM-Learn-PK&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;P.S.&lt;/strong&gt; On a related note, I'm actively looking for new opportunities in Computer Vision and LLM engineering. If your team is hiring or you know of any openings, I'd be grateful if you'd reach out!&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Email:&lt;/strong&gt; [&lt;a href="mailto:pavankunchalaofficial@gmail.com"&gt;pavankunchalaofficial@gmail.com&lt;/a&gt;](mailto:&lt;a href="mailto:pavankunchalaofficial@gmail.com"&gt;pavankunchalaofficial@gmail.com&lt;/a&gt;)&lt;/li&gt; &lt;li&gt;&lt;strong&gt;My other projects on GitHub:&lt;/strong&gt; &lt;a href="https://github.com/Pavankunchala"&gt;https://github.com/Pavankunchala&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Resume:&lt;/strong&gt; &lt;a href="https://drive.google.com/file/d/1ODtF3Q2uc0krJskE_F12uNALoXdgLtgp/view"&gt;https://drive.google.com/file/d/1ODtF3Q2uc0krJskE_F12uNALoXdgLtgp/view&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Thanks for checking it out!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Solid_Woodpecker3635"&gt; /u/Solid_Woodpecker3635 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://v.redd.it/cmoi3scing1f1"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kparp9/i_built_an_aipowered_food_nutrition_tracker_that/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kparp9/i_built_an_aipowered_food_nutrition_tracker_that/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-18T03:35:08+00:00</published>
  </entry>
  <entry>
    <id>t3_1kpvju2</id>
    <title>Best local LLaMA model for coding + fine-tuning on M2 Max (64 GB) &amp; Zed Editor?</title>
    <updated>2025-05-18T21:54:19+00:00</updated>
    <author>
      <name>/u/webmero</name>
      <uri>https://old.reddit.com/user/webmero</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hey everyone, I’m experimenting with running a LLaMA-style model 100% locally on my MacBook Pro M2 Max (64 GB RAM), and I have a few questions before I dive in:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Which model for coding?&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;•I work mainly in Astro, React and modern JS/TS stacks and we all know how this stacks update every week.&lt;br /&gt; •I’m torn between smaller/light models (7B/13B) vs. larger ones (34B/70B) — but I don’t want to hit swap or kill performance.&lt;br /&gt; •Anyone using Code Llama, StarCoder, PolyCoder, etc., locally? Which gave you the best dev-assistant experience? Currently I'm using cursor but with gemeni 2.5 pro and it works well for me but I want to switch to Zed since it's light weight and also let's us use our own local models.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Quantization &amp;amp; memory footprint&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;•I’ve heard about 8-bit / 4-bit quantization to squeeze a big model into limited RAM.&lt;br /&gt; •But I'm not sure exactly Any pitfalls on macOS?&lt;br /&gt; •Roughly, which quantized sizes actually fit (e.g. 13B-int8 vs. 34B-int4)? I don't understand too much about this quantize yet but yea I would research it more if indeed is a viable solution.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Training / fine-tuning for my stack&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;•I’d love the model to know Astro components, ShadCN patterns, React hooks, Tailwind conventions, etc.&lt;br /&gt; •What’s the easiest workflow?&lt;br /&gt; •LoRA / QLoRA on a small dataset?&lt;br /&gt; •In-context examples only?&lt;br /&gt; •Full fine-tune?&lt;br /&gt; •And down the road, as Astro/React evolve, is it better to append new data to my LoRA or just switch to an updated model checkpoint? &lt;/p&gt; &lt;p&gt;&lt;strong&gt;•Or is it just better to stick with MCP servers like context7 and just feed the models the documentations?&lt;/strong&gt; &lt;/p&gt; &lt;ol&gt; &lt;li&gt;Zed Editor integration&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;•I plan to use the model as my AI pair-programmer inside Zed Editor (it supports llama.cpp backends).&lt;br /&gt; •Are there any special flags or setup tips to get low latency/autocomplete working smoothly?&lt;/p&gt; &lt;p&gt;TL;DR&lt;/p&gt; &lt;p&gt;•Best local LLM for code? (size vs. performance on M2 Max)&lt;br /&gt; •How to quantize (8-bit / 4-bit) &amp;amp; fit in 64 GB&lt;br /&gt; •Fine-tuning strategy for Astro/React and ongoing updates&lt;br /&gt; •Zed Editor: best practices for a snappy dev-assistant&lt;/p&gt; &lt;p&gt;Thanks in advance for any pointers 😊&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/webmero"&gt; /u/webmero &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kpvju2/best_local_llama_model_for_coding_finetuning_on/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kpvju2/best_local_llama_model_for_coding_finetuning_on/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kpvju2/best_local_llama_model_for_coding_finetuning_on/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-18T21:54:19+00:00</published>
  </entry>
  <entry>
    <id>t3_1kpasqx</id>
    <title>Deepseek 700b Bitnet</title>
    <updated>2025-05-18T03:36:47+00:00</updated>
    <author>
      <name>/u/silenceimpaired</name>
      <uri>https://old.reddit.com/user/silenceimpaired</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Deepseek’s team has demonstrated the age old adage Necessity the mother of invention, and we know they have a great need in computation when compared against X, Open AI, and Google. This led them to develop V3 a 671B parameters MoE with 37B activated parameters. &lt;/p&gt; &lt;p&gt;MoE is here to stay at least for the interim, but the exercise untried to this point is MoE bitnet at large scale. Bitnet underperforms for the same parameters at full precision, and so future releases will likely adopt higher parameters. &lt;/p&gt; &lt;p&gt;What do you think the chances are Deepseek releases a MoE Bitnet and what will be the maximum parameters, and what will be the expert sizes? Do you think that will have a foundation expert that always runs each time in addition to to other experts? &lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/silenceimpaired"&gt; /u/silenceimpaired &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kpasqx/deepseek_700b_bitnet/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kpasqx/deepseek_700b_bitnet/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kpasqx/deepseek_700b_bitnet/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-18T03:36:47+00:00</published>
  </entry>
  <entry>
    <id>t3_1kpe33n</id>
    <title>Speed Up llama.cpp on Uneven Multi-GPU Setups (RTX 5090 + 2×3090)</title>
    <updated>2025-05-18T07:09:21+00:00</updated>
    <author>
      <name>/u/Thireus</name>
      <uri>https://old.reddit.com/user/Thireus</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hey folks, I just locked down some nice performance gains on my multi‑GPU rig (one RTX 5090 + two RTX 3090s) using llama.cpp. My total throughput jumped by ~16%. Although none of this is new, I wanted to share the step‑by‑step so anyone unfamiliar can replicate it on their own uneven setups.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;My Hardware:&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;GPU 0: NVIDIA RTX 5090 (fastest)&lt;/li&gt; &lt;li&gt;GPU 1: NVIDIA RTX 3090&lt;/li&gt; &lt;li&gt;GPU 2: NVIDIA RTX 3090&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;What Worked for Me:&lt;/strong&gt;&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Pin the biggest tensor to your fastest card&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;&lt;code&gt; --main-gpu 0 --override-tensor &amp;quot;token\_embd.weight=CUDA0&amp;quot; &lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;Gain: +13% tokens/s&lt;/em&gt;&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Offload more of the model into that fast GPU&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;&lt;code&gt; --tensor-split 60,40,40 &lt;/code&gt;&lt;/p&gt; &lt;p&gt;(I observed under‑utilization of total VRAM, so I shifted extra layers onto CUDA0)&lt;/p&gt; &lt;p&gt;&lt;em&gt;Gain: +3% tokens/s&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;em&gt;Total Improvement:&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;+17% tokens/s \o/&lt;/em&gt;&lt;/p&gt; &lt;h1&gt;My Workflow:&lt;/h1&gt; &lt;ol&gt; &lt;li&gt;Identify your fastest device (via nvidia-smi or simple benchmarks).&lt;/li&gt; &lt;li&gt;Dump all tensor names using a tiny Python script and gguf (via pip).&lt;/li&gt; &lt;li&gt;Iteratively override large tensors onto fastest GPU and benchmark (--override-tensor).&lt;/li&gt; &lt;li&gt;Once you hit diminishing returns, use --tensor-split to rebalance whole layers across GPUs.&lt;/li&gt; &lt;/ol&gt; &lt;h1&gt;Scripts &amp;amp; Commands&lt;/h1&gt; &lt;p&gt;&lt;strong&gt;1. Install GGUF reader&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;pip install gguf &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;2. Dump tensor info (save as ~/gguf_info.py)&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;```&lt;/p&gt; &lt;h1&gt;!/usr/bin/env python3&lt;/h1&gt; &lt;p&gt;import sys from pathlib import Path&lt;/p&gt; &lt;h1&gt;import the GGUF reader&lt;/h1&gt; &lt;p&gt;from gguf.gguf_reader import GGUFReader&lt;/p&gt; &lt;p&gt;def main(): if len(sys.argv) != 2: print(f&amp;quot;Usage: {sys.argv[0]} path/to/model.gguf&amp;quot;, file=sys.stderr) sys.exit(1)&lt;/p&gt; &lt;pre&gt;&lt;code&gt;gguf_path = Path(sys.argv[1]) reader = GGUFReader(gguf_path) # loads and memory-maps the GGUF file :contentReference[oaicite:0]{index=0} print(f&amp;quot;=== Tensors in {gguf_path.name} ===&amp;quot;) # reader.tensors is now a list of ReaderTensor(NamedTuple) :contentReference[oaicite:1]{index=1} for tensor in reader.tensors: name = tensor.name # tensor name, e.g. &amp;quot;layers.0.ffn_up_proj_exps&amp;quot; dtype = tensor.tensor_type.name # quantization / dtype, e.g. &amp;quot;Q4_K&amp;quot;, &amp;quot;F32&amp;quot; shape = tuple(int(dim) for dim in tensor.shape) # e.g. (4096, 11008) n_elements = tensor.n_elements # total number of elements n_bytes = tensor.n_bytes # total byte size on disk print(f&amp;quot;{name}\tshape={shape}\tdtype={dtype}\telements={n_elements}\tbytes={n_bytes}&amp;quot;) &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == &amp;quot;&lt;strong&gt;main&lt;/strong&gt;&amp;quot;: main() ```&lt;/p&gt; &lt;p&gt;Execute:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;chmod +x ~/gguf_info.py ~/gguf_info.py ~/models/Qwen3-32B-Q8_0.gguf &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Output example:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;output.weight shape=(5120, 151936) dtype=Q8_0 elements=777912320 bytes=826531840 output_norm.weight shape=(5120,) dtype=F32 elements=5120 bytes=20480 token_embd.weight shape=(5120, 151936) dtype=Q8_0 elements=777912320 bytes=826531840 blk.0.attn_k.weight shape=(5120, 1024) dtype=Q8_0 elements=5242880 bytes=5570560 blk.0.attn_k_norm.weight shape=(128,) dtype=F32 elements=128 bytes=512 blk.0.attn_norm.weight shape=(5120,) dtype=F32 elements=5120 bytes=20480 blk.0.attn_output.weight shape=(8192, 5120) dtype=Q8_0 elements=41943040 bytes=44564480 blk.0.attn_q.weight shape=(5120, 8192) dtype=Q8_0 elements=41943040 bytes=44564480 blk.0.attn_q_norm.weight shape=(128,) dtype=F32 elements=128 bytes=512 blk.0.attn_v.weight shape=(5120, 1024) dtype=Q8_0 elements=5242880 bytes=5570560 blk.0.ffn_down.weight shape=(25600, 5120) dtype=Q8_0 elements=131072000 bytes=139264000 blk.0.ffn_gate.weight shape=(5120, 25600) dtype=Q8_0 elements=131072000 bytes=139264000 blk.0.ffn_norm.weight shape=(5120,) dtype=F32 elements=5120 bytes=20480 blk.0.ffn_up.weight shape=(5120, 25600) dtype=Q8_0 elements=131072000 bytes=139264000 ... &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Note: Multiple --override-tensor flags are supported.&lt;/em&gt;&lt;/p&gt; &lt;p&gt;Edit: Script updated.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Thireus"&gt; /u/Thireus &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kpe33n/speed_up_llamacpp_on_uneven_multigpu_setups_rtx/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kpe33n/speed_up_llamacpp_on_uneven_multigpu_setups_rtx/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kpe33n/speed_up_llamacpp_on_uneven_multigpu_setups_rtx/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-18T07:09:21+00:00</published>
  </entry>
  <entry>
    <id>t3_1kppihw</id>
    <title>Handwriting OCR (HTR)</title>
    <updated>2025-05-18T17:33:56+00:00</updated>
    <author>
      <name>/u/dzdn1</name>
      <uri>https://old.reddit.com/user/dzdn1</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Has anyone experimented with using VLMs like Qwen2.5-VL to OCR handwriting? I have had better results on full pages of handwriting with unpredictable structure (old travel journals with dates in the margins or elsewhere, for instance) using Qwen than with traditional OCR or even more recent methods like TrOCR.&lt;/p&gt; &lt;p&gt;I believe that the VLMs' understanding of context should help figure out words better than traditional OCR. I do not know if this is actually true, but it seems worth trying.&lt;/p&gt; &lt;p&gt;Interestingly, though, using Transformers with unsloth/Qwen2.5-VL-7B-Instruct-unsloth-bnb-4bit ends up being much more accurate than any GGUF quantization using llama.cpp, even larger quants like Qwen2.5-VL-7B-Instruct-Q8_0.gguf from ggml-org/Qwen2.5-VL-7B-Instruct (using mmproj-Qwen2-VL-7B-Instruct-f16.gguf). I even tried a few Unsloth GGUFs, and still running the bnb 4bit through Transformers gets much better results.&lt;/p&gt; &lt;p&gt;That bnb quant, though, barely fits in my VRAM and ends up overflowing pretty quickly. GGUF would be much more flexible if it performed the same, but I am not sure why the results are so different.&lt;/p&gt; &lt;p&gt;Any ideas? Thanks!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/dzdn1"&gt; /u/dzdn1 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kppihw/handwriting_ocr_htr/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kppihw/handwriting_ocr_htr/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kppihw/handwriting_ocr_htr/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-18T17:33:56+00:00</published>
  </entry>
  <entry>
    <id>t3_1kpyrrs</id>
    <title>How can I improve this subtitle translator prompt?</title>
    <updated>2025-05-19T00:31:01+00:00</updated>
    <author>
      <name>/u/OneSteelTank</name>
      <uri>https://old.reddit.com/user/OneSteelTank</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hello, I've been trying to use AI models on OpenRouter in order to translate subtitles. My script will break the subtitle file into chunks and feed it to the LLM model 1 by 1. After a bit of testing I found Deepseek V3 0324 to yield the best results. However, it'll still take multiple tries for it to translate it properly. A lot of the time it does not translate the entire thing, or just starts saying random stuff. Before I start adjusting things like temperature I'd really appreciate if someone could look at my prompts to see if any improvements could be made&lt;/p&gt; &lt;p&gt;&lt;code&gt;SYSTEM_PROMPT = (&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;&amp;quot;You are a professional subtitle translator. &amp;quot;&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;&amp;quot;Respond only with the content, translated into the target language. &amp;quot;&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;&amp;quot;Do not add explanations, comments, or any extra text. &amp;quot;&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;&amp;quot;Maintain subtitle numbering, timestamps, and formatting exactly as in the original .srt file. &amp;quot;&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;&amp;quot;For sentences spanning multiple blocks: translate the complete sentence, then re-distribute it across the original blocks. Crucially, if the original sentence was split at a particular conceptual point, try to mirror this split point in the translated sentence when re-chunking, as long as it sounds natural in the target language. Timestamps and IDs must remain unchanged.&amp;quot;&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;&amp;quot;Your response must begin directly with the first subtitle block's ID number. No pleasantries such as 'Here is the translation:' or 'Okay, here's the SRT:'. &amp;quot;&lt;/code&gt; &lt;/p&gt; &lt;p&gt;&lt;code&gt;&amp;quot;Your response should have the same amount of subtitle blocks as the input.&amp;quot;&lt;/code&gt; &lt;/p&gt; &lt;p&gt;&lt;code&gt;)&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;USER_PROMPT_TEMPLATE = (&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;&amp;quot;Region/Country of the text: {region}\n&amp;quot;&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;&amp;quot;Translate the following .srt content into {target_language}, preserving the original meaning, timing, and structure. &amp;quot;&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;&amp;quot;Ensure each subtitle block is readable and respects the original display durations. &amp;quot;&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;&amp;quot;Output only a valid .srt file with the translated text.\n\n&amp;quot;&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;&amp;quot;{srt_text}&amp;quot;&lt;/code&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/OneSteelTank"&gt; /u/OneSteelTank &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kpyrrs/how_can_i_improve_this_subtitle_translator_prompt/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kpyrrs/how_can_i_improve_this_subtitle_translator_prompt/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kpyrrs/how_can_i_improve_this_subtitle_translator_prompt/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-19T00:31:01+00:00</published>
  </entry>
  <entry>
    <id>t3_1kpqrzz</id>
    <title>MLX vs. UD GGUF</title>
    <updated>2025-05-18T18:27:09+00:00</updated>
    <author>
      <name>/u/cspenn</name>
      <uri>https://old.reddit.com/user/cspenn</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Not sure if this is useful to anyone else, but I benchmarked Unsloth's Qwen3-30B-A3B Dynamic 2.0 GGUF against the MLX version. Both models are the 8-bit quantization. Both are running on LM Studio with the recommended Qwen 3 settings for samplers and temperature.&lt;/p&gt; &lt;p&gt;Results from the same thinking prompt:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;MLX: 3,516 tokens generated, 1.0s to first token, 70.6 tokens/second&lt;/li&gt; &lt;li&gt;UD GGUF: 3,321 tokens generated, 0.12s to first token, 23.41 tokens/second&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;This is on an MacBook M4 Max with 128 GB of RAM, all layers offloaded to the GPU.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/cspenn"&gt; /u/cspenn &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kpqrzz/mlx_vs_ud_gguf/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kpqrzz/mlx_vs_ud_gguf/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kpqrzz/mlx_vs_ud_gguf/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-18T18:27:09+00:00</published>
  </entry>
  <entry>
    <id>t3_1kp4scy</id>
    <title>AlphaEvolve Paper Dropped Yesterday - So I Built My Own Open-Source Version: OpenAlpha_Evolve!</title>
    <updated>2025-05-17T22:14:16+00:00</updated>
    <author>
      <name>/u/Huge-Designer-7825</name>
      <uri>https://old.reddit.com/user/Huge-Designer-7825</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kp4scy/alphaevolve_paper_dropped_yesterday_so_i_built_my/"&gt; &lt;img alt="AlphaEvolve Paper Dropped Yesterday - So I Built My Own Open-Source Version: OpenAlpha_Evolve!" src="https://external-preview.redd.it/HyXeCsstmjpayPcbhebb2CfV3uo4aDIHFzZeJ7oDZps.jpg?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=dfd4f6f0cce166ce310d3f28e00f2ea465bb8294" title="AlphaEvolve Paper Dropped Yesterday - So I Built My Own Open-Source Version: OpenAlpha_Evolve!" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Google DeepMind just dropped their AlphaEvolve paper (May 14th) on an AI that designs and evolves algorithms. Pretty groundbreaking.&lt;/p&gt; &lt;p&gt;Inspired, I immediately built OpenAlpha_Evolve – an open-source Python framework so anyone can experiment with these concepts.&lt;/p&gt; &lt;p&gt;This was a rapid build to get a functional version out. Feedback, ideas for new agent challenges, or contributions to improve it are welcome. Let's explore this new frontier.&lt;/p&gt; &lt;p&gt;Imagine an agent that can:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Understand a complex problem description.&lt;/li&gt; &lt;li&gt;Generate initial algorithmic solutions.&lt;/li&gt; &lt;li&gt;Rigorously test its own code.&lt;/li&gt; &lt;li&gt;Learn from failures and successes.&lt;/li&gt; &lt;li&gt;Evolve increasingly sophisticated and efficient algorithms over time.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;GitHub (All new code): &lt;a href="https://github.com/shyamsaktawat/OpenAlpha_Evolve"&gt;https://github.com/shyamsaktawat/OpenAlpha_Evolve&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/lcz46q2n1f1f1.png?width=1811&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=dcc14652b9eb0bf84ca7927dfe3c906786f07a40"&gt;https://preview.redd.it/lcz46q2n1f1f1.png?width=1811&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=dcc14652b9eb0bf84ca7927dfe3c906786f07a40&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Google Alpha Evolve Paper - &lt;a href="https://storage.googleapis.com/deepmind-media/DeepMind.com/Blog/alphaevolve-a-gemini-powered-coding-agent-for-designing-advanced-algorithms/AlphaEvolve.pdf"&gt;https://storage.googleapis.com/deepmind-media/DeepMind.com/Blog/alphaevolve-a-gemini-powered-coding-agent-for-designing-advanced-algorithms/AlphaEvolve.pdf&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Google Alpha Evolve Blogpost - &lt;a href="https://deepmind.google/discover/blog/alphaevolve-a-gemini-powered-coding-agent-for-designing-advanced-algorithms/"&gt;https://deepmind.google/discover/blog/alphaevolve-a-gemini-powered-coding-agent-for-designing-advanced-algorithms/&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Huge-Designer-7825"&gt; /u/Huge-Designer-7825 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kp4scy/alphaevolve_paper_dropped_yesterday_so_i_built_my/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kp4scy/alphaevolve_paper_dropped_yesterday_so_i_built_my/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kp4scy/alphaevolve_paper_dropped_yesterday_so_i_built_my/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-17T22:14:16+00:00</published>
  </entry>
  <entry>
    <id>t3_1kpxk18</id>
    <title>Riffusion Ai music generator Ai voices spoken word, Shakespeare "All the World's a Stage", Abraham Lincoln ordering Pizza, German, Russian Spanish Singing/spoken word. I clone these Riffusion Ai voices of emotion and use in Zonos to create various types of voices for male and female.</title>
    <updated>2025-05-18T23:29:35+00:00</updated>
    <author>
      <name>/u/Extension-Fee-8480</name>
      <uri>https://old.reddit.com/user/Extension-Fee-8480</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kpxk18/riffusion_ai_music_generator_ai_voices_spoken/"&gt; &lt;img alt="Riffusion Ai music generator Ai voices spoken word, Shakespeare &amp;quot;All the World's a Stage&amp;quot;, Abraham Lincoln ordering Pizza, German, Russian Spanish Singing/spoken word. I clone these Riffusion Ai voices of emotion and use in Zonos to create various types of voices for male and female." src="https://external-preview.redd.it/MzRsNGkwdmFqbTFmMQig-YZTkSc6LjowdLkLgQB-FI1hgO_IdhK5hGYwlsFQ.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=cf953150c403ce64272844e45c019aeff977c245" title="Riffusion Ai music generator Ai voices spoken word, Shakespeare &amp;quot;All the World's a Stage&amp;quot;, Abraham Lincoln ordering Pizza, German, Russian Spanish Singing/spoken word. I clone these Riffusion Ai voices of emotion and use in Zonos to create various types of voices for male and female." /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Extension-Fee-8480"&gt; /u/Extension-Fee-8480 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://v.redd.it/zmpy3wuajm1f1"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kpxk18/riffusion_ai_music_generator_ai_voices_spoken/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kpxk18/riffusion_ai_music_generator_ai_voices_spoken/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-18T23:29:35+00:00</published>
  </entry>
  <entry>
    <id>t3_1kpnfvo</id>
    <title>I made an AI agent to control a drone using Qwen2 and smolagents from hugging face</title>
    <updated>2025-05-18T16:05:10+00:00</updated>
    <author>
      <name>/u/_twelvechess</name>
      <uri>https://old.reddit.com/user/_twelvechess</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I used the smolagents library and hosted it on &lt;a href="https://www.linkedin.com/company/huggingface/"&gt;Hugging Face&lt;/a&gt;. Deepdrone is basically an AI agent that allows you to control a drone via LLM and run simple missions with the agent. You can test it full locally with Ardupilot (I did run a simulated mission on my mac) and I have also used the dronekit-python library for the agent as a toolYou can find the repo on hugging face with a demo:&lt;/p&gt; &lt;p&gt;&lt;a href="https://huggingface.co/spaces/evangelosmeklis/deepdrone"&gt;https://huggingface.co/spaces/evangelosmeklis/deepdrone&lt;/a&gt;&lt;/p&gt; &lt;p&gt;github repo mirror of hugging face: &lt;a href="https://github.com/evangelosmeklis/deepdrone"&gt;https://github.com/evangelosmeklis/deepdrone&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/_twelvechess"&gt; /u/_twelvechess &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kpnfvo/i_made_an_ai_agent_to_control_a_drone_using_qwen2/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kpnfvo/i_made_an_ai_agent_to_control_a_drone_using_qwen2/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kpnfvo/i_made_an_ai_agent_to_control_a_drone_using_qwen2/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-18T16:05:10+00:00</published>
  </entry>
  <entry>
    <id>t3_1kphmb4</id>
    <title>Meta is hosting Llama 3.3 8B Instruct on OpenRoute</title>
    <updated>2025-05-18T11:18:38+00:00</updated>
    <author>
      <name>/u/Asleep-Ratio7535</name>
      <uri>https://old.reddit.com/user/Asleep-Ratio7535</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;h1&gt;Meta: Llama 3.3 8B Instruct (free)&lt;/h1&gt; &lt;h1&gt;meta-llama/llama-3.3-8b-instruct:free&lt;/h1&gt; &lt;p&gt;Created May 14, 2025 128,000 context $0/M input tokens$0/M output tokens&lt;/p&gt; &lt;p&gt;A lightweight and ultra-fast variant of Llama 3.3 70B, for use when quick response times are needed most.&lt;/p&gt; &lt;p&gt;Provider is Meta. Thought?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Asleep-Ratio7535"&gt; /u/Asleep-Ratio7535 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kphmb4/meta_is_hosting_llama_33_8b_instruct_on_openroute/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kphmb4/meta_is_hosting_llama_33_8b_instruct_on_openroute/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kphmb4/meta_is_hosting_llama_33_8b_instruct_on_openroute/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-18T11:18:38+00:00</published>
  </entry>
  <entry>
    <id>t3_1kpxd7t</id>
    <title>I built a tool to profile LLM energy usage on Macs programmatically (down to the line of code)</title>
    <updated>2025-05-18T23:19:55+00:00</updated>
    <author>
      <name>/u/cachehit_</name>
      <uri>https://old.reddit.com/user/cachehit_</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;If you want to measure LLM energy consumption on Macs, you have options like powermetrics (a CLI tool that periodically prints energy usage to your terminal) or Activity Monitor. &lt;/p&gt; &lt;p&gt;These work fine if you just want a high-level glance at your LLM's energy usage, but if you want more precise measurement (like seeing &lt;strong&gt;energy used over specific lines of code&lt;/strong&gt;, or &lt;strong&gt;energy cost per token generated&lt;/strong&gt;, etc.), there's not really a super straightforward way. &lt;/p&gt; &lt;p&gt;That's why I built &amp;quot;zeus-apple-silicon&amp;quot; (&lt;a href="https://github.com/ml-energy/zeus-apple-silicon"&gt;github&lt;/a&gt;), a really tiny/lightweight library that lets you profile energy on Apple silicon programmatically, starting/stopping measurement at exactly the lines you want in your code.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;As a bonus&lt;/strong&gt;, it provides more detailed metrics than powermetrics or similar tools -- whereas powermetrics only gives you aggregates for CPU, GPU, and ANE, this library will also break down energy metrics per efficiency/performance core, DRAM, and so on. &lt;/p&gt; &lt;p&gt;The library is available as a package in &lt;strong&gt;Python&lt;/strong&gt;, but also as a header-only include in &lt;strong&gt;C++&lt;/strong&gt; (in case you're interfacing with, say, llama.cpp directly). &lt;/p&gt; &lt;p&gt;Check out a more detailed blog post about it (with examples) here: &lt;a href="https://ml.energy/blog/energy/measurement/profiling-llm-energy-consumption-on-macs/"&gt;https://ml.energy/blog/energy/measurement/profiling-llm-energy-consumption-on-macs/&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/cachehit_"&gt; /u/cachehit_ &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kpxd7t/i_built_a_tool_to_profile_llm_energy_usage_on/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kpxd7t/i_built_a_tool_to_profile_llm_energy_usage_on/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kpxd7t/i_built_a_tool_to_profile_llm_energy_usage_on/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-18T23:19:55+00:00</published>
  </entry>
  <entry>
    <id>t3_1kpqk4c</id>
    <title>Orange Pi AI Studio pro is now available. 192gb for ~2900$. Anyone knows how it performs and what can be done with it?</title>
    <updated>2025-05-18T18:17:45+00:00</updated>
    <author>
      <name>/u/MarinatedPickachu</name>
      <uri>https://old.reddit.com/user/MarinatedPickachu</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;There was some speculation about it some months ago in this thread: &lt;a href="https://www.reddit.com/r/LocalLLaMA/comments/1im141p/orange_pi_ai_studio_pro_mini_pc_with_408gbs/"&gt;https://www.reddit.com/r/LocalLLaMA/comments/1im141p/orange_pi_ai_studio_pro_mini_pc_with_408gbs/&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Seems it can be ordered now on AliExpress (96gb for ~2600$, 192gb for ~2900$, but I couldn't find any english reviews or more info on it than what was speculated early this year. It's not even listed on orangepi.org, but it is on the chinese orangepi website: &lt;a href="http://www.orangepi.cn/html/hardWare/computerAndMicrocontrollers/details/Orange-Pi-AI-Studio-Pro.html"&gt;http://www.orangepi.cn/html/hardWare/computerAndMicrocontrollers/details/Orange-Pi-AI-Studio-Pro.html&lt;/a&gt;. Maybe someone speaking chinese can find more info on it on the chinese web?&lt;/p&gt; &lt;p&gt;Afaik it's not a full mini computer but some usb4.0 add on.&lt;/p&gt; &lt;p&gt;Software support is likely going to be the biggest issue, but would really love to know about some real-world experiences with this thing.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/MarinatedPickachu"&gt; /u/MarinatedPickachu &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kpqk4c/orange_pi_ai_studio_pro_is_now_available_192gb/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kpqk4c/orange_pi_ai_studio_pro_is_now_available_192gb/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kpqk4c/orange_pi_ai_studio_pro_is_now_available_192gb/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-18T18:17:45+00:00</published>
  </entry>
  <entry>
    <id>t3_1kpzbvl</id>
    <title>To think or to no_think with Qwen3</title>
    <updated>2025-05-19T01:00:55+00:00</updated>
    <author>
      <name>/u/SandboChang</name>
      <uri>https://old.reddit.com/user/SandboChang</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Lately I got a 5090 and been experimenting with Qwen3-32B at Q5 (unsloth). With Flash attention and KV cache quantization at Q8, I am able to get up to 32k token window while fully occupying the GPU memory (30-31 GB). It gives a generation speed of 50 t/s which is very impressive. I am using that with Roocode via Visual Studio Code, served from LMStudio. (on Windows 11)&lt;/p&gt; &lt;p&gt;However, with thinking turned on, even though I followed the recommended settings by Alibaba, it almost never gave me good results. For a simple request like a small modification to a snake game, it can overthink all the way to fill up the 32k token window over a couple minutes and does nothing useful at all.&lt;/p&gt; &lt;p&gt;Comparing to that, the no_think option works a lot better for me. While it may not one-shot a request, it is very fast and with a couple corrections it can usually get the job done.&lt;/p&gt; &lt;p&gt;How is your experience so far? Did I miss anything when trying the thinking version of Qwen3? One problem could be with Cline/Roocode I could not really set the top_p/min_p/top_k, and they could be affecting my results. &lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/SandboChang"&gt; /u/SandboChang &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kpzbvl/to_think_or_to_no_think_with_qwen3/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kpzbvl/to_think_or_to_no_think_with_qwen3/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kpzbvl/to_think_or_to_no_think_with_qwen3/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-19T01:00:55+00:00</published>
  </entry>
  <entry>
    <id>t3_1kq1g7s</id>
    <title>The first author of the ParScale paper discusses how they turned ParScale from an idea into reality</title>
    <updated>2025-05-19T02:55:28+00:00</updated>
    <author>
      <name>/u/Dr_Karminski</name>
      <uri>https://old.reddit.com/user/Dr_Karminski</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kq1g7s/the_first_author_of_the_parscale_paper_discusses/"&gt; &lt;img alt="The first author of the ParScale paper discusses how they turned ParScale from an idea into reality" src="https://b.thumbs.redditmedia.com/bAgKbu4x_vB4NNm42eNbQsAZxlwnjN3U6xEN99bLNKc.jpg" title="The first author of the ParScale paper discusses how they turned ParScale from an idea into reality" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Because many friends have given feedback that Zhihu cannot be accessed without registration, I am simply using a translation plugin to translate posts from Zhihu into English and taking screenshots. &lt;/p&gt; &lt;p&gt;The original author is keytoyze, who holds all rights to the article. The original address is:&lt;/p&gt; &lt;p&gt;&lt;a href="http://www.zhihu.com/question/1907422978985169131/answer/1907565157103694086"&gt;www.zhihu.com/question/1907422978985169131/answer/1907565157103694086&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/coxrzxd6ln1f1.png?width=869&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=55637a7888ae9396e88a09ea0ed134bd153e7dcb"&gt;https://preview.redd.it/coxrzxd6ln1f1.png?width=869&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=55637a7888ae9396e88a09ea0ed134bd153e7dcb&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/hudkuuf7ln1f1.png?width=862&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=9c9af9f77370961a07bdc6876c6be9e84c3ff2de"&gt;https://preview.redd.it/hudkuuf7ln1f1.png?width=862&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=9c9af9f77370961a07bdc6876c6be9e84c3ff2de&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/xebnsy18ln1f1.png?width=877&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=b8c78a0d42bead0e4838d2f6f24da84d5a706b3a"&gt;https://preview.redd.it/xebnsy18ln1f1.png?width=877&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=b8c78a0d42bead0e4838d2f6f24da84d5a706b3a&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/3yuzdfp8ln1f1.png?width=866&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=a03790528375bd05619f79e335c08cafa9659595"&gt;https://preview.redd.it/3yuzdfp8ln1f1.png?width=866&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=a03790528375bd05619f79e335c08cafa9659595&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/z07wi6f9ln1f1.png?width=855&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=230c6c9bba3ae8d72838c06d5ae6c0f7fdab16d3"&gt;https://preview.redd.it/z07wi6f9ln1f1.png?width=855&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=230c6c9bba3ae8d72838c06d5ae6c0f7fdab16d3&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/bs6cecy9ln1f1.png?width=856&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=b948927ff6a3edeea98ddc37377eac53e5a968fd"&gt;https://preview.redd.it/bs6cecy9ln1f1.png?width=856&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=b948927ff6a3edeea98ddc37377eac53e5a968fd&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Dr_Karminski"&gt; /u/Dr_Karminski &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kq1g7s/the_first_author_of_the_parscale_paper_discusses/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kq1g7s/the_first_author_of_the_parscale_paper_discusses/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kq1g7s/the_first_author_of_the_parscale_paper_discusses/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-19T02:55:28+00:00</published>
  </entry>
  <entry>
    <id>t3_1kpefrt</id>
    <title>Uncensoring Qwen3 - Update</title>
    <updated>2025-05-18T07:33:48+00:00</updated>
    <author>
      <name>/u/Reader3123</name>
      <uri>https://old.reddit.com/user/Reader3123</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kpefrt/uncensoring_qwen3_update/"&gt; &lt;img alt="Uncensoring Qwen3 - Update" src="https://b.thumbs.redditmedia.com/eH_vWbN_8X_7nNz9liHgfyHpbjGX4GnyPkaDqklERQM.jpg" title="Uncensoring Qwen3 - Update" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;&lt;strong&gt;GrayLine&lt;/strong&gt; is my fine-tuning project based on &lt;strong&gt;Qwen3&lt;/strong&gt;. The goal is to produce models that respond directly and neutrally to sensitive or controversial questions, without moralizing, refusing, or redirecting—while still maintaining solid reasoning ability.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Training setup:&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Framework: Unsloth (QLoRA)&lt;/li&gt; &lt;li&gt;LoRA: Rank 32, Alpha 64, Dropout 0.05&lt;/li&gt; &lt;li&gt;Optimizer: adamw_8bit&lt;/li&gt; &lt;li&gt;Learning rate: 2e-5 → 1e-5&lt;/li&gt; &lt;li&gt;Epochs: 1 per phase&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;Curriculum strategy:&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Phase 1: 75% chain-of-thought / 25% direct answers&lt;/li&gt; &lt;li&gt;Phase 2: 50/50&lt;/li&gt; &lt;li&gt;Phase 3: 25% CoT / 75% direct&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;This progressive setup worked better than running three epochs with static mixing. It helped the model learn how to reason first, then shift to concise instruction-following.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Refusal benchmark (320 harmful prompts, using Huihui’s dataset):&lt;/strong&gt;&lt;/p&gt; &lt;table&gt;&lt;thead&gt; &lt;tr&gt; &lt;th align="left"&gt;Model&lt;/th&gt; &lt;th align="left"&gt;Think (%)&lt;/th&gt; &lt;th align="left"&gt;No_Think (%)&lt;/th&gt; &lt;th align="left"&gt;Notes&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt;&lt;tbody&gt; &lt;tr&gt; &lt;td align="left"&gt;Base&lt;/td&gt; &lt;td align="left"&gt;45.62&lt;/td&gt; &lt;td align="left"&gt;43.44&lt;/td&gt; &lt;td align="left"&gt;Redirects often (~70–85% actual)&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="left"&gt;GrayLine&lt;/td&gt; &lt;td align="left"&gt;95.62&lt;/td&gt; &lt;td align="left"&gt;100.00&lt;/td&gt; &lt;td align="left"&gt;Fully open responses&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="left"&gt;JOSIE&lt;/td&gt; &lt;td align="left"&gt;95.94&lt;/td&gt; &lt;td align="left"&gt;99.69&lt;/td&gt; &lt;td align="left"&gt;High compliance&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="left"&gt;Abliterated&lt;/td&gt; &lt;td align="left"&gt;100.00&lt;/td&gt; &lt;td align="left"&gt;100.00&lt;/td&gt; &lt;td align="left"&gt;Fully compliant&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/opof5uaiuh1f1.png?width=1580&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=c185365916d2b41e2555c915d455e54f2924a2a7"&gt;https://preview.redd.it/opof5uaiuh1f1.png?width=1580&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=c185365916d2b41e2555c915d455e54f2924a2a7&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Multi-turn evaluation (MT-Eval, GPT-4o judge):&lt;/strong&gt;&lt;/p&gt; &lt;table&gt;&lt;thead&gt; &lt;tr&gt; &lt;th align="left"&gt;Model&lt;/th&gt; &lt;th align="left"&gt;Score&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt;&lt;tbody&gt; &lt;tr&gt; &lt;td align="left"&gt;Base&lt;/td&gt; &lt;td align="left"&gt;8.27&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="left"&gt;GrayLine&lt;/td&gt; &lt;td align="left"&gt;8.18&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="left"&gt;Abliterated&lt;/td&gt; &lt;td align="left"&gt;8.04&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="left"&gt;JOSIE&lt;/td&gt; &lt;td align="left"&gt;8.01&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/6s8gwuhpuh1f1.png?width=1380&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=6216aeb7d7ae0cbf8e6db947e521bcc0e84e52c4"&gt;https://preview.redd.it/6s8gwuhpuh1f1.png?width=1380&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=6216aeb7d7ae0cbf8e6db947e521bcc0e84e52c4&lt;/a&gt;&lt;/p&gt; &lt;p&gt;GrayLine held up better across multiple turns than JOSIE or Abliterated.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Key takeaways:&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Curriculum learning (reasoning → direct) worked better than repetition&lt;/li&gt; &lt;li&gt;LoRA rank 32 + alpha 64 was a solid setup&lt;/li&gt; &lt;li&gt;Small batch sizes (2–3) preserved non-refusal behavior&lt;/li&gt; &lt;li&gt;Masking &lt;code&gt;&amp;lt;think&amp;gt;&lt;/code&gt; tags hurt output quality; keeping them visible was better&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;Trade-offs:&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Very logical and compliant, but not creative&lt;/li&gt; &lt;li&gt;Not suited for storytelling or roleplay&lt;/li&gt; &lt;li&gt;Best used where control and factual output are more important than style&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;What’s next:&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Testing the model using other benchmarks&lt;/li&gt; &lt;li&gt;Applying the method to a 30B MoE variant&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a href="https://huggingface.co/collections/soob3123/grayline-collection-qwen3-6821009e843331c5a9c27da1"&gt;Models Collection&lt;/a&gt;&lt;/p&gt; &lt;p&gt;This post isn’t meant to discredit any other model or fine-tune—just sharing results and comparisons for anyone interested. Every approach serves different use cases.&lt;/p&gt; &lt;p&gt;If you’ve got suggestions, ideas, or want to discuss similar work, feel free to reply.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Reader3123"&gt; /u/Reader3123 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kpefrt/uncensoring_qwen3_update/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kpefrt/uncensoring_qwen3_update/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kpefrt/uncensoring_qwen3_update/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-18T07:33:48+00:00</published>
  </entry>
  <entry>
    <id>t3_1kpohfm</id>
    <title>(5K t/s prefill 1K t/s gen) High throughput with Qwen3-30B on VLLM and it's smart enough for dataset curation!</title>
    <updated>2025-05-18T16:50:29+00:00</updated>
    <author>
      <name>/u/Arli_AI</name>
      <uri>https://old.reddit.com/user/Arli_AI</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kpohfm/5k_ts_prefill_1k_ts_gen_high_throughput_with/"&gt; &lt;img alt="(5K t/s prefill 1K t/s gen) High throughput with Qwen3-30B on VLLM and it's smart enough for dataset curation!" src="https://preview.redd.it/4o2ohg30kk1f1.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=882bf9251583ebe91545544f4fd8e3eb8e1ee902" title="(5K t/s prefill 1K t/s gen) High throughput with Qwen3-30B on VLLM and it's smart enough for dataset curation!" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;We've just started offering Qwen3-30B-A3B and internally it is being used for dataset filtering and curation. The speeds you can get out of it are extremely impressive running on VLLM and RTX 3090s! &lt;/p&gt; &lt;p&gt;I feel like Qwen3-30B is being overlooked in terms of where it can be really useful. Qwen3-30B might be a small regression from QwQ, but it's close enough to be just as useful and the speeds are so much faster that it makes it way more useful for dataset curation tasks.&lt;/p&gt; &lt;p&gt;Now the only issue is the super slow training speeds (10-20x slower than it should be which makes it untrainable), but it seems someone have made a PR to transformers that attempts to fix this so fingers crossed! New RpR model based on Qwen3-30B soon with a much improved dataset! &lt;a href="https://github.com/huggingface/transformers/pull/38133"&gt;https://github.com/huggingface/transformers/pull/38133&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Arli_AI"&gt; /u/Arli_AI &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://i.redd.it/4o2ohg30kk1f1.png"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kpohfm/5k_ts_prefill_1k_ts_gen_high_throughput_with/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kpohfm/5k_ts_prefill_1k_ts_gen_high_throughput_with/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-18T16:50:29+00:00</published>
  </entry>
  <entry>
    <id>t3_1kpwgjy</id>
    <title>Unlock Qwen3's Full Power: cot_proxy for Easy Mode Switching, Parameter Control &amp; Clean Outputs!</title>
    <updated>2025-05-18T22:35:12+00:00</updated>
    <author>
      <name>/u/ben1984th</name>
      <uri>https://old.reddit.com/user/ben1984th</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hey AI Devs &amp;amp; Qwen3 Users! 👋&lt;/p&gt; &lt;p&gt;Struggling to effectively use Qwen3 models with their hybrid reasoning (&lt;code&gt;/think&lt;/code&gt;) and normal (&lt;code&gt;/no_think&lt;/code&gt;) modes? It can be a real challenge when each mode needs different sampling parameters, and tools like Cline or RooCode don't offer that fine-grained control.&lt;/p&gt; &lt;p&gt;That's where &lt;code&gt;cot_proxy&lt;/code&gt; comes in! 🚀&lt;/p&gt; &lt;p&gt;&lt;code&gt;cot_proxy&lt;/code&gt; is a lightweight, Dockerized reverse proxy that sits between your application and your LLM, giving you powerful control over the request lifecycle. It's particularly game-changing for models like Qwen3.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;How&lt;/strong&gt; &lt;code&gt;cot_proxy&lt;/code&gt; &lt;strong&gt;makes your life easier:&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;🧠 &lt;strong&gt;Master Qwen3's Hybrid Nature:&lt;/strong&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Automatic Mode Commands:&lt;/strong&gt; Configure &lt;code&gt;cot_proxy&lt;/code&gt; to automatically append &lt;code&gt;/think&lt;/code&gt; or &lt;code&gt;/no_think&lt;/code&gt; to your prompts based on the &amp;quot;pseudo-model&amp;quot; you call.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Optimized Sampling Per Mode:&lt;/strong&gt; Define different sampling parameters (temperature, top_p, etc.) for your &amp;quot;thinking&amp;quot; and &amp;quot;non-thinking&amp;quot; Qwen3 configurations.&lt;/li&gt; &lt;/ul&gt;&lt;/li&gt; &lt;li&gt;🔧 &lt;strong&gt;Advanced Request Manipulation:&lt;/strong&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Model-Specific Configurations:&lt;/strong&gt; Create &amp;quot;pseudo-models&amp;quot; in your &lt;code&gt;.env&lt;/code&gt; file (e.g., &lt;code&gt;Qwen3-32B-Creative-Thinking&lt;/code&gt; vs. &lt;code&gt;Qwen3-32B-Factual-Concise&lt;/code&gt;). &lt;code&gt;cot_proxy&lt;/code&gt; then applies the specific parameters, prompt additions, and upstream model mapping you've defined.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Clean Outputs:&lt;/strong&gt; Automatically strip out &lt;code&gt;&amp;lt;think&amp;gt;...&amp;lt;/think&amp;gt;&lt;/code&gt; tags from responses, delivering only the final, clean answer – even with streaming!&lt;/li&gt; &lt;/ul&gt;&lt;/li&gt; &lt;li&gt;💡 &lt;strong&gt;Easy Integration:&lt;/strong&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Turnkey Qwen3 Examples:&lt;/strong&gt; Our &lt;a href="https://github.com/bold84/cot_proxy/blob/main/.env.example"&gt;&lt;code&gt;.env.example&lt;/code&gt;&lt;/a&gt; file provides working configurations to get you started with Qwen3 immediately.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Use with Any Client:&lt;/strong&gt; Seamlessly integrate Qwen3 (and other complex models) into applications that don't natively support advanced parameter or prompt adjustments.&lt;/li&gt; &lt;/ul&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Essentially, &lt;code&gt;cot_proxy&lt;/code&gt; lets you abstract away the complexities of managing sophisticated models, allowing your client applications to remain simple while still leveraging the full power of models like Qwen3.&lt;/p&gt; &lt;p&gt;🔗 &lt;strong&gt;Check it out, star it, and simplify your LLM workflows!&lt;/strong&gt;&lt;br /&gt; &lt;strong&gt;GitHub Repository:&lt;/strong&gt; &lt;a href="https://github.com/bold84/cot_proxy"&gt;https://github.com/bold84/cot_proxy&lt;/a&gt;&lt;/p&gt; &lt;p&gt;We'd love to hear your feedback and see how you use it!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/ben1984th"&gt; /u/ben1984th &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kpwgjy/unlock_qwen3s_full_power_cot_proxy_for_easy_mode/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kpwgjy/unlock_qwen3s_full_power_cot_proxy_for_easy_mode/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kpwgjy/unlock_qwen3s_full_power_cot_proxy_for_easy_mode/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-18T22:35:12+00:00</published>
  </entry>
  <entry>
    <id>t3_1kpozhd</id>
    <title>Cherry Studio is now my favorite frontend</title>
    <updated>2025-05-18T17:11:33+00:00</updated>
    <author>
      <name>/u/ConsistentCan4633</name>
      <uri>https://old.reddit.com/user/ConsistentCan4633</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I've been looking for an open source LLM frontend desktop app for a while that did everything; rag, web searching, local models, connecting to Gemini and ChatGPT, etc. Jan AI has a lot of potential but the rag is experimental and doesn't really work for me. Anything LLM's rag for some reason has never worked for me, which is surprising because the entire app is supposed to be built around RAG. LM Studio (not open source) is awesome but can't connect to cloud models. GPT4ALL was decent but the updater mechanism is buggy. &lt;/p&gt; &lt;p&gt;I remember seeing &lt;a href="https://github.com/CherryHQ/cherry-studio"&gt;Cherry Studio&lt;/a&gt; a while back but I'm wary with Chinese apps (I'm not sure if my suspicion is unfounded 🤷). I got tired of having to jump around apps for specific features so I downloaded Cherry Studio and it's the app that does everything I want. In fact, it has quite a bit more features I haven't touched on like direct connections to your Obsidian knowledge base. I never see this project being talked about, maybe there's a good reason?&lt;/p&gt; &lt;p&gt;I am not affiliated with Cherry Studio, I just want to explain my experience in hopes some of you may find the app useful. &lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/ConsistentCan4633"&gt; /u/ConsistentCan4633 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kpozhd/cherry_studio_is_now_my_favorite_frontend/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kpozhd/cherry_studio_is_now_my_favorite_frontend/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kpozhd/cherry_studio_is_now_my_favorite_frontend/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-18T17:11:33+00:00</published>
  </entry>
  <entry>
    <id>t3_1kpp5op</id>
    <title>is Qwen 30B-A3B the best model to run locally right now?</title>
    <updated>2025-05-18T17:18:58+00:00</updated>
    <author>
      <name>/u/S4lVin</name>
      <uri>https://old.reddit.com/user/S4lVin</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I recently got into running models locally, and just some days ago Qwen 3 got launched.&lt;/p&gt; &lt;p&gt;I saw a lot of posts about Mistral, Deepseek R1, end Llama, but since Qwen 3 got released recently, there isn't much information about it. But reading the benchmarks, it looks like Qwen 3 outperforms all the other models, and also the MoE version runs like a 20B+ model while using very little resources.&lt;/p&gt; &lt;p&gt;So i would like to ask, is it the only model i would need to get, or there are still other models that could be better than Qwen 3 in some areas? (My specs are: RTX 3080 Ti (12gb VRAM), 32gb of RAM, 12900K)&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/S4lVin"&gt; /u/S4lVin &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kpp5op/is_qwen_30ba3b_the_best_model_to_run_locally/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kpp5op/is_qwen_30ba3b_the_best_model_to_run_locally/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kpp5op/is_qwen_30ba3b_the_best_model_to_run_locally/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-18T17:18:58+00:00</published>
  </entry>
  <entry>
    <id>t3_1kprsun</id>
    <title>Skeptical about the increased focus on STEM and CoT</title>
    <updated>2025-05-18T19:10:54+00:00</updated>
    <author>
      <name>/u/Quazar386</name>
      <uri>https://old.reddit.com/user/Quazar386</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;With the release of Qwen3, I’ve been growing increasingly skeptical about the direction many labs are taking with CoT and STEM focused LLMs. With Qwen3, every model in the lineup follows a hybrid CoT approach and has a heavy emphasis on STEM tasks. This seems to be part of why the models feel “overcooked”. I have seen from other people that fine-tuning these models has been a challenge, especially with the reasoning baked in. This can be seen when applying instruction training data to the supposed base model that Qwen released. The training loss is surprisingly low which suggests that it’s already been instruction-primed to some extent, likely to better support CoT. This has not been a new thing as we have seen censorship and refusals from “base” models before.&lt;/p&gt; &lt;p&gt;Now, if the instruction-tuned checkpoints were always strong, maybe that would be acceptable. But I have seen a bunch of reports that these models tend to become overly repetitive in long multi-turn conversations. That’s actually what pushed some people to train their own base models for Qwen3. One possible explanation is that a large portion of the training seems focused on single-shot QA tasks for math and code.&lt;/p&gt; &lt;p&gt;This heavy emphasis on STEM capabilities has brought about an even bigger issue apart from fine-tuning. That is signs of knowledge degradation or what’s called catastrophic forgetting. Newer models, even some of the largest, are not making much headway on frontier knowledge benchmarks like Humanity’s Last Exam. This leads to hilarious results where Llama 2 7B beats out GPT 4.5 on that benchmark. While some might argue that raw knowledge isn’t a measure of intelligence, for LLMs, robust world knowledge is still critical for answering general questions or even coding for more niche applications. I don’t want LLMs to start relying on search tools for answering knowledge questions.&lt;/p&gt; &lt;p&gt;Going back to CoT, it’s also not a one-size-fits-all solution. It has an inherent latency since the model has to &amp;quot;think out loud&amp;quot; by generating thinking tokens before answering and often explores multiple unnecessary branches. While this could make models like R1 surprisingly charming in its human-like thoughts, the time it takes to answer can take too long, especially for more basic questions. While there have been some improvements in token efficiency, it’s still a bottleneck, especially in running local LLMs where hardware is a real limiting factor. It's what made me not that interested in running local CoT models as I have limited hardware.&lt;/p&gt; &lt;p&gt;More importantly, CoT doesn’t actually help with every task. In creative writing, for example, there’s no single correct answer to reason toward. Reasoning might help with coherence, but in my own testing, it usually results in less focused paragraphs. And at the end of the day, it’s still unclear whether these models are truly reasoning, or just remembering patterns from training. CoT models continue to struggle with genuinely novel problems, and we’ve seen that even without generating CoT tokens, some CoT models can still perform impressively compared to similarly sized non CoT trained models. I sometimes wonder if these models actually reason or just remember the steps to a memorized answer.&lt;/p&gt; &lt;p&gt;So yeah, I’m not fully sold on the CoT and STEM-heavy trajectory the field is on right now, especially when it comes at the cost of broad general capability and world knowledge. It feels like the field is optimizing for a narrow slice of tasks (math, code) while losing sight of what makes these models useful more broadly. This can already bee seen with the May release of Gemini 2.5 Pro where the only marketed improvement was in coding while everything else seems to be a downgrade from the March release of Gemini 2.5 Pro.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Quazar386"&gt; /u/Quazar386 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kprsun/skeptical_about_the_increased_focus_on_stem_and/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kprsun/skeptical_about_the_increased_focus_on_stem_and/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kprsun/skeptical_about_the_increased_focus_on_stem_and/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-18T19:10:54+00:00</published>
  </entry>
  <entry>
    <id>t3_1kq029v</id>
    <title>Is Qwen 2.5 Coder Instruct still the best option for local coding with 24GB VRAM?</title>
    <updated>2025-05-19T01:40:12+00:00</updated>
    <author>
      <name>/u/MrWeirdoFace</name>
      <uri>https://old.reddit.com/user/MrWeirdoFace</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Is Qwen 2.5 Coder Instruct still the best option for local coding with 24GB VRAM, or has that changed since Qwen 3 came out? I haven't noticed a coding model for it, but it's possible other models have come in gone that I've missed that handle python better than Qwen 2.5.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/MrWeirdoFace"&gt; /u/MrWeirdoFace &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kq029v/is_qwen_25_coder_instruct_still_the_best_option/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kq029v/is_qwen_25_coder_instruct_still_the_best_option/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kq029v/is_qwen_25_coder_instruct_still_the_best_option/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-19T01:40:12+00:00</published>
  </entry>
  <entry>
    <id>t3_1kppdhb</id>
    <title>MSI PC with NVIDIA GB10 Superchip - 6144 CUDA Cores and 128GB LPDDR5X Confirmed</title>
    <updated>2025-05-18T17:28:06+00:00</updated>
    <author>
      <name>/u/shakhizat</name>
      <uri>https://old.reddit.com/user/shakhizat</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;ASUS, Dell, and Lenovo have released their version of Nvidia DGX Spark, and now MSI has as well.&lt;/p&gt; &lt;p&gt;&lt;a href="https://en.gamegpu.com/iron/msi-showed-edgeexpert-ms-c931-s-nvidia-gb10-superchip-confirmed-6144-cuda-yader-i-128-gb-lpddr5x"&gt;https://en.gamegpu.com/iron/msi-showed-edgeexpert-ms-c931-s-nvidia-gb10-superchip-confirmed-6144-cuda-yader-i-128-gb-lpddr5x&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/shakhizat"&gt; /u/shakhizat &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kppdhb/msi_pc_with_nvidia_gb10_superchip_6144_cuda_cores/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kppdhb/msi_pc_with_nvidia_gb10_superchip_6144_cuda_cores/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kppdhb/msi_pc_with_nvidia_gb10_superchip_6144_cuda_cores/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-18T17:28:06+00:00</published>
  </entry>
  <entry>
    <id>t3_1kpw9nw</id>
    <title>Unlimited text-to-speech using Kokoro-JS, 100% local, 100% open source</title>
    <updated>2025-05-18T22:26:10+00:00</updated>
    <author>
      <name>/u/paranoidray</name>
      <uri>https://old.reddit.com/user/paranoidray</uri>
    </author>
    <content type="html">&amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/paranoidray"&gt; /u/paranoidray &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://streaming-kokoro.glitch.me/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kpw9nw/unlimited_texttospeech_using_kokorojs_100_local/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kpw9nw/unlimited_texttospeech_using_kokorojs_100_local/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-18T22:26:10+00:00</published>
  </entry>
  <entry>
    <id>t3_1kpyn8g</id>
    <title>Qwen released new paper and model: ParScale, ParScale-1.8B-(P1-P8)</title>
    <updated>2025-05-19T00:24:28+00:00</updated>
    <author>
      <name>/u/Dr_Karminski</name>
      <uri>https://old.reddit.com/user/Dr_Karminski</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kpyn8g/qwen_released_new_paper_and_model_parscale/"&gt; &lt;img alt="Qwen released new paper and model: ParScale, ParScale-1.8B-(P1-P8)" src="https://preview.redd.it/7q0xsc86um1f1.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=952df9feb0cce10d5227340e9e367e9fc6939abe" title="Qwen released new paper and model: ParScale, ParScale-1.8B-(P1-P8)" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;The original text says, 'We theoretically and empirically establish that scaling with P parallel streams is comparable to scaling the number of parameters by O(log P).' Does this mean that a 30B model can achieve the effect of a 45B model?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Dr_Karminski"&gt; /u/Dr_Karminski &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://i.redd.it/7q0xsc86um1f1.png"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kpyn8g/qwen_released_new_paper_and_model_parscale/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kpyn8g/qwen_released_new_paper_and_model_parscale/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-19T00:24:28+00:00</published>
  </entry>
</feed>
