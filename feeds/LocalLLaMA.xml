<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>/r/LocalLLaMA/.rss</id>
  <title>LocalLlama</title>
  <updated>2025-05-12T01:11:28+00:00</updated>
  <link href="https://old.reddit.com/r/LocalLLaMA/" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <icon>https://www.redditstatic.com/icon.png/</icon>
  <subtitle>Subreddit to discuss about Llama, the large language model created by Meta AI.</subtitle>
  <entry>
    <id>t3_1kjigz3</id>
    <title>What happened to Black Forest Labs?</title>
    <updated>2025-05-10T19:39:31+00:00</updated>
    <author>
      <name>/u/pigeon57434</name>
      <uri>https://old.reddit.com/user/pigeon57434</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;theyve been totally silent since november of last year with the release of flux tools and remember when flux 1 first came out they teased that a video generation model was coming soon? what happened with that? Same with stability AI, do they do anything anymore?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/pigeon57434"&gt; /u/pigeon57434 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kjigz3/what_happened_to_black_forest_labs/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kjigz3/what_happened_to_black_forest_labs/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kjigz3/what_happened_to_black_forest_labs/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-10T19:39:31+00:00</published>
  </entry>
  <entry>
    <id>t3_1kk6ur4</id>
    <title>Is it a good idea to use a very outdated CPU with an RTX 4090 GPU (48GB VRAM) to run a local LLaMA model?</title>
    <updated>2025-05-11T17:49:54+00:00</updated>
    <author>
      <name>/u/Mois_Du_sang</name>
      <uri>https://old.reddit.com/user/Mois_Du_sang</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I'm not sure when I would actually need both a high-end CPU and GPU for local AI workloads. I've seen suggestions that computation can be split between the CPU and GPU simultaneously. However, if your GPU has enough memory, there's no need to offload any computation to the CPU. Relying on the CPU and system RAM instead of GPU memory often results in slower performance.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Mois_Du_sang"&gt; /u/Mois_Du_sang &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kk6ur4/is_it_a_good_idea_to_use_a_very_outdated_cpu_with/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kk6ur4/is_it_a_good_idea_to_use_a_very_outdated_cpu_with/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kk6ur4/is_it_a_good_idea_to_use_a_very_outdated_cpu_with/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-11T17:49:54+00:00</published>
  </entry>
  <entry>
    <id>t3_1kk4j1u</id>
    <title>Faster and most accurate speech to text models (opensource/local)?</title>
    <updated>2025-05-11T16:08:11+00:00</updated>
    <author>
      <name>/u/TheMarketBuilder</name>
      <uri>https://old.reddit.com/user/TheMarketBuilder</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hi everyone,&lt;br /&gt; I am trying to dev an app for real time audio transcription. I need a local model for speech to text transcription (multilingual en, fr) that is fast so I can have live transcription. &lt;/p&gt; &lt;p&gt;Can you orientate me to the best existing models? I tried faster whisper 6 month ago, but I am not sure what are the new ones out their !&lt;/p&gt; &lt;p&gt;Thanks !&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/TheMarketBuilder"&gt; /u/TheMarketBuilder &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kk4j1u/faster_and_most_accurate_speech_to_text_models/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kk4j1u/faster_and_most_accurate_speech_to_text_models/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kk4j1u/faster_and_most_accurate_speech_to_text_models/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-11T16:08:11+00:00</published>
  </entry>
  <entry>
    <id>t3_1kjzq9s</id>
    <title>Free Real time AI speech-to-text better than WisperFlow?</title>
    <updated>2025-05-11T12:19:36+00:00</updated>
    <author>
      <name>/u/milkygirl21</name>
      <uri>https://old.reddit.com/user/milkygirl21</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I'm currently using Whisper Tiny / V3 Turbo via Buzz and it takes maybe 3-5s to translate my text, and the text gets dropped in Buzz instead of whichever AI app I'm using, say AI Studio. Which other app has a better UI and faster AI transcribing capabilities? Purpose is to have voice chat, but via AI Studio. &lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/milkygirl21"&gt; /u/milkygirl21 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kjzq9s/free_real_time_ai_speechtotext_better_than/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kjzq9s/free_real_time_ai_speechtotext_better_than/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kjzq9s/free_real_time_ai_speechtotext_better_than/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-11T12:19:36+00:00</published>
  </entry>
  <entry>
    <id>t3_1kk1dkh</id>
    <title>Time to First Token and Tokens/second</title>
    <updated>2025-05-11T13:45:48+00:00</updated>
    <author>
      <name>/u/TheTideRider</name>
      <uri>https://old.reddit.com/user/TheTideRider</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I have been seeing lots of benchmarking lately. I just want to make sure that my understandings are correct. TTFT measures the latency of prefilling and t/s measures the average speed of token generation after prefilling. Both of them depend on the context size. Let’s assume there is kv-cache. Prefilling walks through a prompt and its runtime latency is O(n&lt;sup&gt;2)&lt;/sup&gt; where n is the number of input tokens. T/s depends on the context size. It’s O(n) where n is the current context size. As the context gets longer, it gets slower.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/TheTideRider"&gt; /u/TheTideRider &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kk1dkh/time_to_first_token_and_tokenssecond/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kk1dkh/time_to_first_token_and_tokenssecond/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kk1dkh/time_to_first_token_and_tokenssecond/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-11T13:45:48+00:00</published>
  </entry>
  <entry>
    <id>t3_1kjts8s</id>
    <title>Why is decoder architecture used for text generation according to a prompt rather than encoder-decoder architecture?</title>
    <updated>2025-05-11T05:40:51+00:00</updated>
    <author>
      <name>/u/darkGrayAdventurer</name>
      <uri>https://old.reddit.com/user/darkGrayAdventurer</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hi!&lt;/p&gt; &lt;p&gt;Learning about LLMs for the first time, and this question is bothering me, I haven't been able to find an answer that intuitively makes sense. &lt;/p&gt; &lt;p&gt;To my understanding, encoder-decoder architectures are good for understanding the text that has been provided in a thorough manner (encoder architecture) as well as for building off of given text (decoder architecture). Using decoder-only will detract from the model's ability to gain a thorough understanding of what is being asked of it -- something that is achieved when using an encoder. &lt;/p&gt; &lt;p&gt;So, why aren't encoder-decoder architectures popular for LLMs when they are used for other common tasks, such as translation and summarization of input texts?&lt;/p&gt; &lt;p&gt;Thank you!!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/darkGrayAdventurer"&gt; /u/darkGrayAdventurer &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kjts8s/why_is_decoder_architecture_used_for_text/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kjts8s/why_is_decoder_architecture_used_for_text/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kjts8s/why_is_decoder_architecture_used_for_text/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-11T05:40:51+00:00</published>
  </entry>
  <entry>
    <id>t3_1kkbh73</id>
    <title>What kind of models and software are used for realtime license plate reading from RTSP streams? I'm used to working with LLMs, but this application seems to require a different approach. Anyone done something similar?</title>
    <updated>2025-05-11T21:10:38+00:00</updated>
    <author>
      <name>/u/__JockY__</name>
      <uri>https://old.reddit.com/user/__JockY__</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I'm very familiar with llama, vllm, exllama/tabby, etc for large language models, but no idea where to start with other special purpose models. &lt;/p&gt; &lt;p&gt;The idea is simple: connect a model to my home security cameras to detect and read my license plate as I reverse into my drive way. I want to generate a web hook trigger when my car's plate is recognized so that I can build automations (like switch on the lights at night, turn off the alarm, unlock the door, etc).&lt;/p&gt; &lt;p&gt;What have you all used for similar DIY projects?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/__JockY__"&gt; /u/__JockY__ &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kkbh73/what_kind_of_models_and_software_are_used_for/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kkbh73/what_kind_of_models_and_software_are_used_for/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kkbh73/what_kind_of_models_and_software_are_used_for/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-11T21:10:38+00:00</published>
  </entry>
  <entry>
    <id>t3_1kk69oo</id>
    <title>Best LLM for vision and tool calling with long context?</title>
    <updated>2025-05-11T17:24:29+00:00</updated>
    <author>
      <name>/u/opi098514</name>
      <uri>https://old.reddit.com/user/opi098514</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I’m working on a project right now that requires robust accurate tool calling and the ability to analyze images. Right now I’m just using multiple models for each but I’d like to use a single one if possible. What’s the best model out there for that? I need a context of at least 128k. &lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/opi098514"&gt; /u/opi098514 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kk69oo/best_llm_for_vision_and_tool_calling_with_long/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kk69oo/best_llm_for_vision_and_tool_calling_with_long/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kk69oo/best_llm_for_vision_and_tool_calling_with_long/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-11T17:24:29+00:00</published>
  </entry>
  <entry>
    <id>t3_1kjn2wv</id>
    <title>Cheap 48GB official Blackwell yay!</title>
    <updated>2025-05-10T23:16:22+00:00</updated>
    <author>
      <name>/u/Charuru</name>
      <uri>https://old.reddit.com/user/Charuru</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kjn2wv/cheap_48gb_official_blackwell_yay/"&gt; &lt;img alt="Cheap 48GB official Blackwell yay!" src="https://external-preview.redd.it/sC0_RV1rBP5Nka4zzrlrlknHQcvT_QUrChxq3hP_lVg.jpeg?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=e745729c3f7132892c715292c6b31f385f223e8f" title="Cheap 48GB official Blackwell yay!" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Charuru"&gt; /u/Charuru &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://www.nvidia.com/en-us/products/workstations/professional-desktop-gpus/rtx-pro-5000/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kjn2wv/cheap_48gb_official_blackwell_yay/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kjn2wv/cheap_48gb_official_blackwell_yay/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-10T23:16:22+00:00</published>
  </entry>
  <entry>
    <id>t3_1kkg73u</id>
    <title>Framework for on-device inference on mobile phones.</title>
    <updated>2025-05-12T01:03:39+00:00</updated>
    <author>
      <name>/u/Henrie_the_dreamer</name>
      <uri>https://old.reddit.com/user/Henrie_the_dreamer</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kkg73u/framework_for_ondevice_inference_on_mobile_phones/"&gt; &lt;img alt="Framework for on-device inference on mobile phones." src="https://external-preview.redd.it/axO1lDn6CC2LrdsT3SbLMT45Vyzny3pcatpM2NKYpJg.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=905ec86a17c05e43cc0018a3680500f2a395a8b5" title="Framework for on-device inference on mobile phones." /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hey everyone, just seeking feedback on a project we've been working on, to for running LLMs on mobile devices more seamless. Cactus has unified and consistent APIs across&lt;/p&gt; &lt;ul&gt; &lt;li&gt;React-Native&lt;/li&gt; &lt;li&gt;Android/Kotlin&lt;/li&gt; &lt;li&gt;Android/Java&lt;/li&gt; &lt;li&gt;iOS/Swift&lt;/li&gt; &lt;li&gt;iOS/Objective-C++&lt;/li&gt; &lt;li&gt;Flutter/Dart&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Cactus currently leverages GGML backends to support any GGUF model already compatible with Llama.cpp, while we focus on broadly supporting every moblie app development platform, as well as upcoming features like:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;MCP&lt;/li&gt; &lt;li&gt;phone tool use&lt;/li&gt; &lt;li&gt;thinking&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Please give us feedback if you have the time, and if feeling generous, please leave a star ⭐ to help us attract contributors :(&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Henrie_the_dreamer"&gt; /u/Henrie_the_dreamer &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://github.com/cactus-compute/cactus"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kkg73u/framework_for_ondevice_inference_on_mobile_phones/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kkg73u/framework_for_ondevice_inference_on_mobile_phones/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-12T01:03:39+00:00</published>
  </entry>
  <entry>
    <id>t3_1kk1fzx</id>
    <title>Own a RTX3080 10GB, is it good if I sidegrade it to RTX 5060Ti 16GB?</title>
    <updated>2025-05-11T13:49:09+00:00</updated>
    <author>
      <name>/u/akachan1228</name>
      <uri>https://old.reddit.com/user/akachan1228</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Owning an RTX 3080 10GB means sacrificing on VRAM. Very slow output if model exceeded the VRAM limit and start to offset layer to CPU.&lt;/p&gt; &lt;p&gt;Not planning to get the RTX3090 as still very expensive even surveying used market.&lt;/p&gt; &lt;p&gt;Question is, how worthy is the RTX 5060 16gb compared to the RTX 3080 10GB ? I can sale the RTX3080 on the 2nd hand market and get a new RTX 5060 16GB for a slightly similar price.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/akachan1228"&gt; /u/akachan1228 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kk1fzx/own_a_rtx3080_10gb_is_it_good_if_i_sidegrade_it/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kk1fzx/own_a_rtx3080_10gb_is_it_good_if_i_sidegrade_it/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kk1fzx/own_a_rtx3080_10gb_is_it_good_if_i_sidegrade_it/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-11T13:49:09+00:00</published>
  </entry>
  <entry>
    <id>t3_1kjwi3w</id>
    <title>How I Run Gemma 3 27B on an RX 7800 XT 16GB Locally!</title>
    <updated>2025-05-11T08:48:00+00:00</updated>
    <author>
      <name>/u/COBECT</name>
      <uri>https://old.reddit.com/user/COBECT</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hey everyone!&lt;/p&gt; &lt;p&gt;I've been successfully running the &lt;strong&gt;Gemma 3 27B&lt;/strong&gt; model locally on my &lt;strong&gt;RX 7800 XT 16GB&lt;/strong&gt; and wanted to share my setup and performance results. It's amazing to be able to run such a powerful model entirely on the GPU!&lt;/p&gt; &lt;p&gt;I opted for the &lt;strong&gt;&lt;code&gt;gemma-3-27B-it-qat-GGUF&lt;/code&gt;&lt;/strong&gt; version provided by the &lt;a href="https://huggingface.co/lmstudio-community/gemma-3-27B-it-qat-GGUF"&gt;lmstudio-community&lt;/a&gt; on HuggingFace. The size of this GGUF model is perfect for my card, allowing it to fit entirely in VRAM.&lt;/p&gt; &lt;h3&gt;My Workflow:&lt;/h3&gt; &lt;p&gt;I mostly use LM Studio for day-to-day interaction (super easy!), but I've been experimenting with running it directly via &lt;code&gt;llama.cpp&lt;/code&gt; server for a bit more control and benchmarking. &lt;/p&gt; &lt;p&gt;Here's a breakdown of my rig:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Case:&lt;/strong&gt; Lian Li A4-H2O&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Motherboard:&lt;/strong&gt; MSI H510I&lt;/li&gt; &lt;li&gt;&lt;strong&gt;CPU:&lt;/strong&gt; Intel Core i5-11400&lt;/li&gt; &lt;li&gt;&lt;strong&gt;RAM:&lt;/strong&gt; Netac 32GB DDR4 3200MHz&lt;/li&gt; &lt;li&gt;&lt;strong&gt;GPU:&lt;/strong&gt; Sapphire RX 7800 XT Pulse 16GB&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Cooler:&lt;/strong&gt; ID-Cooling Dashflow 240 Basic&lt;/li&gt; &lt;li&gt;&lt;strong&gt;PSU:&lt;/strong&gt; Cooler Master V750 SFX Gold&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;Running Gemma with Llama.cpp&lt;/h3&gt; &lt;p&gt;I’m using parameters &lt;a href="https://docs.unsloth.ai/basics/gemma-3-how-to-run-and-fine-tune"&gt;recommended by the Unsloth team&lt;/a&gt; for inference and aiming for a 16K context size. This is a Windows setup.&lt;/p&gt; &lt;p&gt;Here’s the command I'm using to launch the server:&lt;/p&gt; &lt;p&gt;&lt;code&gt;cmd ~\.llama.cpp\llama-cpp-bin-win-hip-x64\llama-server ^ --host 0.0.0.0 ^ --port 1234 ^ --log-file llama-server.log ^ --alias &amp;quot;gemma-3-27b-it-qat&amp;quot; ^ --model C:\HuggingFace\lmstudio-community\gemma-3-27B-it-qat-GGUF\gemma-3-27B-it-QAT-Q4_0.gguf ^ --threads 5 ^ --ctx-size 16384 ^ --n-gpu-layers 63 ^ --repeat-penalty 1.0 ^ --temp 1.0 ^ --min-p 0.01 ^ --top-k 64 ^ --top-p 0.95 ^ --ubatch-size 512 &lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Important Notes on Parameters:&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;strong&gt;&lt;code&gt;--host 0.0.0.0&lt;/code&gt;&lt;/strong&gt;: Allows access from other devices on the network.&lt;/li&gt; &lt;li&gt; &lt;strong&gt;&lt;code&gt;--port 1234&lt;/code&gt;&lt;/strong&gt;: The port the server will run on.&lt;/li&gt; &lt;li&gt; &lt;strong&gt;&lt;code&gt;--log-file llama-server.log&lt;/code&gt;&lt;/strong&gt;: Saves server logs for debugging.&lt;/li&gt; &lt;li&gt; &lt;strong&gt;&lt;code&gt;--alias &amp;quot;gemma-3-27b-it-qat&amp;quot;&lt;/code&gt;&lt;/strong&gt;: A friendly name for the model.&lt;/li&gt; &lt;li&gt; &lt;strong&gt;&lt;code&gt;--model&lt;/code&gt;&lt;/strong&gt;: Path to the GGUF model file. &lt;em&gt;Make sure to adjust this to your specific directory.&lt;/em&gt;&lt;/li&gt; &lt;li&gt; &lt;strong&gt;&lt;code&gt;--threads 5&lt;/code&gt;&lt;/strong&gt;: Number of CPU threads to use, based on your CPU thread count - 1.&lt;/li&gt; &lt;li&gt; &lt;strong&gt;&lt;code&gt;--ctx-size 16384&lt;/code&gt;&lt;/strong&gt;: Sets the context length to 16K. Experiment with this based on your RAM! Higher context = more VRAM usage.&lt;/li&gt; &lt;li&gt; &lt;strong&gt;&lt;code&gt;--n-gpu-layers 63&lt;/code&gt;&lt;/strong&gt;: This offloads all layers to the GPU. With 16GB of VRAM on the 7800 XT, I'm able to push this to the maximum. Lower this value if you run into OOM errors (Out of Memory).&lt;/li&gt; &lt;li&gt; &lt;strong&gt;&lt;code&gt;--repeat-penalty 1.0&lt;/code&gt;&lt;/strong&gt;: Avoids repetitive output.&lt;/li&gt; &lt;li&gt; &lt;strong&gt;&lt;code&gt;--temp 1.0&lt;/code&gt;&lt;/strong&gt;: Sampling temperature.&lt;/li&gt; &lt;li&gt; &lt;strong&gt;&lt;code&gt;--min-p 0.01&lt;/code&gt;&lt;/strong&gt;: Minimum probability.&lt;/li&gt; &lt;li&gt; &lt;strong&gt;&lt;code&gt;--top-k 64&lt;/code&gt;&lt;/strong&gt;: Top-k sampling.&lt;/li&gt; &lt;li&gt; &lt;strong&gt;&lt;code&gt;--top-p 0.95&lt;/code&gt;&lt;/strong&gt;: Top-p sampling.&lt;/li&gt; &lt;li&gt; &lt;strong&gt;&lt;code&gt;--ubatch-size 512&lt;/code&gt;&lt;/strong&gt;: Increases batch size for faster inference.&lt;/li&gt; &lt;li&gt; &lt;strong&gt;KV Cache:&lt;/strong&gt; I tested both F16 and Q8_0 KV Cache for performance comparison.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;I used these parameters based on the recommendations provided by the Unsloth team for Gemma 3 inference:&lt;/strong&gt; &lt;a href="https://docs.unsloth.ai/basics/gemma-3-how-to-run-and-fine-tune"&gt;https://docs.unsloth.ai/basics/gemma-3-how-to-run-and-fine-tune&lt;/a&gt;&lt;/p&gt; &lt;h3&gt;Benchmark Results (Prompt: &amp;quot;What is the reason of life?&amp;quot;)&lt;/h3&gt; &lt;p&gt;I ran a simple benchmark to get a sense of the performance. Here's what I'm seeing:&lt;/p&gt; &lt;table&gt;&lt;thead&gt; &lt;tr&gt; &lt;th&gt;Runtime&lt;/th&gt; &lt;th&gt;KV Cache&lt;/th&gt; &lt;th&gt;Tokens/Second (t/s)&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt;&lt;tbody&gt; &lt;tr&gt; &lt;td&gt;ROCm&lt;/td&gt; &lt;td&gt;F16&lt;/td&gt; &lt;td&gt;17.4&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;ROCm&lt;/td&gt; &lt;td&gt;Q8_0&lt;/td&gt; &lt;td&gt;20.8&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Vulkan&lt;/td&gt; &lt;td&gt;F16&lt;/td&gt; &lt;td&gt;14.8&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Vulkan&lt;/td&gt; &lt;td&gt;Q8_0&lt;/td&gt; &lt;td&gt;9.9&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; &lt;p&gt;&lt;strong&gt;Observations:&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;strong&gt;ROCm outperforms Vulkan in my setup.&lt;/strong&gt; I'm not sure why, but it's consistent across multiple runs.&lt;/li&gt; &lt;li&gt; &lt;strong&gt;Q8_0 quantization provides a speed boost compared to F16&lt;/strong&gt;, though with a potential (small) tradeoff in quality.&lt;/li&gt; &lt;li&gt; The 7800XT can really push the 27B model, and the results are impressive.&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;Things to Note:&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; Your mileage may vary depending on your system configuration and specific model quantization.&lt;/li&gt; &lt;li&gt; Ensure you have the latest AMD drivers installed.&lt;/li&gt; &lt;li&gt; Experiment with the parameters to find the optimal balance of speed and quality for your needs.&lt;/li&gt; &lt;li&gt; ROCm support can be tricky to set up on Windows. Make sure you have it configured correctly.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;I'm still exploring optimizations and fine-tuning, but I wanted to share these results in case it helps anyone else thinking about running Gemma 3 27B on similar hardware with 16GB GPU. Let me know if you have any questions or suggestions in the comments. Happy inferencing!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/COBECT"&gt; /u/COBECT &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kjwi3w/how_i_run_gemma_3_27b_on_an_rx_7800_xt_16gb/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kjwi3w/how_i_run_gemma_3_27b_on_an_rx_7800_xt_16gb/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kjwi3w/how_i_run_gemma_3_27b_on_an_rx_7800_xt_16gb/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-11T08:48:00+00:00</published>
  </entry>
  <entry>
    <id>t3_1kjy99w</id>
    <title>Tinygrad eGPU for Apple Silicon - Also huge for AMD Ai Max 395?</title>
    <updated>2025-05-11T10:50:03+00:00</updated>
    <author>
      <name>/u/Mr_Moonsilver</name>
      <uri>https://old.reddit.com/user/Mr_Moonsilver</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;As a reddit user reported earlier today, George Hotz dropped a very powerful update to the tinygrad master repo, that allows the connection of an AMD eGPU to Apple Silicon Macs.&lt;/p&gt; &lt;p&gt;Since it is using libusb under the hood, this should also work on Windows and Linux. This could be particularly interesting to add GPU capabilities to Ai Mini PCs like the ones from Framework, Asus and other manufacturers, running the AMD Ai Max 395 with up to 128GB of unified Memory.&lt;/p&gt; &lt;p&gt;What's your take? How would you put this to good use?&lt;/p&gt; &lt;p&gt;Reddit Post: &lt;a href="https://www.reddit.com/r/LocalLLaMA/s/lVfr7TcGph"&gt;https://www.reddit.com/r/LocalLLaMA/s/lVfr7TcGph&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Github: &lt;a href="https://github.com/tinygrad/tinygrad"&gt;https://github.com/tinygrad/tinygrad&lt;/a&gt;&lt;/p&gt; &lt;p&gt;X: &lt;a href="https://x.com/tinygrad/status/1920960070055080107"&gt;https://x.com/tinygrad/status/1920960070055080107&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Mr_Moonsilver"&gt; /u/Mr_Moonsilver &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kjy99w/tinygrad_egpu_for_apple_silicon_also_huge_for_amd/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kjy99w/tinygrad_egpu_for_apple_silicon_also_huge_for_amd/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kjy99w/tinygrad_egpu_for_apple_silicon_also_huge_for_amd/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-11T10:50:03+00:00</published>
  </entry>
  <entry>
    <id>t3_1kk43eo</id>
    <title>Hardware specs comparison to host Mistral small 24B</title>
    <updated>2025-05-11T15:49:07+00:00</updated>
    <author>
      <name>/u/No_Palpitation7740</name>
      <uri>https://old.reddit.com/user/No_Palpitation7740</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kk43eo/hardware_specs_comparison_to_host_mistral_small/"&gt; &lt;img alt="Hardware specs comparison to host Mistral small 24B" src="https://external-preview.redd.it/T4sMn15QFsNG_0KdS2BwGdWLAF8Ie_ulw9XpnsXfqsE.jpeg?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=37e0992d289e953d6af5186034ff41b5b4d77814" title="Hardware specs comparison to host Mistral small 24B" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I am comparing hardware specifications for a customer who wants to host Mistral small 24B locally for inference. He would like to know if it's worth buying a GPU server instead of consuming the MistralAI API, and if so, when the breakeven point occurs. Here are my assumptions:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;p&gt;Model weights are FP16 and the 128k context window is fully utilized.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;The formula to compute the required VRAM is the product of:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Context length&lt;/li&gt; &lt;li&gt;Number of layers&lt;/li&gt; &lt;li&gt;Number of key-value heads&lt;/li&gt; &lt;li&gt;Head dimension - 2 (2-bytes per float16) - 2 (one for keys, one for values)&lt;/li&gt; &lt;li&gt;Number of users&lt;/li&gt; &lt;/ul&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;To calculate the upper bound, the number of users is the maximum number of concurrent users the hardware can handle with the full 128k token context window.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;The use of an AI agent consumes approximately 25 times the number of tokens compared to a normal chat (Source: &lt;a href="https://www.businessinsider.com/ai-super-agents-enough-computing-power-openai-deepseek-2025-3"&gt;https://www.businessinsider.com/ai-super-agents-enough-computing-power-openai-deepseek-2025-3&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;My comparison resulted in this table. The price of electricity for professionals here is about 0.20€/kWh all taxes included. Because of this, the breakeven point is at least 8.3 years for the Nvidia DGX A100. The Apple Mac Studio M3 Ultra reaches breakeven after 6 months, but it is significantly slower than the Nvidia and AMD products.&lt;/p&gt; &lt;p&gt;Given these data I think this is not worth investing in a GPU server, unless the customer absolutely requires privacy.&lt;/p&gt; &lt;p&gt;Do you think the numbers I found are reasonable? Were my assumptions too far off? I hope this helps the community.&lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/c0140tgw960f1.png?width=2427&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=7fdf2d5f2b15d88ef4621a830436459baebbaf3e"&gt;https://preview.redd.it/c0140tgw960f1.png?width=2427&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=7fdf2d5f2b15d88ef4621a830436459baebbaf3e&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Below some graphs :&lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/ghlcd725b60f1.png?width=1187&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=804fe43c28dab4a4cde53a1df5d1ca6b67df3a67"&gt;https://preview.redd.it/ghlcd725b60f1.png?width=1187&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=804fe43c28dab4a4cde53a1df5d1ca6b67df3a67&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/3f5x0dk5b60f1.png?width=1188&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=0c799d2e711a84b1355cd3b4515560a4450a3e0e"&gt;https://preview.redd.it/3f5x0dk5b60f1.png?width=1188&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=0c799d2e711a84b1355cd3b4515560a4450a3e0e&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/7emca9v5b60f1.png?width=1187&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=f7295ff311460e0d45dfa3ddd671e188840394c6"&gt;https://preview.redd.it/7emca9v5b60f1.png?width=1187&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=f7295ff311460e0d45dfa3ddd671e188840394c6&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/8bl4pcb6b60f1.png?width=1186&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=2ed692b1afc9caa440470f8779b44d46130de02f"&gt;https://preview.redd.it/8bl4pcb6b60f1.png?width=1186&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=2ed692b1afc9caa440470f8779b44d46130de02f&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/94h5rso6b60f1.png?width=1186&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=1fc7f3f07abc2f5c9f236e30ff20f300446f3f0c"&gt;https://preview.redd.it/94h5rso6b60f1.png?width=1186&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=1fc7f3f07abc2f5c9f236e30ff20f300446f3f0c&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/wm0y3j37b60f1.png?width=1185&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=7af8a86a7fbee60b5028349525fe2430ce2313d4"&gt;https://preview.redd.it/wm0y3j37b60f1.png?width=1185&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=7af8a86a7fbee60b5028349525fe2430ce2313d4&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/No_Palpitation7740"&gt; /u/No_Palpitation7740 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kk43eo/hardware_specs_comparison_to_host_mistral_small/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kk43eo/hardware_specs_comparison_to_host_mistral_small/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kk43eo/hardware_specs_comparison_to_host_mistral_small/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-11T15:49:07+00:00</published>
  </entry>
  <entry>
    <id>t3_1kk0ghi</id>
    <title>Speed Comparison with Qwen3-32B-q8_0, Ollama, Llama.cpp, 2x3090, M3Max</title>
    <updated>2025-05-11T12:59:11+00:00</updated>
    <author>
      <name>/u/chibop1</name>
      <uri>https://old.reddit.com/user/chibop1</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Requested by &lt;a href="/u/MLDataScientist"&gt;/u/MLDataScientist&lt;/a&gt;, here is a comparison test between Ollama and Llama.cpp on 2 x RTX-3090 and M3-Max with 64GB using Qwen3-32B-q8_0.&lt;/p&gt; &lt;p&gt;Just note, if you are interested in a comparison with most optimized setup, it would be &lt;a href="https://www.reddit.com/r/LocalLLaMA/comments/1ke26sl/another_attempt_to_measure_speed_for_qwen3_moe_on/"&gt;SGLang/VLLM for 4090 and MLX for M3Max with Qwen MoE architecture.&lt;/a&gt; This was primarily to compare Ollama and Llama.cpp under the same condition with Qwen3-32b model based on dense architecture. If interested, I also ran another &lt;a href="https://www.reddit.com/r/LocalLLaMA/comments/1kgxhdt/ollama_vs_llamacpp_on_2x3090_and_m3max_using/"&gt;similar benchmark using Qwen MoE architecture.&lt;/a&gt;&lt;/p&gt; &lt;h3&gt;Metrics&lt;/h3&gt; &lt;p&gt;To ensure consistency, I used a custom Python script that sends requests to the server via the OpenAI-compatible API. Metrics were calculated as follows:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Time to First Token (TTFT): Measured from the start of the streaming request to the first streaming event received.&lt;/li&gt; &lt;li&gt;Prompt Processing Speed (PP): Number of prompt tokens divided by TTFT.&lt;/li&gt; &lt;li&gt;Token Generation Speed (TG): Number of generated tokens divided by (total duration - TTFT).&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The displayed results were truncated to two decimal places, but the calculations used full precision. I made the script to prepend new material in the beginning of next longer prompt to avoid caching effect.&lt;/p&gt; &lt;p&gt;Here's my script for anyone interest. &lt;a href="https://github.com/chigkim/prompt-test"&gt;https://github.com/chigkim/prompt-test&lt;/a&gt;&lt;/p&gt; &lt;p&gt;It uses OpenAI API, so it should work in variety setup. Also, this tests one request at a time, so multiple parallel requests could result in higher throughput in different tests.&lt;/p&gt; &lt;h3&gt;Setup&lt;/h3&gt; &lt;p&gt;Both use the same q8_0 model from Ollama library with flash attention. I'm sure you can further optimize Llama.cpp, but I copied the flags from Ollama log in order to keep it consistent, so both use the exactly same flags when loading the model.&lt;/p&gt; &lt;p&gt;&lt;code&gt;./build/bin/llama-server --model ~/.ollama/models/blobs/sha256... --ctx-size 22000 --batch-size 512 --n-gpu-layers 65 --threads 32 --flash-attn --parallel 1 --tensor-split 33,32 --port 11434&lt;/code&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Llama.cpp: 5339 (3b24d26c)&lt;/li&gt; &lt;li&gt;Ollama: 0.6.8&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Each row in the results represents a test (a specific combination of machine, engine, and prompt length). There are 4 tests per prompt length.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Setup 1: 2xRTX3090, Llama.cpp&lt;/li&gt; &lt;li&gt;Setup 2: 2xRTX3090, Ollama&lt;/li&gt; &lt;li&gt;Setup 3: M3Max, Llama.cpp&lt;/li&gt; &lt;li&gt;Setup 4: M3Max, Ollama&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;Result&lt;/h3&gt; &lt;p&gt;Please zoom in to see the graph better.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Processing img 26e05b1zd50f1...&lt;/em&gt;&lt;/p&gt; &lt;table&gt;&lt;thead&gt; &lt;tr&gt; &lt;th&gt;Machine&lt;/th&gt; &lt;th&gt;Engine&lt;/th&gt; &lt;th&gt;Prompt Tokens&lt;/th&gt; &lt;th&gt;PP/s&lt;/th&gt; &lt;th&gt;TTFT&lt;/th&gt; &lt;th&gt;Generated Tokens&lt;/th&gt; &lt;th&gt;TG/s&lt;/th&gt; &lt;th&gt;Duration&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt;&lt;tbody&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;264&lt;/td&gt; &lt;td&gt;1033.18&lt;/td&gt; &lt;td&gt;0.26&lt;/td&gt; &lt;td&gt;968&lt;/td&gt; &lt;td&gt;21.71&lt;/td&gt; &lt;td&gt;44.84&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;Ollama&lt;/td&gt; &lt;td&gt;264&lt;/td&gt; &lt;td&gt;853.87&lt;/td&gt; &lt;td&gt;0.31&lt;/td&gt; &lt;td&gt;1041&lt;/td&gt; &lt;td&gt;21.44&lt;/td&gt; &lt;td&gt;48.87&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;M3Max&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;264&lt;/td&gt; &lt;td&gt;153.63&lt;/td&gt; &lt;td&gt;1.72&lt;/td&gt; &lt;td&gt;739&lt;/td&gt; &lt;td&gt;10.41&lt;/td&gt; &lt;td&gt;72.68&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;M3Max&lt;/td&gt; &lt;td&gt;Ollama&lt;/td&gt; &lt;td&gt;264&lt;/td&gt; &lt;td&gt;152.12&lt;/td&gt; &lt;td&gt;1.74&lt;/td&gt; &lt;td&gt;885&lt;/td&gt; &lt;td&gt;10.35&lt;/td&gt; &lt;td&gt;87.25&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;450&lt;/td&gt; &lt;td&gt;1184.75&lt;/td&gt; &lt;td&gt;0.38&lt;/td&gt; &lt;td&gt;1154&lt;/td&gt; &lt;td&gt;21.66&lt;/td&gt; &lt;td&gt;53.65&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;Ollama&lt;/td&gt; &lt;td&gt;450&lt;/td&gt; &lt;td&gt;1013.60&lt;/td&gt; &lt;td&gt;0.44&lt;/td&gt; &lt;td&gt;1177&lt;/td&gt; &lt;td&gt;21.38&lt;/td&gt; &lt;td&gt;55.51&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;M3Max&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;450&lt;/td&gt; &lt;td&gt;171.37&lt;/td&gt; &lt;td&gt;2.63&lt;/td&gt; &lt;td&gt;1273&lt;/td&gt; &lt;td&gt;10.28&lt;/td&gt; &lt;td&gt;126.47&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;M3Max&lt;/td&gt; &lt;td&gt;Ollama&lt;/td&gt; &lt;td&gt;450&lt;/td&gt; &lt;td&gt;169.53&lt;/td&gt; &lt;td&gt;2.65&lt;/td&gt; &lt;td&gt;1275&lt;/td&gt; &lt;td&gt;10.33&lt;/td&gt; &lt;td&gt;126.08&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;723&lt;/td&gt; &lt;td&gt;1405.67&lt;/td&gt; &lt;td&gt;0.51&lt;/td&gt; &lt;td&gt;1288&lt;/td&gt; &lt;td&gt;21.63&lt;/td&gt; &lt;td&gt;60.06&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;Ollama&lt;/td&gt; &lt;td&gt;723&lt;/td&gt; &lt;td&gt;1292.38&lt;/td&gt; &lt;td&gt;0.56&lt;/td&gt; &lt;td&gt;1343&lt;/td&gt; &lt;td&gt;21.31&lt;/td&gt; &lt;td&gt;63.59&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;M3Max&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;723&lt;/td&gt; &lt;td&gt;164.83&lt;/td&gt; &lt;td&gt;4.39&lt;/td&gt; &lt;td&gt;1274&lt;/td&gt; &lt;td&gt;10.29&lt;/td&gt; &lt;td&gt;128.22&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;M3Max&lt;/td&gt; &lt;td&gt;Ollama&lt;/td&gt; &lt;td&gt;723&lt;/td&gt; &lt;td&gt;163.79&lt;/td&gt; &lt;td&gt;4.41&lt;/td&gt; &lt;td&gt;1204&lt;/td&gt; &lt;td&gt;10.27&lt;/td&gt; &lt;td&gt;121.62&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;1219&lt;/td&gt; &lt;td&gt;1602.61&lt;/td&gt; &lt;td&gt;0.76&lt;/td&gt; &lt;td&gt;1815&lt;/td&gt; &lt;td&gt;21.44&lt;/td&gt; &lt;td&gt;85.42&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;Ollama&lt;/td&gt; &lt;td&gt;1219&lt;/td&gt; &lt;td&gt;1498.43&lt;/td&gt; &lt;td&gt;0.81&lt;/td&gt; &lt;td&gt;1445&lt;/td&gt; &lt;td&gt;21.35&lt;/td&gt; &lt;td&gt;68.49&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;M3Max&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;1219&lt;/td&gt; &lt;td&gt;169.15&lt;/td&gt; &lt;td&gt;7.21&lt;/td&gt; &lt;td&gt;1302&lt;/td&gt; &lt;td&gt;10.19&lt;/td&gt; &lt;td&gt;134.92&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;M3Max&lt;/td&gt; &lt;td&gt;Ollama&lt;/td&gt; &lt;td&gt;1219&lt;/td&gt; &lt;td&gt;168.32&lt;/td&gt; &lt;td&gt;7.24&lt;/td&gt; &lt;td&gt;1686&lt;/td&gt; &lt;td&gt;10.11&lt;/td&gt; &lt;td&gt;173.98&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;1858&lt;/td&gt; &lt;td&gt;1734.46&lt;/td&gt; &lt;td&gt;1.07&lt;/td&gt; &lt;td&gt;1375&lt;/td&gt; &lt;td&gt;21.37&lt;/td&gt; &lt;td&gt;65.42&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;Ollama&lt;/td&gt; &lt;td&gt;1858&lt;/td&gt; &lt;td&gt;1635.95&lt;/td&gt; &lt;td&gt;1.14&lt;/td&gt; &lt;td&gt;1293&lt;/td&gt; &lt;td&gt;21.13&lt;/td&gt; &lt;td&gt;62.34&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;M3Max&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;1858&lt;/td&gt; &lt;td&gt;166.81&lt;/td&gt; &lt;td&gt;11.14&lt;/td&gt; &lt;td&gt;1411&lt;/td&gt; &lt;td&gt;10.09&lt;/td&gt; &lt;td&gt;151.03&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;M3Max&lt;/td&gt; &lt;td&gt;Ollama&lt;/td&gt; &lt;td&gt;1858&lt;/td&gt; &lt;td&gt;166.96&lt;/td&gt; &lt;td&gt;11.13&lt;/td&gt; &lt;td&gt;1450&lt;/td&gt; &lt;td&gt;10.10&lt;/td&gt; &lt;td&gt;154.70&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;2979&lt;/td&gt; &lt;td&gt;1789.89&lt;/td&gt; &lt;td&gt;1.66&lt;/td&gt; &lt;td&gt;2000&lt;/td&gt; &lt;td&gt;21.09&lt;/td&gt; &lt;td&gt;96.51&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;Ollama&lt;/td&gt; &lt;td&gt;2979&lt;/td&gt; &lt;td&gt;1735.97&lt;/td&gt; &lt;td&gt;1.72&lt;/td&gt; &lt;td&gt;1628&lt;/td&gt; &lt;td&gt;20.83&lt;/td&gt; &lt;td&gt;79.88&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;M3Max&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;2979&lt;/td&gt; &lt;td&gt;162.22&lt;/td&gt; &lt;td&gt;18.36&lt;/td&gt; &lt;td&gt;2000&lt;/td&gt; &lt;td&gt;9.89&lt;/td&gt; &lt;td&gt;220.57&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;M3Max&lt;/td&gt; &lt;td&gt;Ollama&lt;/td&gt; &lt;td&gt;2979&lt;/td&gt; &lt;td&gt;161.46&lt;/td&gt; &lt;td&gt;18.45&lt;/td&gt; &lt;td&gt;1643&lt;/td&gt; &lt;td&gt;9.88&lt;/td&gt; &lt;td&gt;184.68&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;4669&lt;/td&gt; &lt;td&gt;1791.05&lt;/td&gt; &lt;td&gt;2.61&lt;/td&gt; &lt;td&gt;1326&lt;/td&gt; &lt;td&gt;20.77&lt;/td&gt; &lt;td&gt;66.45&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;Ollama&lt;/td&gt; &lt;td&gt;4669&lt;/td&gt; &lt;td&gt;1746.71&lt;/td&gt; &lt;td&gt;2.67&lt;/td&gt; &lt;td&gt;1592&lt;/td&gt; &lt;td&gt;20.47&lt;/td&gt; &lt;td&gt;80.44&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;M3Max&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;4669&lt;/td&gt; &lt;td&gt;154.16&lt;/td&gt; &lt;td&gt;30.29&lt;/td&gt; &lt;td&gt;1593&lt;/td&gt; &lt;td&gt;9.67&lt;/td&gt; &lt;td&gt;194.94&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;M3Max&lt;/td&gt; &lt;td&gt;Ollama&lt;/td&gt; &lt;td&gt;4669&lt;/td&gt; &lt;td&gt;153.03&lt;/td&gt; &lt;td&gt;30.51&lt;/td&gt; &lt;td&gt;1450&lt;/td&gt; &lt;td&gt;9.66&lt;/td&gt; &lt;td&gt;180.55&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;7948&lt;/td&gt; &lt;td&gt;1756.76&lt;/td&gt; &lt;td&gt;4.52&lt;/td&gt; &lt;td&gt;1255&lt;/td&gt; &lt;td&gt;20.29&lt;/td&gt; &lt;td&gt;66.37&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;Ollama&lt;/td&gt; &lt;td&gt;7948&lt;/td&gt; &lt;td&gt;1706.41&lt;/td&gt; &lt;td&gt;4.66&lt;/td&gt; &lt;td&gt;1404&lt;/td&gt; &lt;td&gt;20.10&lt;/td&gt; &lt;td&gt;74.51&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;M3Max&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;7948&lt;/td&gt; &lt;td&gt;140.11&lt;/td&gt; &lt;td&gt;56.73&lt;/td&gt; &lt;td&gt;1748&lt;/td&gt; &lt;td&gt;9.20&lt;/td&gt; &lt;td&gt;246.81&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;M3Max&lt;/td&gt; &lt;td&gt;Ollama&lt;/td&gt; &lt;td&gt;7948&lt;/td&gt; &lt;td&gt;138.99&lt;/td&gt; &lt;td&gt;57.18&lt;/td&gt; &lt;td&gt;1650&lt;/td&gt; &lt;td&gt;9.18&lt;/td&gt; &lt;td&gt;236.90&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;12416&lt;/td&gt; &lt;td&gt;1648.97&lt;/td&gt; &lt;td&gt;7.53&lt;/td&gt; &lt;td&gt;2000&lt;/td&gt; &lt;td&gt;19.59&lt;/td&gt; &lt;td&gt;109.64&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;Ollama&lt;/td&gt; &lt;td&gt;12416&lt;/td&gt; &lt;td&gt;1616.69&lt;/td&gt; &lt;td&gt;7.68&lt;/td&gt; &lt;td&gt;2000&lt;/td&gt; &lt;td&gt;19.30&lt;/td&gt; &lt;td&gt;111.30&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;M3Max&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;12416&lt;/td&gt; &lt;td&gt;127.96&lt;/td&gt; &lt;td&gt;97.03&lt;/td&gt; &lt;td&gt;1395&lt;/td&gt; &lt;td&gt;8.60&lt;/td&gt; &lt;td&gt;259.27&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;M3Max&lt;/td&gt; &lt;td&gt;Ollama&lt;/td&gt; &lt;td&gt;12416&lt;/td&gt; &lt;td&gt;127.08&lt;/td&gt; &lt;td&gt;97.70&lt;/td&gt; &lt;td&gt;1778&lt;/td&gt; &lt;td&gt;8.57&lt;/td&gt; &lt;td&gt;305.14&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;20172&lt;/td&gt; &lt;td&gt;1481.92&lt;/td&gt; &lt;td&gt;13.61&lt;/td&gt; &lt;td&gt;598&lt;/td&gt; &lt;td&gt;18.72&lt;/td&gt; &lt;td&gt;45.55&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;Ollama&lt;/td&gt; &lt;td&gt;20172&lt;/td&gt; &lt;td&gt;1458.86&lt;/td&gt; &lt;td&gt;13.83&lt;/td&gt; &lt;td&gt;1627&lt;/td&gt; &lt;td&gt;18.30&lt;/td&gt; &lt;td&gt;102.72&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;M3Max&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;20172&lt;/td&gt; &lt;td&gt;111.18&lt;/td&gt; &lt;td&gt;181.44&lt;/td&gt; &lt;td&gt;1771&lt;/td&gt; &lt;td&gt;7.58&lt;/td&gt; &lt;td&gt;415.24&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;M3Max&lt;/td&gt; &lt;td&gt;Ollama&lt;/td&gt; &lt;td&gt;20172&lt;/td&gt; &lt;td&gt;111.80&lt;/td&gt; &lt;td&gt;180.43&lt;/td&gt; &lt;td&gt;1372&lt;/td&gt; &lt;td&gt;7.53&lt;/td&gt; &lt;td&gt;362.54&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; &lt;h3&gt;Updates&lt;/h3&gt; &lt;p&gt;People commented below how I'm not using &amp;quot;tensor parallelism&amp;quot; properly with llama.cpp. I specified &lt;code&gt;--n-gpu-layers 65&lt;/code&gt;, and split with &lt;code&gt;--tensor-split 33,32&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;I also tried &lt;code&gt;-sm row --tensor-split 1,1&lt;/code&gt;, but it consistently dramatically decreased prompt processing to around 400tk/s. It also dropped token generation speed as well. The result is below.&lt;/p&gt; &lt;p&gt;Could someone tell me how and what flags do I need to use in order to take advantage of &amp;quot;tensor parallelism&amp;quot; that people are talking about?&lt;/p&gt; &lt;p&gt;&lt;code&gt;./build/bin/llama-server --model ... --ctx-size 22000 --n-gpu-layers 99 --threads 32 --flash-attn --parallel 1 -sm row --tensor-split 1,1&lt;/code&gt;&lt;/p&gt; &lt;table&gt;&lt;thead&gt; &lt;tr&gt; &lt;th&gt;Machine&lt;/th&gt; &lt;th&gt;Engine&lt;/th&gt; &lt;th&gt;Prompt Tokens&lt;/th&gt; &lt;th&gt;PP/s&lt;/th&gt; &lt;th&gt;TTFT&lt;/th&gt; &lt;th&gt;Generated Tokens&lt;/th&gt; &lt;th&gt;TG/s&lt;/th&gt; &lt;th&gt;Duration&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt;&lt;tbody&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;264&lt;/td&gt; &lt;td&gt;381.86&lt;/td&gt; &lt;td&gt;0.69&lt;/td&gt; &lt;td&gt;1040&lt;/td&gt; &lt;td&gt;19.57&lt;/td&gt; &lt;td&gt;53.84&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;450&lt;/td&gt; &lt;td&gt;410.24&lt;/td&gt; &lt;td&gt;1.10&lt;/td&gt; &lt;td&gt;1409&lt;/td&gt; &lt;td&gt;19.57&lt;/td&gt; &lt;td&gt;73.10&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;723&lt;/td&gt; &lt;td&gt;440.61&lt;/td&gt; &lt;td&gt;1.64&lt;/td&gt; &lt;td&gt;1266&lt;/td&gt; &lt;td&gt;19.54&lt;/td&gt; &lt;td&gt;66.43&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;1219&lt;/td&gt; &lt;td&gt;446.84&lt;/td&gt; &lt;td&gt;2.73&lt;/td&gt; &lt;td&gt;1692&lt;/td&gt; &lt;td&gt;19.37&lt;/td&gt; &lt;td&gt;90.09&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;1858&lt;/td&gt; &lt;td&gt;445.79&lt;/td&gt; &lt;td&gt;4.17&lt;/td&gt; &lt;td&gt;1525&lt;/td&gt; &lt;td&gt;19.30&lt;/td&gt; &lt;td&gt;83.19&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;2979&lt;/td&gt; &lt;td&gt;437.87&lt;/td&gt; &lt;td&gt;6.80&lt;/td&gt; &lt;td&gt;1840&lt;/td&gt; &lt;td&gt;19.17&lt;/td&gt; &lt;td&gt;102.78&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;4669&lt;/td&gt; &lt;td&gt;433.98&lt;/td&gt; &lt;td&gt;10.76&lt;/td&gt; &lt;td&gt;1555&lt;/td&gt; &lt;td&gt;18.84&lt;/td&gt; &lt;td&gt;93.30&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;7948&lt;/td&gt; &lt;td&gt;416.62&lt;/td&gt; &lt;td&gt;19.08&lt;/td&gt; &lt;td&gt;2000&lt;/td&gt; &lt;td&gt;18.48&lt;/td&gt; &lt;td&gt;127.32&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;12416&lt;/td&gt; &lt;td&gt;429.59&lt;/td&gt; &lt;td&gt;28.90&lt;/td&gt; &lt;td&gt;2000&lt;/td&gt; &lt;td&gt;17.84&lt;/td&gt; &lt;td&gt;141.01&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;LCPP&lt;/td&gt; &lt;td&gt;20172&lt;/td&gt; &lt;td&gt;402.50&lt;/td&gt; &lt;td&gt;50.12&lt;/td&gt; &lt;td&gt;2000&lt;/td&gt; &lt;td&gt;17.10&lt;/td&gt; &lt;td&gt;167.09&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; &lt;p&gt;Here's same test with SGLang with prompt caching disabled.&lt;/p&gt; &lt;p&gt;`python -m sglang.launch_server --model-path Qwen/Qwen3-32B-FP8 --context-length 22000 --tp-size 2 --disable-chunked-prefix-cache --disable-radix-cache&lt;/p&gt; &lt;table&gt;&lt;thead&gt; &lt;tr&gt; &lt;th&gt;Machine&lt;/th&gt; &lt;th&gt;Engine&lt;/th&gt; &lt;th&gt;Prompt Tokens&lt;/th&gt; &lt;th&gt;PP/s&lt;/th&gt; &lt;th&gt;TTFT&lt;/th&gt; &lt;th&gt;Generated Tokens&lt;/th&gt; &lt;th&gt;TG/s&lt;/th&gt; &lt;th&gt;Duration&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt;&lt;tbody&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;SGLang&lt;/td&gt; &lt;td&gt;264&lt;/td&gt; &lt;td&gt;843.54&lt;/td&gt; &lt;td&gt;0.31&lt;/td&gt; &lt;td&gt;777&lt;/td&gt; &lt;td&gt;35.03&lt;/td&gt; &lt;td&gt;22.49&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;SGLang&lt;/td&gt; &lt;td&gt;450&lt;/td&gt; &lt;td&gt;852.32&lt;/td&gt; &lt;td&gt;0.53&lt;/td&gt; &lt;td&gt;1445&lt;/td&gt; &lt;td&gt;34.86&lt;/td&gt; &lt;td&gt;41.98&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;SGLang&lt;/td&gt; &lt;td&gt;723&lt;/td&gt; &lt;td&gt;903.44&lt;/td&gt; &lt;td&gt;0.80&lt;/td&gt; &lt;td&gt;1250&lt;/td&gt; &lt;td&gt;34.79&lt;/td&gt; &lt;td&gt;36.73&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;SGLang&lt;/td&gt; &lt;td&gt;1219&lt;/td&gt; &lt;td&gt;943.47&lt;/td&gt; &lt;td&gt;1.29&lt;/td&gt; &lt;td&gt;1809&lt;/td&gt; &lt;td&gt;34.66&lt;/td&gt; &lt;td&gt;53.48&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;SGLang&lt;/td&gt; &lt;td&gt;1858&lt;/td&gt; &lt;td&gt;948.24&lt;/td&gt; &lt;td&gt;1.96&lt;/td&gt; &lt;td&gt;1640&lt;/td&gt; &lt;td&gt;34.54&lt;/td&gt; &lt;td&gt;49.44&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;SGLang&lt;/td&gt; &lt;td&gt;2979&lt;/td&gt; &lt;td&gt;957.28&lt;/td&gt; &lt;td&gt;3.11&lt;/td&gt; &lt;td&gt;1898&lt;/td&gt; &lt;td&gt;34.23&lt;/td&gt; &lt;td&gt;58.56&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;SGLang&lt;/td&gt; &lt;td&gt;4669&lt;/td&gt; &lt;td&gt;956.29&lt;/td&gt; &lt;td&gt;4.88&lt;/td&gt; &lt;td&gt;1692&lt;/td&gt; &lt;td&gt;33.89&lt;/td&gt; &lt;td&gt;54.81&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;SGLang&lt;/td&gt; &lt;td&gt;7948&lt;/td&gt; &lt;td&gt;932.63&lt;/td&gt; &lt;td&gt;8.52&lt;/td&gt; &lt;td&gt;2000&lt;/td&gt; &lt;td&gt;33.34&lt;/td&gt; &lt;td&gt;68.50&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;SGLang&lt;/td&gt; &lt;td&gt;12416&lt;/td&gt; &lt;td&gt;907.01&lt;/td&gt; &lt;td&gt;13.69&lt;/td&gt; &lt;td&gt;1967&lt;/td&gt; &lt;td&gt;32.60&lt;/td&gt; &lt;td&gt;74.03&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RTX3090&lt;/td&gt; &lt;td&gt;SGLang&lt;/td&gt; &lt;td&gt;20172&lt;/td&gt; &lt;td&gt;857.66&lt;/td&gt; &lt;td&gt;23.52&lt;/td&gt; &lt;td&gt;1786&lt;/td&gt; &lt;td&gt;31.51&lt;/td&gt; &lt;td&gt;80.20&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/chibop1"&gt; /u/chibop1 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kk0ghi/speed_comparison_with_qwen332bq8_0_ollama/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kk0ghi/speed_comparison_with_qwen332bq8_0_ollama/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kk0ghi/speed_comparison_with_qwen332bq8_0_ollama/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-11T12:59:11+00:00</published>
  </entry>
  <entry>
    <id>t3_1kju0ty</id>
    <title>Why new models feel dumber?</title>
    <updated>2025-05-11T05:57:09+00:00</updated>
    <author>
      <name>/u/SrData</name>
      <uri>https://old.reddit.com/user/SrData</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Is it just me, or do the new models feel… dumber?&lt;/p&gt; &lt;p&gt;I’ve been testing Qwen 3 across different sizes, expecting a leap forward. Instead, I keep circling back to Qwen 2.5. It just feels sharper, more coherent, less… bloated. Same story with Llama. I’ve had long, surprisingly good conversations with 3.1. But 3.3? Or Llama 4? It’s like the lights are on but no one’s home.&lt;/p&gt; &lt;p&gt;Some flaws I have found: They lose thread persistence. They forget earlier parts of the convo. They repeat themselves more. Worse, they feel like they’re trying to sound smarter instead of being coherent.&lt;/p&gt; &lt;p&gt;So I’m curious: Are you seeing this too? Which models are you sticking with, despite the version bump? Any new ones that have genuinely impressed you, especially in longer sessions?&lt;/p&gt; &lt;p&gt;Because right now, it feels like we’re in this strange loop of releasing “smarter” models that somehow forget how to talk. And I’d love to know I’m not the only one noticing.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/SrData"&gt; /u/SrData &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kju0ty/why_new_models_feel_dumber/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kju0ty/why_new_models_feel_dumber/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kju0ty/why_new_models_feel_dumber/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-11T05:57:09+00:00</published>
  </entry>
  <entry>
    <id>t3_1kju1y1</id>
    <title>Unsloth's Qwen3 GGUFs are updated with a new improved calibration dataset</title>
    <updated>2025-05-11T05:59:20+00:00</updated>
    <author>
      <name>/u/AaronFeng47</name>
      <uri>https://old.reddit.com/user/AaronFeng47</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kju1y1/unsloths_qwen3_ggufs_are_updated_with_a_new/"&gt; &lt;img alt="Unsloth's Qwen3 GGUFs are updated with a new improved calibration dataset" src="https://external-preview.redd.it/8ePyWxYJavtNkgThp-DI68bW9d5fj-oFIybzu4pnoUM.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=a7b2715032a28656454c9bee39e79aafee721d37" title="Unsloth's Qwen3 GGUFs are updated with a new improved calibration dataset" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;&lt;a href="https://huggingface.co/unsloth/Qwen3-30B-A3B-128K-GGUF/discussions/3#681edd400153e42b1c7168e9"&gt;https://huggingface.co/unsloth/Qwen3-30B-A3B-128K-GGUF/discussions/3#681edd400153e42b1c7168e9&lt;/a&gt;&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;We've uploaded them all now&lt;/p&gt; &lt;p&gt;Also with a new improved calibration dataset :)&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/51rr8j7qd30f1.png?width=362&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=7e0b8891020518424f286d35814501b87cbd9cc0"&gt;https://preview.redd.it/51rr8j7qd30f1.png?width=362&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=7e0b8891020518424f286d35814501b87cbd9cc0&lt;/a&gt;&lt;/p&gt; &lt;p&gt;They updated All Qwen3 ggufs&lt;/p&gt; &lt;p&gt;Plus more gguf variants for Qwen3-30B-A3B&lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/ckx6zfn0e30f1.png?width=397&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=3dde922fd59d02d5223680a6d584758387bdc476"&gt;https://preview.redd.it/ckx6zfn0e30f1.png?width=397&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=3dde922fd59d02d5223680a6d584758387bdc476&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://huggingface.co/models?sort=modified&amp;amp;search=unsloth+qwen3+gguf"&gt;https://huggingface.co/models?sort=modified&amp;amp;search=unsloth+qwen3+gguf&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/AaronFeng47"&gt; /u/AaronFeng47 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kju1y1/unsloths_qwen3_ggufs_are_updated_with_a_new/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kju1y1/unsloths_qwen3_ggufs_are_updated_with_a_new/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kju1y1/unsloths_qwen3_ggufs_are_updated_with_a_new/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-11T05:59:20+00:00</published>
  </entry>
  <entry>
    <id>t3_1kk6pjp</id>
    <title>Bielik v3 family of SOTA Polish open SLMs has been released</title>
    <updated>2025-05-11T17:43:41+00:00</updated>
    <author>
      <name>/u/niutech</name>
      <uri>https://old.reddit.com/user/niutech</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kk6pjp/bielik_v3_family_of_sota_polish_open_slms_has/"&gt; &lt;img alt="Bielik v3 family of SOTA Polish open SLMs has been released" src="https://external-preview.redd.it/tEBlMyeFm6RtilVklQB-UJC_6CHQzvAf1MLIxBngxSA.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=a27f61c9021f49e3a3ad4ca6a38d379c8fbd2cad" title="Bielik v3 family of SOTA Polish open SLMs has been released" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/niutech"&gt; /u/niutech &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://huggingface.co/collections/speakleash/bielik-v3-family-681a47f877f72cae528bdab1"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kk6pjp/bielik_v3_family_of_sota_polish_open_slms_has/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kk6pjp/bielik_v3_family_of_sota_polish_open_slms_has/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-11T17:43:41+00:00</published>
  </entry>
  <entry>
    <id>t3_1kk7oo8</id>
    <title>More fun with Qwen 3 8b! This time it created 2 Starfields and a playable Xylophone for me! Not at all bad for a model that can fit in an 8-12GB GPU!</title>
    <updated>2025-05-11T18:25:44+00:00</updated>
    <author>
      <name>/u/c64z86</name>
      <uri>https://old.reddit.com/user/c64z86</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kk7oo8/more_fun_with_qwen_3_8b_this_time_it_created_2/"&gt; &lt;img alt="More fun with Qwen 3 8b! This time it created 2 Starfields and a playable Xylophone for me! Not at all bad for a model that can fit in an 8-12GB GPU!" src="https://external-preview.redd.it/iIvsvRqpQ2fJ2gASUwDJdJzk7Y-NRsJGfolwfmr4gyo.jpeg?width=320&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=d1e591211e94beaef8ea3976b3e70b2a58ac718e" title="More fun with Qwen 3 8b! This time it created 2 Starfields and a playable Xylophone for me! Not at all bad for a model that can fit in an 8-12GB GPU!" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/c64z86"&gt; /u/c64z86 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://youtu.be/fvsJezacCW4"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kk7oo8/more_fun_with_qwen_3_8b_this_time_it_created_2/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kk7oo8/more_fun_with_qwen_3_8b_this_time_it_created_2/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-11T18:25:44+00:00</published>
  </entry>
  <entry>
    <id>t3_1kk66rj</id>
    <title>Jamba mini 1.6 actually outperformed GPT-40 for our RAG support bot</title>
    <updated>2025-05-11T17:21:08+00:00</updated>
    <author>
      <name>/u/NullPointerJack</name>
      <uri>https://old.reddit.com/user/NullPointerJack</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;These results surprised me. We were testing a few models for a support use case (chat summarization + QA over internal docs) and figured GPT-4o would easily win, but Jamba mini 1.6 (open weights) actually gave us more accurate grounded answers and ran much faster.&lt;/p&gt; &lt;p&gt;Some of the main takeaways -&lt;/p&gt; &lt;ul&gt; &lt;li&gt;It beat Jamba 1.5 by a decent margin. About 21% more of our QA outputs were grounded correctly and it was basically tied with GPT-4o in how well it grounded information from our RAG setup&lt;/li&gt; &lt;li&gt;Much faster latency. We're running it quantized with vLLM in our own VPC and it was like 2x faster than GPT-4o for token generation.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;We havent tested math/coding or multilingual yet, just text-heavy internal documents and customer chat logs.&lt;/p&gt; &lt;p&gt;GPT-4o is definitely better for ambiguous questions and slightly more natural in how it phrases answers. But for our exact use case, Jamba Mini handled it better and cheaper.&lt;/p&gt; &lt;p&gt;Is anyone else here running Jamba locally or on-premises?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/NullPointerJack"&gt; /u/NullPointerJack &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kk66rj/jamba_mini_16_actually_outperformed_gpt40_for_our/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kk66rj/jamba_mini_16_actually_outperformed_gpt40_for_our/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kk66rj/jamba_mini_16_actually_outperformed_gpt40_for_our/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-11T17:21:08+00:00</published>
  </entry>
  <entry>
    <id>t3_1kk7dwb</id>
    <title>New Project: Llama ParamPal - A LLM (Sampling) Parameter Repository</title>
    <updated>2025-05-11T18:12:30+00:00</updated>
    <author>
      <name>/u/StrikeOner</name>
      <uri>https://old.reddit.com/user/StrikeOner</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hey everyone&lt;/p&gt; &lt;p&gt;After spending way too much time researching the correct sampling parameters to get local LLMs running with the optimal sampling parameters with llama.cpp, I tought that it might be smarter to built something that might save me and you the headache in the future:&lt;/p&gt; &lt;p&gt;🔧 &lt;a href="https://github.com/kseyhan/llama-param-pal"&gt;Llama ParamPal &lt;/a&gt;— a repository to serve as a database with the recommended sampling parameters for running local LLMs using &lt;a href="https://github.com/ggml-org/llama.cpp"&gt;llama.cpp.&lt;/a&gt; &lt;/p&gt; &lt;p&gt;&lt;strong&gt;✅ Why This Exists&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Getting a new model running usually involves:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Digging through a lot of scattered docs to be lucky to find the recommended sampling parameters for this model i just downloaded documented somewhere which in some cases like QwQ for example can be as crazy as changing the order of samplers:&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&amp;#8203;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;--samplers &amp;quot;top_k;top_p;min_p;temperature;dry;typ_p;xtc&amp;quot; &lt;/code&gt;&lt;/pre&gt; &lt;ul&gt; &lt;li&gt; Trial and error (and more error...)&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Llama ParamPal aims to fix that by:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Collecting sampling parameters and their successive documentations.&lt;br /&gt;&lt;/li&gt; &lt;li&gt;Offering a searchable frontend: &lt;a href="https://llama-parampal.codecut.de"&gt;https://llama-parampal.codecut.de&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;📦 What’s Inside?&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/kseyhan/llama-param-pal/refs/heads/main/models.json"&gt;models.json&lt;/a&gt; — the core file where all recommended configs live &lt;/li&gt; &lt;li&gt;&lt;a href="https://llama-parampal.codecut.de"&gt;Simple web UI&lt;/a&gt; to browse/search the parameter sets ( thats currently under development and will be made available to be hosted localy in near future)&lt;br /&gt;&lt;/li&gt; &lt;li&gt;Validation scripts to keep everything clean and structured&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;✍️ Help me, you and your llama fellows and constribute!&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The database constists of a whooping 4 entries at the moment, i'll try to add some models here and there but better would be if some of you guys would constribute and help to grow this database.&lt;/li&gt; &lt;li&gt;Add your favorite model with the sampling parameters + source of the documenation as a new profile into the models.json, validate the JSON, and open a PR. That’s it!&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Instructions here 👉 &lt;a href="https://github.com/kseyhan/llama-param-pal"&gt;GitHub repo&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Would love feedback, contributions, or just a sanity check! Your knowledge can help others in the community.&lt;/p&gt; &lt;p&gt;Let me know what you think 🫡&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/StrikeOner"&gt; /u/StrikeOner &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kk7dwb/new_project_llama_parampal_a_llm_sampling/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kk7dwb/new_project_llama_parampal_a_llm_sampling/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kk7dwb/new_project_llama_parampal_a_llm_sampling/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-11T18:12:30+00:00</published>
  </entry>
  <entry>
    <id>t3_1kjvb8i</id>
    <title>I Built a Tool That Tells Me If a Side Project Will Ruin My Weekend</title>
    <updated>2025-05-11T07:24:15+00:00</updated>
    <author>
      <name>/u/IntelligentHope9866</name>
      <uri>https://old.reddit.com/user/IntelligentHope9866</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I used to lie to myself every weekend:&lt;br /&gt; “I’ll build this in an hour.”&lt;/p&gt; &lt;p&gt;Spoiler: I never did.&lt;/p&gt; &lt;p&gt;So I built a tool that tracks how long my features actually take — and uses a local LLM to estimate future ones.&lt;/p&gt; &lt;p&gt;It logs my coding sessions, summarizes them, and tells me:&lt;br /&gt; &amp;quot;Yeah, this’ll eat your whole weekend. Don’t even start.&amp;quot;&lt;/p&gt; &lt;p&gt;It lives in my terminal and keeps me honest.&lt;/p&gt; &lt;p&gt;Full writeup + code: &lt;a href="https://www.rafaelviana.io/posts/code-chrono"&gt;https://www.rafaelviana.io/posts/code-chrono&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/IntelligentHope9866"&gt; /u/IntelligentHope9866 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kjvb8i/i_built_a_tool_that_tells_me_if_a_side_project/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kjvb8i/i_built_a_tool_that_tells_me_if_a_side_project/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kjvb8i/i_built_a_tool_that_tells_me_if_a_side_project/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-11T07:24:15+00:00</published>
  </entry>
  <entry>
    <id>t3_1kkea2w</id>
    <title>LPT: Got an old low VRAM GPU you're not using? Use it to increase your VRAM pool.</title>
    <updated>2025-05-11T23:23:26+00:00</updated>
    <author>
      <name>/u/pneuny</name>
      <uri>https://old.reddit.com/user/pneuny</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I recently got an RTX 5060 Ti 16GB, but 16GB is still not enough to fit something like Qwen 3 30b-a3b. That's where the old GTX 1060 I got in return for handing down a 3060 Ti comes in handy. In LMStudio, using the Vulkan backend, with full GPU offloading to both the RTX and GTX cards, I managed to get 43 t/s, which is way better than the ~13 t/s with partial CPU offloading when using CUDA 12.&lt;/p&gt; &lt;p&gt;So yeah, if you have a 16GB card, break out that old card and add it to your system if your motherboard has the PCIE slot to spare.&lt;/p&gt; &lt;p&gt;PS: This also gives you 32 bit physx support on your RTX 50 series if the old card is Nvidia.&lt;/p&gt; &lt;p&gt;TL;DR: RTX 5060 Ti 16GB + GTX 1060 6GB = 43t/s on Qwen3 30b-a3b&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/pneuny"&gt; /u/pneuny &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kkea2w/lpt_got_an_old_low_vram_gpu_youre_not_using_use/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kkea2w/lpt_got_an_old_low_vram_gpu_youre_not_using_use/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kkea2w/lpt_got_an_old_low_vram_gpu_youre_not_using_use/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-11T23:23:26+00:00</published>
  </entry>
  <entry>
    <id>t3_1kkbhxr</id>
    <title>Wow! DeerFlow is OSS now: LLM + Langchain + tools (web search, crawler, code exec)</title>
    <updated>2025-05-11T21:11:32+00:00</updated>
    <author>
      <name>/u/behradkhodayar</name>
      <uri>https://old.reddit.com/user/behradkhodayar</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Bytedance (the company behind TikTok), opensourced DeerFlow (&lt;strong&gt;D&lt;/strong&gt;eep &lt;strong&gt;E&lt;/strong&gt;xploration and &lt;strong&gt;E&lt;/strong&gt;fficient &lt;strong&gt;R&lt;/strong&gt;esearch &lt;strong&gt;Flow&lt;/strong&gt;), such a great give-back.&lt;/p&gt; &lt;p&gt;&lt;a href="https://github.com/bytedance/deer-flow"&gt;https://github.com/bytedance/deer-flow&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/behradkhodayar"&gt; /u/behradkhodayar &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kkbhxr/wow_deerflow_is_oss_now_llm_langchain_tools_web/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kkbhxr/wow_deerflow_is_oss_now_llm_langchain_tools_web/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kkbhxr/wow_deerflow_is_oss_now_llm_langchain_tools_web/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-11T21:11:32+00:00</published>
  </entry>
  <entry>
    <id>t3_1kk97m7</id>
    <title>We made an open source agent builder and framework designed to work with local llms!</title>
    <updated>2025-05-11T19:31:37+00:00</updated>
    <author>
      <name>/u/United-Rush4073</name>
      <uri>https://old.reddit.com/user/United-Rush4073</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kk97m7/we_made_an_open_source_agent_builder_and/"&gt; &lt;img alt="We made an open source agent builder and framework designed to work with local llms!" src="https://preview.redd.it/ha9ptoygf70f1.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=89d2d79a3d2e7586b294f58dfb84c68117b05a1a" title="We made an open source agent builder and framework designed to work with local llms!" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/United-Rush4073"&gt; /u/United-Rush4073 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://i.redd.it/ha9ptoygf70f1.png"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1kk97m7/we_made_an_open_source_agent_builder_and/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1kk97m7/we_made_an_open_source_agent_builder_and/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-05-11T19:31:37+00:00</published>
  </entry>
</feed>
