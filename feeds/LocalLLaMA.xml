<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>/r/LocalLLaMA/.rss</id>
  <title>LocalLlama</title>
  <updated>2025-06-02T22:37:33+00:00</updated>
  <link href="https://old.reddit.com/r/LocalLLaMA/" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <icon>https://www.redditstatic.com/icon.png/</icon>
  <subtitle>Subreddit to discuss Llama, the large language model created by Meta AI.</subtitle>
  <entry>
    <id>t3_1l0zsv7</id>
    <title>25L Portable NV-linked Dual 3090 LLM Rig</title>
    <updated>2025-06-01T21:01:58+00:00</updated>
    <author>
      <name>/u/Special-Wolverine</name>
      <uri>https://old.reddit.com/user/Special-Wolverine</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l0zsv7/25l_portable_nvlinked_dual_3090_llm_rig/"&gt; &lt;img alt="25L Portable NV-linked Dual 3090 LLM Rig" src="https://b.thumbs.redditmedia.com/SCLEVQyCptjUTsrbRVb6jCIJUk1CuEOO-Ud355bse9Q.jpg" title="25L Portable NV-linked Dual 3090 LLM Rig" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Main point of portability is because The workplace of the coworker I built this for is truly offline, with no potential for LAN or wifi, so to download new models and update the system periodically I need to go pick it up from him and take it home. &lt;/p&gt; &lt;p&gt;WARNING - these components don't fit if you try to copy this build. The bottom GPU is resting on the Arctic p12 slim fans at the bottom of the case and pushing up on the GPU. Also the top arctic p14 Max fans don't have mounting points for half of their screw holes, and are in place by being very tightly wedged against the motherboard, case, and PSU. Also, there 's probably way too much pressure on the pcie cables coming off the gpus when you close the glass. Also I had to daisy chain the PCIE cables because the Corsair RM 1200e only has four available on the PSU side and these particular EVGA 3090s require 3x 8pin power. Allegedly it just enforces a hardware power limit to 300 w but you should make it a little bit more safe by also enforcing the 300W power limit in Nvidia -SMI To make sure that the cards don't try to pull 450W through 300W pipes. Could have fit a bigger PSU, but then I wouldn't get that front fan which is probably crucial.&lt;/p&gt; &lt;p&gt;All that being said, with a 300w power limit applied to both gpus in a silent fan profile, this rig has surprisingly good temperatures and noise levels considering how compact it is. &lt;/p&gt; &lt;p&gt;During Cinebench 24 with both gpus being 100% utilized, the CPU runs at 63 C and both gpus at 67 Celsius somehow with almost zero gap between them and the glass closed. All the while running at about 37 to 40 decibels from 1 meter away. &lt;/p&gt; &lt;p&gt;Prompt processing and inference - the gpus run at about 63 C, CPU at 55 C, and decibels at 34. &lt;/p&gt; &lt;p&gt;Again, I don't understand why the temperatures for both are almost the same, when logically the top GPU should be much hotter. The only gap between the two gpus is the size of one of those little silicone rubber DisplayPort caps wedged into the end, right between where the pcie power cables connect to force the GPUs apart a little.&lt;/p&gt; &lt;p&gt;Everything but the case, CPU cooler, and PSU was bought used on Facebook Marketplace&lt;/p&gt; &lt;p&gt;&lt;a href="https://pcpartpicker.com/list/nQXzgn"&gt;PCPartPicker Part List&lt;/a&gt;&lt;/p&gt; &lt;table&gt;&lt;thead&gt; &lt;tr&gt; &lt;th align="left"&gt;Type&lt;/th&gt; &lt;th align="left"&gt;Item&lt;/th&gt; &lt;th align="left"&gt;Price&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt;&lt;tbody&gt; &lt;tr&gt; &lt;td align="left"&gt;&lt;strong&gt;CPU&lt;/strong&gt;&lt;/td&gt; &lt;td align="left"&gt;&lt;a href="https://pcpartpicker.com/product/qtvqqs/amd-ryzen-7-5800x-38-ghz-8-core-processor-100-100000063wof"&gt;AMD Ryzen 7 5800X 3.8 GHz 8-Core Processor&lt;/a&gt;&lt;/td&gt; &lt;td align="left"&gt;$160.54 @ Amazon&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="left"&gt;&lt;strong&gt;CPU Cooler&lt;/strong&gt;&lt;/td&gt; &lt;td align="left"&gt;&lt;a href="https://pcpartpicker.com/product/HbDQzy/id-cooling-frozn-a720-black-986-cfm-cpu-cooler-frozn-a720-black"&gt;ID-COOLING FROZN A720 BLACK 98.6 CFM CPU Cooler&lt;/a&gt;&lt;/td&gt; &lt;td align="left"&gt;$69.98 @ Amazon&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="left"&gt;&lt;strong&gt;Motherboard&lt;/strong&gt;&lt;/td&gt; &lt;td align="left"&gt;&lt;a href="https://pcpartpicker.com/product/CLkgXL/asus-rog-strix-x570-e-gaming-atx-am4-motherboard-rog-strix-x570-e-gaming"&gt;Asus ROG Strix X570-E Gaming ATX AM4 Motherboard&lt;/a&gt;&lt;/td&gt; &lt;td align="left"&gt;$559.00 @ Amazon&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="left"&gt;&lt;strong&gt;Memory&lt;/strong&gt;&lt;/td&gt; &lt;td align="left"&gt;&lt;a href="https://pcpartpicker.com/product/6rrcCJ/corsair-memory-cmk32gx4m2b3200c16"&gt;Corsair Vengeance LPX 32 GB (2 x 16 GB) DDR4-3200 CL16 Memory&lt;/a&gt;&lt;/td&gt; &lt;td align="left"&gt;$81.96 @ Amazon&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="left"&gt;&lt;strong&gt;Storage&lt;/strong&gt;&lt;/td&gt; &lt;td align="left"&gt;&lt;a href="https://pcpartpicker.com/product/DDWBD3/samsung-980-pro-1-tb-m2-2280-nvme-solid-state-drive-mz-v8p1t0bam"&gt;Samsung 980 Pro 1 TB M.2-2280 PCIe 4.0 X4 NVME Solid State Drive&lt;/a&gt;&lt;/td&gt; &lt;td align="left"&gt;$149.99 @ Amazon&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="left"&gt;&lt;strong&gt;Video Card&lt;/strong&gt;&lt;/td&gt; &lt;td align="left"&gt;&lt;a href="https://pcpartpicker.com/product/PG848d/evga-geforce-rtx-3090-24-gb-ftw3-ultra-gaming-video-card-24g-p5-3987-kr"&gt;EVGA FTW3 ULTRA GAMING GeForce RTX 3090 24 GB Video Card&lt;/a&gt;&lt;/td&gt; &lt;td align="left"&gt;$750.00&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="left"&gt;&lt;strong&gt;Video Card&lt;/strong&gt;&lt;/td&gt; &lt;td align="left"&gt;&lt;a href="https://pcpartpicker.com/product/PG848d/evga-geforce-rtx-3090-24-gb-ftw3-ultra-gaming-video-card-24g-p5-3987-kr"&gt;EVGA FTW3 ULTRA GAMING GeForce RTX 3090 24 GB Video Card&lt;/a&gt;&lt;/td&gt; &lt;td align="left"&gt;$750.00&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="left"&gt;&lt;strong&gt;Custom&lt;/strong&gt;&lt;/td&gt; &lt;td align="left"&gt;NVlink SLI bridge&lt;/td&gt; &lt;td align="left"&gt;$90.00&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="left"&gt;&lt;strong&gt;Custom&lt;/strong&gt;&lt;/td&gt; &lt;td align="left"&gt;Mechanic Master c34plus&lt;/td&gt; &lt;td align="left"&gt;$200.00&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="left"&gt;&lt;strong&gt;Custom&lt;/strong&gt;&lt;/td&gt; &lt;td align="left"&gt;Corsair RM1200e&lt;/td&gt; &lt;td align="left"&gt;$210.00&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="left"&gt;&lt;strong&gt;Custom&lt;/strong&gt;&lt;/td&gt; &lt;td align="left"&gt;2x Arctic p14 max, 3x p12, 3x p12 slim&lt;/td&gt; &lt;td align="left"&gt;$60.00&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="left"&gt;&lt;/td&gt; &lt;td align="left"&gt;&lt;em&gt;Prices include shipping, taxes, rebates, and discounts&lt;/em&gt;&lt;/td&gt; &lt;td align="left"&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="left"&gt;&lt;/td&gt; &lt;td align="left"&gt;&lt;strong&gt;Total&lt;/strong&gt;&lt;/td&gt; &lt;td align="left"&gt;&lt;strong&gt;$3081.47&lt;/strong&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="left"&gt;&lt;/td&gt; &lt;td align="left"&gt;Generated by &lt;a href="https://pcpartpicker.com"&gt;PCPartPicker&lt;/a&gt; 2025-06-01 16:48 EDT-0400&lt;/td&gt; &lt;td align="left"&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Special-Wolverine"&gt; /u/Special-Wolverine &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/gallery/1l0zsv7"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l0zsv7/25l_portable_nvlinked_dual_3090_llm_rig/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1l0zsv7/25l_portable_nvlinked_dual_3090_llm_rig/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-01T21:01:58+00:00</published>
  </entry>
  <entry>
    <id>t3_1l1pueu</id>
    <title>What to do with GPUs? [Seeking ideas]</title>
    <updated>2025-06-02T18:36:02+00:00</updated>
    <author>
      <name>/u/Ok-Regular-1142</name>
      <uri>https://old.reddit.com/user/Ok-Regular-1142</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hi there, I have a sizeable amount of GPU reserved instances in Azure and GCP for next few months. I am looking for some fun project to work on. Looking for ideas about what to build/fine-tune a model.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Ok-Regular-1142"&gt; /u/Ok-Regular-1142 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l1pueu/what_to_do_with_gpus_seeking_ideas/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l1pueu/what_to_do_with_gpus_seeking_ideas/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1l1pueu/what_to_do_with_gpus_seeking_ideas/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-02T18:36:02+00:00</published>
  </entry>
  <entry>
    <id>t3_1l1ob6a</id>
    <title>Mistral-Small 3.1 is {good|bad} at OCR when using {ollama|llama.cpp}</title>
    <updated>2025-06-02T17:37:57+00:00</updated>
    <author>
      <name>/u/exacly</name>
      <uri>https://old.reddit.com/user/exacly</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I’ve tried everything I can think of, and I’m losing my mind. Does anyone have any suggestions?&lt;/p&gt; &lt;p&gt; I’ve been trying out 24-28B local vision models for some slightly specialized OCR (nothing too fancy, it’s still words printed on a page), first using Ollama for inference. The results for Mistral Small 3.1 were fantastic, with character error rates in the 5-10% range, low enough that it could be useful in my professional field today – except inference with Ollama is very, very slow on my RTX 3060 with just 12 GB of VRAM (around 3.5 tok/sec), of course. The average character error rate was 9% on my 11 test cases, which intentionally included some difficult images to work with. Qwen 2.5VL:32b was a step behind (averaging 12%), while Gemma3:27b was noticeably worse (19%).&lt;/p&gt; &lt;p&gt;But wait! Llama.cpp handles offloading model layers to my GPU better, and inference is much faster – except now the character error rates are all different. Gemma3:27b comes in at 14%, and even Pixtral:12b is nearly as accurate. But Mistral Small 3.1 is consistently bad, at 20% or worse, not good enough to be useful.&lt;/p&gt; &lt;p&gt;I’m running all these tests using Q_4_M quants of Mistral Small 3.1 from Ollama (one monolithic file) and the Unsloth, Bartowski, and MRadermacher quants (which use a separate mmproj file) in Llama.cpp. I’ve also tried a Q_6 quant, higher precision levels for the mmproj files, enabling or disabling KV cache and flash attention and mmproj offloading. I’ve tried using all the Ollama default settings in Llama.cpp. Nothing seems to make a difference – for my use case, Mistral Small 3.1 is consistently bad under llama.cpp, and consistently good to excellent (but extremely slow) under Ollama. Is it normal for the inference platform and/or quant provider to make such a big difference in accuracy?&lt;/p&gt; &lt;p&gt;Is there anything else I can try in Llama.cpp to get Ollama-like accuracy? I tried to find other inference engines that would work in Windows, but everything else is either running Ollama/Llama.cpp under the hood, or it doesn’t offer vision support. My attempts to use GGUF quants in vllm under WSL were unsuccessful.&lt;/p&gt; &lt;p&gt;If I could get Ollama accuracy and Llama.cpp inference speed, I could move forward with a big research project in my non-technical field. Any suggestions beyond saving up for another GPU?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/exacly"&gt; /u/exacly &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l1ob6a/mistralsmall_31_is_goodbad_at_ocr_when_using/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l1ob6a/mistralsmall_31_is_goodbad_at_ocr_when_using/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1l1ob6a/mistralsmall_31_is_goodbad_at_ocr_when_using/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-02T17:37:57+00:00</published>
  </entry>
  <entry>
    <id>t3_1l1mliw</id>
    <title>Has anyone had success implementing a local FIM model?</title>
    <updated>2025-06-02T16:31:49+00:00</updated>
    <author>
      <name>/u/m_abdelfattah</name>
      <uri>https://old.reddit.com/user/m_abdelfattah</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I've noticed that the auto-completion features in my current IDE can be sluggish. As I rely heavily on auto-completion during coding, I strongly prefer accurate autocomplete suggestions like those offered by &amp;quot;Cursor&amp;quot; over automated code generation(Chat/Agent tabs). Therefore, I'm seeking a local alternative that incorporates an intelligent agent capable of analyzing my entire codebase. Is this request overly ambitious 🙈?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/m_abdelfattah"&gt; /u/m_abdelfattah &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l1mliw/has_anyone_had_success_implementing_a_local_fim/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l1mliw/has_anyone_had_success_implementing_a_local_fim/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1l1mliw/has_anyone_had_success_implementing_a_local_fim/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-02T16:31:49+00:00</published>
  </entry>
  <entry>
    <id>t3_1l1r366</id>
    <title>671B IQ1_S vs 70B Q8_0</title>
    <updated>2025-06-02T19:23:37+00:00</updated>
    <author>
      <name>/u/nagareteku</name>
      <uri>https://old.reddit.com/user/nagareteku</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;In an optimal world, there should be no shortage of memory. VRAM is used over RAM for its superior memory bandwidth, where HBM &amp;gt; GDDR &amp;gt; DDR. However, due to limitations that are oftentimes financial, quantisations are used to fit a bigger model into smaller memory by approximating the precision of the weights.&lt;/p&gt; &lt;p&gt;Usually, this works wonders, for in the general case, the benefit from a larger model outweighs the near negligible drawbacks of a lower precision, especially for FP16 to Q8_0 and to a lesser extent Q8_0 to Q6_K. However, quantisation at lower precision starts to hurt model performance, often measured by &amp;quot;perplexity&amp;quot; and benchmarks. Even then, larger models need not perform better, since a lack of data quantity may result in larger models &amp;quot;memorising&amp;quot; outputs rather than &amp;quot;learning&amp;quot; output patterns to fit in limited space during backpropagation.&lt;/p&gt; &lt;p&gt;Of course, when we see a large new model, wow, we want to run it locally. So, how would these two perform on a 128GB RAM system assuming time is not a factor? Unfortunately, I do not have the hardware to test even a 671B &amp;quot;1-bit&amp;quot; (or 1-trit) model...so I have no idea how any of these works.&lt;/p&gt; &lt;p&gt;From my observations, I notice comments suggest larger models are more worldly in terms of niche knowledge, while higher quants are better for coding. At what point does this no longer hold true? Does the concept of English have a finite Kolmogorov complexity? Even 2^100m is a lot of possibilities after all. What about larger models being less susceptible to quantisation? &lt;/p&gt; &lt;p&gt;Thank you for your time reading this post. Appreciate your responses.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/nagareteku"&gt; /u/nagareteku &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l1r366/671b_iq1_s_vs_70b_q8_0/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l1r366/671b_iq1_s_vs_70b_q8_0/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1l1r366/671b_iq1_s_vs_70b_q8_0/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-02T19:23:37+00:00</published>
  </entry>
  <entry>
    <id>t3_1l0y0wp</id>
    <title>Allowing LLM to ponder in Open WebUI</title>
    <updated>2025-06-01T19:47:52+00:00</updated>
    <author>
      <name>/u/Everlier</name>
      <uri>https://old.reddit.com/user/Everlier</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l0y0wp/allowing_llm_to_ponder_in_open_webui/"&gt; &lt;img alt="Allowing LLM to ponder in Open WebUI" src="https://external-preview.redd.it/dHd6NjY5c2JkZDRmMbDY_eAdKP8QUXyZwc-4j2cel9Olwb9ejqufCbXqijwB.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=d96e6747cff63170125fef17cdbcf53af47bbb3f" title="Allowing LLM to ponder in Open WebUI" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;&lt;strong&gt;What is this?&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;A completely superficial way of letting LLM to ponder a bit before making its conversation turn. The process is streamed to an artifact within Open WebUI.&lt;/p&gt; &lt;p&gt;&lt;a href="https://github.com/av/harbor/blob/main/boost/src/modules/ponder.py"&gt;Code&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Everlier"&gt; /u/Everlier &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://v.redd.it/uoeptbsbdd4f1"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l0y0wp/allowing_llm_to_ponder_in_open_webui/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1l0y0wp/allowing_llm_to_ponder_in_open_webui/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-01T19:47:52+00:00</published>
  </entry>
  <entry>
    <id>t3_1l1bjhm</id>
    <title>System Prompt Learning: Teaching your local LLMs to learn problem-solving strategies from experience (optillm plugin)</title>
    <updated>2025-06-02T07:08:14+00:00</updated>
    <author>
      <name>/u/asankhs</name>
      <uri>https://old.reddit.com/user/asankhs</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hey &lt;a href="/r/LocalLlama"&gt;r/LocalLlama&lt;/a&gt;!&lt;/p&gt; &lt;p&gt;I wanted to share something we've been working on that might interest folks running local LLMs - &lt;strong&gt;System Prompt Learning (SPL)&lt;/strong&gt;.&lt;/p&gt; &lt;h1&gt;The Problem&lt;/h1&gt; &lt;p&gt;You know how ChatGPT, Claude, etc. perform so well partly because they have incredibly detailed system prompts with sophisticated reasoning strategies? Most of us running local models just use basic prompts and miss out on those performance gains.&lt;/p&gt; &lt;h1&gt;What is SPL?&lt;/h1&gt; &lt;p&gt;SPL implements what Andrej Karpathy called the &amp;quot;third paradigm&amp;quot; for LLM learning - instead of just pretraining and fine-tuning, models can now learn problem-solving strategies from their own experience.&lt;/p&gt; &lt;h1&gt;How it works:&lt;/h1&gt; &lt;ul&gt; &lt;li&gt;Automatically classifies problems into 16 types (math, coding, word problems, etc.)&lt;/li&gt; &lt;li&gt;Builds a persistent database of effective solving strategies&lt;/li&gt; &lt;li&gt;Selects the best strategies for each query&lt;/li&gt; &lt;li&gt;Evaluates how well strategies worked and refines them over time&lt;/li&gt; &lt;li&gt;All strategies are human-readable JSON - you can inspect and edit them&lt;/li&gt; &lt;/ul&gt; &lt;h1&gt;Results:&lt;/h1&gt; &lt;p&gt;Tested with gemini-2.0-flash-lite across math benchmarks:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Arena Hard&lt;/strong&gt;: 29% → 37.6% (+8.6%)&lt;/li&gt; &lt;li&gt;&lt;strong&gt;AIME24&lt;/strong&gt;: 23.33% → 30% (+6.67%)&lt;/li&gt; &lt;li&gt;&lt;strong&gt;OptiLLMBench&lt;/strong&gt;: 61% → 65% (+4%)&lt;/li&gt; &lt;li&gt;&lt;strong&gt;MATH-500&lt;/strong&gt;: 85% → 85.6% (+0.6%)&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;After 500 queries, the system developed 129 strategies, refined 97 of them, and achieved much better problem-solving.&lt;/p&gt; &lt;h1&gt;For Local LLM Users:&lt;/h1&gt; &lt;ul&gt; &lt;li&gt;Works with &lt;strong&gt;any OpenAI-compatible API&lt;/strong&gt; (so llama.cpp, Ollama, vLLM, etc.)&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Runs completely locally&lt;/strong&gt; - strategies stored in local JSON files&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Two modes&lt;/strong&gt;: inference-only (default) or learning mode&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Minimal overhead&lt;/strong&gt; - just augments your system prompt&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Open source&lt;/strong&gt; and easy to inspect/modify&lt;/li&gt; &lt;/ul&gt; &lt;h1&gt;Setup:&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;pip install optillm # Point to your local LLM endpoint python optillm.py --base_url http://localhost:8080/v1 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Then just add &lt;code&gt;spl-&lt;/code&gt; prefix to your model:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;model=&amp;quot;spl-llama-3.2-3b&amp;quot; # or whatever your model is &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Enable learning mode to create new strategies:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;extra_body={&amp;quot;spl_learning&amp;quot;: True} &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Example Strategy Learned:&lt;/h1&gt; &lt;p&gt;The system automatically learned this strategy for word problems:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;&lt;strong&gt;Understand&lt;/strong&gt;: Read carefully, identify unknowns&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Plan&lt;/strong&gt;: Define variables, write equations&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Solve&lt;/strong&gt;: Step-by-step with units&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Verify&lt;/strong&gt;: Check reasonableness&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;All strategies are stored in &lt;code&gt;~/.optillm/spl/data/strategies.json&lt;/code&gt; so you can back them up, share them, or manually edit them.&lt;/p&gt; &lt;h1&gt;Why This Matters for Local LLMs:&lt;/h1&gt; &lt;ul&gt; &lt;li&gt;Your model gets &lt;strong&gt;progressively better&lt;/strong&gt; at problem types you use frequently&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Transparent learning&lt;/strong&gt; - you can see exactly what strategies it develops&lt;/li&gt; &lt;li&gt;&lt;strong&gt;No external dependencies&lt;/strong&gt; - everything runs locally&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Transferable knowledge&lt;/strong&gt; - you can share strategy files between deployments&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;This feels like a step toward local models that actually improve through use, rather than being static after training.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Links:&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;GitHub: &lt;a href="https://github.com/codelion/optillm"&gt;https://github.com/codelion/optillm&lt;/a&gt;&lt;/li&gt; &lt;li&gt;SPL Plugin: &lt;a href="https://github.com/codelion/optillm/tree/main/optillm/plugins/spl"&gt;https://github.com/codelion/optillm/tree/main/optillm/plugins/spl&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Technical article: &lt;a href="https://huggingface.co/blog/codelion/system-prompt-learning"&gt;https://huggingface.co/blog/codelion/system-prompt-learning&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Andrej's original tweet: &lt;a href="https://x.com/karpathy/status/1921368644069765486"&gt;https://x.com/karpathy/status/1921368644069765486&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Anyone tried this yet? Would love to hear how it works with different local models!&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Edit:&lt;/strong&gt; Works great with reasoning models like DeepSeek-R1, QwQ, etc. The strategies help guide their thinking process.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/asankhs"&gt; /u/asankhs &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l1bjhm/system_prompt_learning_teaching_your_local_llms/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l1bjhm/system_prompt_learning_teaching_your_local_llms/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1l1bjhm/system_prompt_learning_teaching_your_local_llms/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-02T07:08:14+00:00</published>
  </entry>
  <entry>
    <id>t3_1l13tv3</id>
    <title>Who is getting paid to work doing this rather than just hobby dabbling..what was your path?</title>
    <updated>2025-06-02T00:00:47+00:00</updated>
    <author>
      <name>/u/bornfree4ever</name>
      <uri>https://old.reddit.com/user/bornfree4ever</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I really enjoy hacking together LLM scripts and ideas. but how do I get paid doing it??&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/bornfree4ever"&gt; /u/bornfree4ever &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l13tv3/who_is_getting_paid_to_work_doing_this_rather/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l13tv3/who_is_getting_paid_to_work_doing_this_rather/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1l13tv3/who_is_getting_paid_to_work_doing_this_rather/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-02T00:00:47+00:00</published>
  </entry>
  <entry>
    <id>t3_1l1ggkp</id>
    <title>[DEMO] I created a coding agent that can do dynamic, runtime debugging.</title>
    <updated>2025-06-02T12:14:32+00:00</updated>
    <author>
      <name>/u/bn_from_zentara</name>
      <uri>https://old.reddit.com/user/bn_from_zentara</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l1ggkp/demo_i_created_a_coding_agent_that_can_do_dynamic/"&gt; &lt;img alt="[DEMO] I created a coding agent that can do dynamic, runtime debugging." src="https://external-preview.redd.it/MnJzMXR6MGg4aTRmMSD9styMP4r1TEey8oyCG95ikT3wdTqvY8nF4QJV9K9T.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=5c16192412336aa8a18b501474cd7b09cd1c3407" title="[DEMO] I created a coding agent that can do dynamic, runtime debugging." /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I'm just annoyed with inability of current coding agents creating buggy code and can not fix it. It is said that current LLM have Ph.D level and cannot fix some obvious bugs, just loop around and around and offer the same wrong solution for the bug. At the same time they look very smart, much knowledgeable than me. Why is that? My explanation is that they do not have access to the information as I do. When I do debugging, I can look at variable values, can go up and down the stack to figure out where the wrong variables values get it.&lt;br /&gt; It seems to me that this can be fixed easily if we give a coding agent the rich context as we do when debugging by given them all the debugging tools. This approach has been pioneered previously by several posts such as :&lt;/p&gt; &lt;p&gt;&lt;a href="https://www.reddit.com/r/LocalLLaMA/comments/1inqb6n/letting_llms_using_an_ides_debugger/"&gt;https://www.reddit.com/r/LocalLLaMA/comments/1inqb6n/letting_llms_using_an_ides_debugger/&lt;/a&gt; , and &lt;a href="https://www.reddit.com/r/ClaudeAI/comments/1i3axh1/enable_claude_to_interactively_debug_for_you_via/"&gt;https://www.reddit.com/r/ClaudeAI/comments/1i3axh1/enable_claude_to_interactively_debug_for_you_via/&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Those posts really provided the proof of concept of exactly what I am looking for . Also recently Microsoft published a paper about their Debug-gym, &lt;a href="https://www.microsoft.com/en-us/research/blog/debug-gym-an-environment-for-ai-coding-tools-to-learn-how-to-debug-code-like-programmers/"&gt;https://www.microsoft.com/en-us/research/blog/debug-gym-an-environment-for-ai-coding-tools-to-learn-how-to-debug-code-like-programmers/&lt;/a&gt; , saying that by leveraging the runtime state knowledge, LLM can increase pretty substantially on coding accuracy.&lt;/p&gt; &lt;p&gt;One of the previous work uses MCP server approach. While MCP server provides the flexibility to quickly change the coding agent, I could not make it work robustly, stable in my setting. Maybe the sse transport layer of MCP server does not work well. Also current solutions only provide limited debugging functions. Inspired by those previous works, here I expanded the debugging toolset, made it directly integrated with my favorite coding agent - Roo -Code, skipping the MCP communication. Although this way, I lost the plug and play flexibility of MCP server, what I gain is more stable, robust performance.&lt;br /&gt; Included is the demo of my coding agent - a fork from the wonderful coding agent Roo-Code. Besides writing code , it can set breakpoints, inspect stack variable, go up and down the stack, evaluate expression, run statements, etc. , have access to most debugger function tools. As Zentara Code - my forked coding agent communicate with debugger through VSCode DAP, it is language agnostic, can work with any language that has VSCode debugger extention. I have tested it with Python, TypeScript and Javascript.&lt;/p&gt; &lt;p&gt;I mostly code in Python. I usually ask Zentara Code write a code for me, and then write pytest tests for the code it write. Pytest by default captures all the assertion errors to make it own analysis, do not bubble up the exception. I was able to make Zentara code to capture those pytest exceptions. Now Zentara code can run those pytest tests, see the exception messages, use runtime state to interactively debug the exceptions smartly.&lt;br /&gt; The code will be released soon after I finishing up final touch. The demo attached is an illustration of how Zentara code struggles and successfully debugs a buggy quicksort implementation using dynamic runtime info.&lt;/p&gt; &lt;p&gt;I just would like to share with you the preliminary result and get your initial impressions and feedbacks.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/bn_from_zentara"&gt; /u/bn_from_zentara &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://v.redd.it/qic49y0h8i4f1"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l1ggkp/demo_i_created_a_coding_agent_that_can_do_dynamic/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1l1ggkp/demo_i_created_a_coding_agent_that_can_do_dynamic/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-02T12:14:32+00:00</published>
  </entry>
  <entry>
    <id>t3_1l1a944</id>
    <title>Snapdragon 8 Elite gets 5.5 t/s on Qwen3 30B A3B</title>
    <updated>2025-06-02T05:44:39+00:00</updated>
    <author>
      <name>/u/1ncehost</name>
      <uri>https://old.reddit.com/user/1ncehost</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l1a944/snapdragon_8_elite_gets_55_ts_on_qwen3_30b_a3b/"&gt; &lt;img alt="Snapdragon 8 Elite gets 5.5 t/s on Qwen3 30B A3B" src="https://preview.redd.it/jagac0yccg4f1.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=a6e0ede5a0ed01ba1b9b850ec415585886e5bad1" title="Snapdragon 8 Elite gets 5.5 t/s on Qwen3 30B A3B" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Phone is a Razr Ultra 2025&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/1ncehost"&gt; /u/1ncehost &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://i.redd.it/jagac0yccg4f1.png"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l1a944/snapdragon_8_elite_gets_55_ts_on_qwen3_30b_a3b/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1l1a944/snapdragon_8_elite_gets_55_ts_on_qwen3_30b_a3b/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-02T05:44:39+00:00</published>
  </entry>
  <entry>
    <id>t3_1l1581z</id>
    <title>Which model are you using? June'25 edition</title>
    <updated>2025-06-02T01:09:13+00:00</updated>
    <author>
      <name>/u/Ok_Influence505</name>
      <uri>https://old.reddit.com/user/Ok_Influence505</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;As proposed previously from this &lt;a href="https://www.reddit.com/r/LocalLLaMA/comments/1jxu0f7/we_should_have_a_monthly_which_models_are_you/"&gt;post&lt;/a&gt;, it's time for another monthly check-in on the latest models and their applications. The goal is to keep everyone updated on recent releases and discover hidden gems that might be flying under the radar.&lt;/p&gt; &lt;p&gt;With new models like DeepSeek-R1-0528, Claude 4 dropping recently, I'm curious to see how these stack up against established options. Have you tested any of the latest releases? How do they compare to what you were using before?&lt;/p&gt; &lt;p&gt;So, let start a discussion on what models (both proprietary and open-weights) are use using (or stop using ;) ) for different purposes (coding, writing, creative writing etc.).&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Ok_Influence505"&gt; /u/Ok_Influence505 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l1581z/which_model_are_you_using_june25_edition/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l1581z/which_model_are_you_using_june25_edition/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1l1581z/which_model_are_you_using_june25_edition/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-02T01:09:13+00:00</published>
  </entry>
  <entry>
    <id>t3_1l1luwz</id>
    <title>What's a general model 14b or less that genuinely impresses you?</title>
    <updated>2025-06-02T16:02:56+00:00</updated>
    <author>
      <name>/u/intimate_sniffer69</name>
      <uri>https://old.reddit.com/user/intimate_sniffer69</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I'm looking for a general purpose model that is exceptional, outstanding, can do a wide array of tasks especially administrative, doing things like preparing me PowerPoint slide and the text that should be put into documents and just taking notes on stuff, converting ugly messy unformatted notes into something tangible. I need a model that can do that. Currently I've been using Phi, But it's really not that great. I'm kind of disappointed in it. I don't need it to do any sort of programming or coding at all, so mostly administrative stuff&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/intimate_sniffer69"&gt; /u/intimate_sniffer69 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l1luwz/whats_a_general_model_14b_or_less_that_genuinely/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l1luwz/whats_a_general_model_14b_or_less_that_genuinely/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1l1luwz/whats_a_general_model_14b_or_less_that_genuinely/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-02T16:02:56+00:00</published>
  </entry>
  <entry>
    <id>t3_1l1n6h4</id>
    <title>Best uncensored multi language LLM up to 12B, still Mistral Nemo?</title>
    <updated>2025-06-02T16:54:30+00:00</updated>
    <author>
      <name>/u/Blizado</name>
      <uri>https://old.reddit.com/user/Blizado</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I want to use a fixed model for my private none commercial AI project because I want to finetune it later (LoRAs) for it's specific tasks. For that I need:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;A up to 12B text to text model - need to match into 12GB VRAM inclusive 8K context window.&lt;/li&gt; &lt;li&gt;As uncensored as possible in it's core.&lt;/li&gt; &lt;li&gt;Official support for main languages (At least EN/FR/DE).&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Actually I have Mistral Nemo Instruct on my list, nothing else. It is the only model from that I know that match all three points without a &amp;quot;however&amp;quot;.&lt;/p&gt; &lt;p&gt;12B at max because I set me a limit of 16GB VRAM for my AI project usage in total and that must be enough for the LLM with 8K context, Whisper and a TTS. 16GB because I want to open source my project later and don't want that it is limited to users with at least 24GB VRAM. 16GB are more and more common on actual graphic cards (don't by 8GB versions anymore!).&lt;/p&gt; &lt;p&gt;I know you can uncensor models, BUT abliterated models are mostly only uncensored for English language. I always noticed more worse performance on other languages with such models and don't want to deal with that. And Mistral Nemo is known to be very uncensored so no extra uncensoring needed.&lt;/p&gt; &lt;p&gt;Because the most finetuned models are only done for one or two languages, finetuned models fall out as options. I want to support at least EN/FR/DE languages. I'm myself a nativ German speaker and don't want to talk to AI all the time in English only. So I know very good how annoying it is that many AI projects only support English.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Blizado"&gt; /u/Blizado &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l1n6h4/best_uncensored_multi_language_llm_up_to_12b/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l1n6h4/best_uncensored_multi_language_llm_up_to_12b/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1l1n6h4/best_uncensored_multi_language_llm_up_to_12b/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-02T16:54:30+00:00</published>
  </entry>
  <entry>
    <id>t3_1l1rda5</id>
    <title>Use offline voice controlled agents to search and browse the internet with a contextually aware LLM in the next version of AI Runner</title>
    <updated>2025-06-02T19:34:26+00:00</updated>
    <author>
      <name>/u/w00fl35</name>
      <uri>https://old.reddit.com/user/w00fl35</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l1rda5/use_offline_voice_controlled_agents_to_search_and/"&gt; &lt;img alt="Use offline voice controlled agents to search and browse the internet with a contextually aware LLM in the next version of AI Runner" src="https://external-preview.redd.it/bGZzOGxrZ2VnazRmMcjVXgRLpZ5qhPQ96q4r0xpE25NahzVeLWn0o9J3ntg5.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=929b9c07ada3bf3f8d1561906efb3f50275ee1a9" title="Use offline voice controlled agents to search and browse the internet with a contextually aware LLM in the next version of AI Runner" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/w00fl35"&gt; /u/w00fl35 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://v.redd.it/ir6jvtbbgk4f1"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l1rda5/use_offline_voice_controlled_agents_to_search_and/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1l1rda5/use_offline_voice_controlled_agents_to_search_and/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-02T19:34:26+00:00</published>
  </entry>
  <entry>
    <id>t3_1l1glmq</id>
    <title>Anyone tried this? - Self improving AI agents</title>
    <updated>2025-06-02T12:21:26+00:00</updated>
    <author>
      <name>/u/davesmith001</name>
      <uri>https://old.reddit.com/user/davesmith001</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Repository for &lt;strong&gt;Darwin Gödel Machine (DGM)&lt;/strong&gt;, a novel self-improving system that iteratively modifies its own code (thereby also improving its ability to modify its own codebase) and empirically validates each change using coding benchmarks. &lt;/p&gt; &lt;p&gt;&lt;a href="https://github.com/jennyzzt/dgm"&gt;https://github.com/jennyzzt/dgm&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/davesmith001"&gt; /u/davesmith001 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l1glmq/anyone_tried_this_self_improving_ai_agents/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l1glmq/anyone_tried_this_self_improving_ai_agents/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1l1glmq/anyone_tried_this_self_improving_ai_agents/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-02T12:21:26+00:00</published>
  </entry>
  <entry>
    <id>t3_1l1q3dk</id>
    <title>Which programming languages do LLMs struggle with the most, and why?</title>
    <updated>2025-06-02T18:45:36+00:00</updated>
    <author>
      <name>/u/alozowski</name>
      <uri>https://old.reddit.com/user/alozowski</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I've noticed that LLMs do well with Python, which is quite obvious, but often make mistakes in other languages. I can't test every language myself, so can you share, which languages have you seen them struggle with, and what went wrong?&lt;/p&gt; &lt;p&gt;For context: I want to test LLMs on various &amp;quot;hard&amp;quot; languages &lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/alozowski"&gt; /u/alozowski &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l1q3dk/which_programming_languages_do_llms_struggle_with/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l1q3dk/which_programming_languages_do_llms_struggle_with/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1l1q3dk/which_programming_languages_do_llms_struggle_with/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-02T18:45:36+00:00</published>
  </entry>
  <entry>
    <id>t3_1l1pgv9</id>
    <title>latest llama.cpp (b5576) + DeepSeek-R1-0528-Qwen3-8B-Q8_0.gguf successful VScode + MCP running</title>
    <updated>2025-06-02T18:21:35+00:00</updated>
    <author>
      <name>/u/tyoyvr-2222</name>
      <uri>https://old.reddit.com/user/tyoyvr-2222</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l1pgv9/latest_llamacpp_b5576_deepseekr10528qwen38bq8/"&gt; &lt;img alt="latest llama.cpp (b5576) + DeepSeek-R1-0528-Qwen3-8B-Q8_0.gguf successful VScode + MCP running" src="https://external-preview.redd.it/sYVW4X6gc-B0EvqWe0QNA3QGRk5e7XKmzrtKFGnT66k.jpg?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=d9cb9655f58f9405afdc373583acebb28d62dac9" title="latest llama.cpp (b5576) + DeepSeek-R1-0528-Qwen3-8B-Q8_0.gguf successful VScode + MCP running" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Just downloaded &lt;a href="https://github.com/ggml-org/llama.cpp/releases/tag/b5576"&gt;Release b5576 · ggml-org/llama.cpp&lt;/a&gt; and try to use MCP tools with folllowing environment:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;&lt;a href="https://huggingface.co/bartowski/deepseek-ai_DeepSeek-R1-0528-Qwen3-8B-GGUF"&gt;DeepSeek-R1-0528-Qwen3-8B-Q8_0&lt;/a&gt;&lt;/li&gt; &lt;li&gt;VS code&lt;/li&gt; &lt;li&gt;Cline&lt;/li&gt; &lt;li&gt;MCP tools like mcp_server_time, filesystem, MS playwright&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;Got application error before b5576 previously, but all tools can run smoothly now.&lt;br /&gt; It took longer time to &amp;quot;think&amp;quot; compared with &lt;a href="https://huggingface.co/unsloth/Devstral-Small-2505-GGUF"&gt;Devstral-Small-2505-GGUF&lt;/a&gt;&lt;br /&gt; Anyway, it is a good model with less VRAM if want to try local development.&lt;/p&gt; &lt;p&gt;my Win11 batch file for reference, adjust based on your own environment:&lt;br /&gt; ```TEXT&lt;br /&gt; SET LLAMA_CPP_PATH=G:\ai\llama.cpp&lt;br /&gt; SET PATH=%LLAMA_CPP_PATH%\build\bin\Release\;%PATH%&lt;br /&gt; SET LLAMA_ARG_HOST=0.0.0.0&lt;br /&gt; SET LLAMA_ARG_PORT=8080&lt;br /&gt; SET LLAMA_ARG_JINJA=true&lt;br /&gt; SET LLAMA_ARG_FLASH_ATTN=true&lt;br /&gt; SET LLAMA_ARG_CACHE_TYPE_K=q8_0&lt;br /&gt; SET LLAMA_ARG_CACHE_TYPE_V=q8_0&lt;br /&gt; SET LLAMA_ARG_N_GPU_LAYERS=65&lt;br /&gt; SET LLAMA_ARG_CTX_SIZE=131072&lt;br /&gt; SET LLAMA_ARG_SWA_FULL=true&lt;br /&gt; SET LLAMA_ARG_MODEL=models\deepseek-ai_DeepSeek-R1-0528-Qwen3-8B-Q8_0.gguf&lt;br /&gt; llama-server.exe --temp 0.6 --top-k 20 --top-p 0.95 --min-p 0 --repeat-penalty 1.1&lt;br /&gt; ```&lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/262hbrj02k4f1.png?width=1011&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=4d9d0a799cc96053b4b255429c2a7e4b85a995ce"&gt;https://preview.redd.it/262hbrj02k4f1.png?width=1011&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=4d9d0a799cc96053b4b255429c2a7e4b85a995ce&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/tyoyvr-2222"&gt; /u/tyoyvr-2222 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l1pgv9/latest_llamacpp_b5576_deepseekr10528qwen38bq8/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l1pgv9/latest_llamacpp_b5576_deepseekr10528qwen38bq8/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1l1pgv9/latest_llamacpp_b5576_deepseekr10528qwen38bq8/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-02T18:21:35+00:00</published>
  </entry>
  <entry>
    <id>t3_1l1rb18</id>
    <title>I made LLMs respond with diff patches rather than standard code blocks and the result is simply amazing!</title>
    <updated>2025-06-02T19:32:00+00:00</updated>
    <author>
      <name>/u/carlrobertoh</name>
      <uri>https://old.reddit.com/user/carlrobertoh</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l1rb18/i_made_llms_respond_with_diff_patches_rather_than/"&gt; &lt;img alt="I made LLMs respond with diff patches rather than standard code blocks and the result is simply amazing!" src="https://external-preview.redd.it/MXRsZjNqNWZmazRmMXGOM2N51B2QnCZhafa7NKplGti0671pTg7o1NRLqsqm.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=d1f73f62c3f1d72a7c956c94ca78e646d7393252" title="I made LLMs respond with diff patches rather than standard code blocks and the result is simply amazing!" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I've been developing a coding assistant for JetBrains IDEs called &lt;strong&gt;ProxyAI&lt;/strong&gt; (previously CodeGPT), and I wanted to experiment with an idea where LLM is instructed to produce diffs as opposed to regular code blocks, which ProxyAI then applies directly to your project.&lt;/p&gt; &lt;p&gt;I was fairly skeptical about this at first, but after going back-and-forth with the initial version and getting it where I wanted it to be, it simply started to amaze me. The model began generating paths and diffs for files it had never seen before and somehow these &amp;quot;hallucinations&amp;quot; were correct (this mostly happened with modifications to build files that typically need a fixed path).&lt;/p&gt; &lt;p&gt;What really surprised me was how natural the workflow became. You just describe what you want changed, and the diffs appear in &lt;em&gt;near real-time&lt;/em&gt;, almost always with the correct diff patch - can't praise enough how good it feels for &lt;strong&gt;quick iterations&lt;/strong&gt;! In most cases, it takes &lt;em&gt;less than a minute&lt;/em&gt; for the LLM to make edits across many different files. When smaller models mess up (which happens fairly often), there's a simple retry mechanism that usually gets it right on the second attempt - fairly similar logic to Cursor's Fast Apply.&lt;/p&gt; &lt;p&gt;This whole functionality is &lt;strong&gt;free&lt;/strong&gt;, &lt;strong&gt;open-source&lt;/strong&gt;, and available for &lt;strong&gt;every model and provider&lt;/strong&gt;, regardless of tool calling capabilities. &lt;strong&gt;No vendor lock-in&lt;/strong&gt;, &lt;strong&gt;no premium features&lt;/strong&gt; - just plug in your API key or connect to a local model and give it a go!&lt;/p&gt; &lt;p&gt;For me, this feels much more intuitive than the typical &lt;em&gt;&amp;quot;switch to edit mode&amp;quot;&lt;/em&gt; dance that most AI coding tools require. I'd definitely encourage you to give it a try and let me know what you think, or what the current solution lacks. Always looking to improve!&lt;/p&gt; &lt;p&gt;&lt;a href="https://www.tryproxy.io/"&gt;https://www.tryproxy.io/&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Best regards&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/carlrobertoh"&gt; /u/carlrobertoh &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://v.redd.it/zcq3wk5ffk4f1"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l1rb18/i_made_llms_respond_with_diff_patches_rather_than/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1l1rb18/i_made_llms_respond_with_diff_patches_rather_than/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-02T19:32:00+00:00</published>
  </entry>
  <entry>
    <id>t3_1l1j94p</id>
    <title>NVIDIA RTX PRO 6000 Unlocks GB202's Full Performance In Gaming: Beats GeForce RTX 5090 Convincingly</title>
    <updated>2025-06-02T14:20:16+00:00</updated>
    <author>
      <name>/u/_SYSTEM_ADMIN_MOD_</name>
      <uri>https://old.reddit.com/user/_SYSTEM_ADMIN_MOD_</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l1j94p/nvidia_rtx_pro_6000_unlocks_gb202s_full/"&gt; &lt;img alt="NVIDIA RTX PRO 6000 Unlocks GB202's Full Performance In Gaming: Beats GeForce RTX 5090 Convincingly" src="https://external-preview.redd.it/CZ499DlxtUi8-a0hH-i2iuvuqGABLEdCAAN2p00rlA0.jpg?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=64ca9b6f5516529ad31d61311b7ab6293c4d549c" title="NVIDIA RTX PRO 6000 Unlocks GB202's Full Performance In Gaming: Beats GeForce RTX 5090 Convincingly" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/_SYSTEM_ADMIN_MOD_"&gt; /u/_SYSTEM_ADMIN_MOD_ &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://wccftech.com/nvidia-rtx-pro-6000-beats-geforce-rtx-5090/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l1j94p/nvidia_rtx_pro_6000_unlocks_gb202s_full/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1l1j94p/nvidia_rtx_pro_6000_unlocks_gb202s_full/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-02T14:20:16+00:00</published>
  </entry>
  <entry>
    <id>t3_1l19yud</id>
    <title>IQ1_Smol_Boi</title>
    <updated>2025-06-02T05:26:51+00:00</updated>
    <author>
      <name>/u/VoidAlchemy</name>
      <uri>https://old.reddit.com/user/VoidAlchemy</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l19yud/iq1_smol_boi/"&gt; &lt;img alt="IQ1_Smol_Boi" src="https://preview.redd.it/9u1teeqt4g4f1.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=bab7030e08d75ad0063051230aa543c0b2a3ac7f" title="IQ1_Smol_Boi" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Some folks asked me for an R1-0528 quant that might fit on 128GiB RAM + 24GB VRAM. I didn't think it was possible, but turns out my new smol boi &lt;code&gt;IQ1_S_R4&lt;/code&gt; is 131GiB and actually runs okay (ik_llama.cpp fork only), and has perplexity lower &amp;quot;better&amp;quot; than &lt;code&gt;Qwen3-235B-A22B-Q8_0&lt;/code&gt; which is almost twice the size! Not sure that means it is better, but kinda surprising to me.&lt;/p&gt; &lt;p&gt;Unsloth's newest smol boi is an odd &lt;code&gt;UD-TQ1_0&lt;/code&gt; weighing in at 151GiB. The &lt;code&gt;TQ1_0&lt;/code&gt; quant is a 1.6875 bpw quant types for TriLMs and BitNet b1.58 models. However, if you open up the side-bar on the modelcard it doesn't actually have any TQ1_0 layers/tensors and is mostly a mix of IQN_S and such. So not sure what is going on there or if it was a mistake. It does at least run from what I can tell, though I didn't try inferencing with it. They do have an &lt;code&gt;IQ1_S&lt;/code&gt; as well, but it seems rather larger given their recipe though I've heard folks have had success with it.&lt;/p&gt; &lt;p&gt;Bartowski's smol boi &lt;code&gt;IQ1_M&lt;/code&gt; is the next smallest I've seen at about 138GiB and seems to work okay in my limited testing. Surprising how these quants can still run at such low bit rates!&lt;/p&gt; &lt;p&gt;Anyway, I wouldn't recommend these smol bois if you have enough RAM+VRAM to fit a more optimized larger quant, but if at least there are some options &amp;quot;For the desperate&amp;quot; haha...&lt;/p&gt; &lt;p&gt;Cheers!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/VoidAlchemy"&gt; /u/VoidAlchemy &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://i.redd.it/9u1teeqt4g4f1.png"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l19yud/iq1_smol_boi/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1l19yud/iq1_smol_boi/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-02T05:26:51+00:00</published>
  </entry>
  <entry>
    <id>t3_1l1mb6y</id>
    <title>PlayAI's Latest Diffusion-based Speech Editing Model: PlayDiffusion</title>
    <updated>2025-06-02T16:20:20+00:00</updated>
    <author>
      <name>/u/SandSalt8370</name>
      <uri>https://old.reddit.com/user/SandSalt8370</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l1mb6y/playais_latest_diffusionbased_speech_editing/"&gt; &lt;img alt="PlayAI's Latest Diffusion-based Speech Editing Model: PlayDiffusion" src="https://external-preview.redd.it/w-YzJC8yYFljokN1sVgB95jsZmNJotgMItgN5CbyhjY.jpg?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=d65ddc626651c2d4f886345c5637afbe5263791e" title="PlayAI's Latest Diffusion-based Speech Editing Model: PlayDiffusion" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;PlayAI open-sourced a new Speech Editing model today that allows for precise &amp;amp; clean speech editing. A huge step up from traditional autoregressive models that aren't designed for this task.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/SandSalt8370"&gt; /u/SandSalt8370 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://github.com/playht/playdiffusion"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l1mb6y/playais_latest_diffusionbased_speech_editing/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1l1mb6y/playais_latest_diffusionbased_speech_editing/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-02T16:20:20+00:00</published>
  </entry>
  <entry>
    <id>t3_1l1jyld</id>
    <title>Smallest LLM you tried that's legit</title>
    <updated>2025-06-02T14:48:26+00:00</updated>
    <author>
      <name>/u/Remarkable-Law9287</name>
      <uri>https://old.reddit.com/user/Remarkable-Law9287</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;what's the smallest LLM you've used that gives proper text, not just random gibberish? &lt;/p&gt; &lt;p&gt;I've tried qwen2.5:0.5B.it works pretty well for me, actually quite good&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Remarkable-Law9287"&gt; /u/Remarkable-Law9287 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l1jyld/smallest_llm_you_tried_thats_legit/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l1jyld/smallest_llm_you_tried_thats_legit/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1l1jyld/smallest_llm_you_tried_thats_legit/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-02T14:48:26+00:00</published>
  </entry>
  <entry>
    <id>t3_1l1e6ic</id>
    <title>Ignore the hype - AI companies still have no moat</title>
    <updated>2025-06-02T10:06:26+00:00</updated>
    <author>
      <name>/u/No_Tea2273</name>
      <uri>https://old.reddit.com/user/No_Tea2273</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l1e6ic/ignore_the_hype_ai_companies_still_have_no_moat/"&gt; &lt;img alt="Ignore the hype - AI companies still have no moat" src="https://external-preview.redd.it/TawOSRI4o3WDthoH5zp4cL7vlpQPtqKfMqXniUZMdX0.jpg?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=cc884e61e4fbae7ba821197e1b5320440aaab413" title="Ignore the hype - AI companies still have no moat" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;An article I wrote a while back, I think &lt;a href="/r/LocalLLaMA"&gt;r/LocalLLaMA&lt;/a&gt; still wins&lt;/p&gt; &lt;p&gt;The basis of it is that Every single AI tool – has an open source alternative, every. single. one – so programming wise, for a new company to implement these features is not a matter of development complexity but a matter of getting the biggest audience &lt;/p&gt; &lt;p&gt;Everything has an open source versioned alternative right now&lt;/p&gt; &lt;p&gt;Take for example&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/No_Tea2273"&gt; /u/No_Tea2273 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://river.berlin/blog/there-is-still-no-moat/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l1e6ic/ignore_the_hype_ai_companies_still_have_no_moat/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1l1e6ic/ignore_the_hype_ai_companies_still_have_no_moat/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-02T10:06:26+00:00</published>
  </entry>
  <entry>
    <id>t3_1l1t75j</id>
    <title>ZorkGPT: Open source AI agent that plays the classic text adventure game Zork</title>
    <updated>2025-06-02T20:46:12+00:00</updated>
    <author>
      <name>/u/stickystyle</name>
      <uri>https://old.reddit.com/user/stickystyle</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I built an AI system that plays Zork (the classic, and very hard 1977 text adventure game) using multiple open-source LLMs working together.&lt;/p&gt; &lt;p&gt;The system uses separate models for different tasks:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Agent model decides what actions to take&lt;/li&gt; &lt;li&gt;Critic model evaluates those actions before execution&lt;/li&gt; &lt;li&gt;Extractor model parses game text into structured data&lt;/li&gt; &lt;li&gt;Strategy generator learns from experience to improve over time&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Unlike the other Pokemon gaming projects, this focuses on using open source models. I had initially wanted to limit the project to models that I can run locally on my MacMini, but that proved to be fruitless after many thousands of turns. I also don't have the cash resources to runs this on Gemini or Claude (like how can those guys afford that??). The AI builds a map as it explores, maintains memory of what it's learned, and continuously updates its strategy.&lt;/p&gt; &lt;p&gt;The live viewer shows real-time data of the AI's reasoning process, current game state, learned strategies, and a visual map of discovered locations. You can watch it play live at &lt;a href="https://zorkgpt.com"&gt;https://zorkgpt.com&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Project code: &lt;a href="https://github.com/stickystyle/ZorkGPT"&gt;https://github.com/stickystyle/ZorkGPT&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Just wanted to share something I've been playing with after work that I thought this audience would find neat. I just wiped its memory this morning and started a fresh &amp;quot;no-touch&amp;quot; run, so let's see how it goes :)&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/stickystyle"&gt; /u/stickystyle &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l1t75j/zorkgpt_open_source_ai_agent_that_plays_the/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l1t75j/zorkgpt_open_source_ai_agent_that_plays_the/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1l1t75j/zorkgpt_open_source_ai_agent_that_plays_the/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-02T20:46:12+00:00</published>
  </entry>
  <entry>
    <id>t3_1l1qqdx</id>
    <title>At the airport people watching while I run models locally:</title>
    <updated>2025-06-02T19:10:02+00:00</updated>
    <author>
      <name>/u/Current-Ticket4214</name>
      <uri>https://old.reddit.com/user/Current-Ticket4214</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l1qqdx/at_the_airport_people_watching_while_i_run_models/"&gt; &lt;img alt="At the airport people watching while I run models locally:" src="https://preview.redd.it/55ab38z0ck4f1.jpeg?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=ee34cc7e6232ae1fc31a5076b1cc4064bd66305d" title="At the airport people watching while I run models locally:" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Current-Ticket4214"&gt; /u/Current-Ticket4214 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://i.redd.it/55ab38z0ck4f1.jpeg"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1l1qqdx/at_the_airport_people_watching_while_i_run_models/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1l1qqdx/at_the_airport_people_watching_while_i_run_models/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-02T19:10:02+00:00</published>
  </entry>
</feed>
