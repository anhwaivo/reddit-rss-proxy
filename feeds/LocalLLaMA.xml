<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>/r/LocalLLaMA/.rss</id>
  <title>LocalLlama</title>
  <updated>2025-06-18T21:06:09+00:00</updated>
  <link href="https://old.reddit.com/r/LocalLLaMA/" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <icon>https://www.redditstatic.com/icon.png/</icon>
  <subtitle>Subreddit to discuss Llama, the large language model created by Meta AI.</subtitle>
  <entry>
    <id>t3_1lencvg</id>
    <title>Joycap-beta with llama.cpp</title>
    <updated>2025-06-18T17:37:29+00:00</updated>
    <author>
      <name>/u/HollowInfinity</name>
      <uri>https://old.reddit.com/user/HollowInfinity</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Has anyone gotten llama.cpp to work with joycap yet? So far the latest version of Joycap seems to be the captioning king for my workflows but I've only managed to use it with VLLM which is super slow to startup (despite the model being cached in RAM) and that leads to a lot of waiting combined with llama-swap.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/HollowInfinity"&gt; /u/HollowInfinity &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lencvg/joycapbeta_with_llamacpp/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lencvg/joycapbeta_with_llamacpp/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1lencvg/joycapbeta_with_llamacpp/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-18T17:37:29+00:00</published>
  </entry>
  <entry>
    <id>t3_1ler0ew</id>
    <title>RAG injection in Chain of Thought (COT)</title>
    <updated>2025-06-18T20:00:58+00:00</updated>
    <author>
      <name>/u/Strange_Test7665</name>
      <uri>https://old.reddit.com/user/Strange_Test7665</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I just recently started running 'deepseek-ai/DeepSeek-R1-Distill-Qwen-14B' locally (Macbook Pro M4 48GB). I have been messing around with an idea where I inject information from a ToolUse/RAG model in to the &amp;lt;think&amp;gt; section. Essentially: User prompt &amp;gt; DeepseekR1 runs 50 tokens &amp;gt; stop. Run another tool use model on user prompt ask if we have a tool to answer the question, if yes return results, if no return empty string&amp;gt; result injected back in the conversation started with DeepseekR1 that ran for 50 tokens &amp;gt; continue running &amp;gt; output from DeepseekR1 with RAG thought injection. Essentially trying to get the benefit of a reasoning model and a tool use model (i'm aware tool use is output structure training, but R1 wasn't trained to output tool struct commonly used). Curious if anyone else has done anything like this. happy to share code.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Strange_Test7665"&gt; /u/Strange_Test7665 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ler0ew/rag_injection_in_chain_of_thought_cot/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ler0ew/rag_injection_in_chain_of_thought_cot/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1ler0ew/rag_injection_in_chain_of_thought_cot/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-18T20:00:58+00:00</published>
  </entry>
  <entry>
    <id>t3_1ldxuk1</id>
    <title>The Gemini 2.5 models are sparse mixture-of-experts (MoE)</title>
    <updated>2025-06-17T20:24:15+00:00</updated>
    <author>
      <name>/u/cpldcpu</name>
      <uri>https://old.reddit.com/user/cpldcpu</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ldxuk1/the_gemini_25_models_are_sparse_mixtureofexperts/"&gt; &lt;img alt="The Gemini 2.5 models are sparse mixture-of-experts (MoE)" src="https://b.thumbs.redditmedia.com/HQc2i0Um5x7pBOoOn-gVnTMmIXgB-srLNatUzMp3veI.jpg" title="The Gemini 2.5 models are sparse mixture-of-experts (MoE)" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;From the &lt;a href="https://storage.googleapis.com/deepmind-media/gemini/gemini_v2_5_report.pdf"&gt;model report&lt;/a&gt;. It should be a surprise to noone, but it's good to see this being spelled out. We barely ever learn anything about the architecture of closed models.&lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/zhyrdk2dqj7f1.png?width=1056&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=ca3d89968dc6bf950d030bbab25243aeb7623cf4"&gt;https://preview.redd.it/zhyrdk2dqj7f1.png?width=1056&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=ca3d89968dc6bf950d030bbab25243aeb7623cf4&lt;/a&gt;&lt;/p&gt; &lt;p&gt;(I am still hoping for a Gemma-3N report...)&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/cpldcpu"&gt; /u/cpldcpu &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ldxuk1/the_gemini_25_models_are_sparse_mixtureofexperts/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ldxuk1/the_gemini_25_models_are_sparse_mixtureofexperts/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1ldxuk1/the_gemini_25_models_are_sparse_mixtureofexperts/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-17T20:24:15+00:00</published>
  </entry>
  <entry>
    <id>t3_1ldv0hk</id>
    <title>:grab popcorn: OpenAI weighs “nuclear option” of antitrust complaint against Microsoft</title>
    <updated>2025-06-17T18:34:19+00:00</updated>
    <author>
      <name>/u/tabspaces</name>
      <uri>https://old.reddit.com/user/tabspaces</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ldv0hk/grab_popcorn_openai_weighs_nuclear_option_of/"&gt; &lt;img alt=":grab popcorn: OpenAI weighs “nuclear option” of antitrust complaint against Microsoft" src="https://external-preview.redd.it/o-39gdKiRmg7xCtqAV9Kzd__IIP_fxUuIZpgEMOTxUU.jpeg?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=c859f5b46d753fef35eae0d18284d780a193b411" title=":grab popcorn: OpenAI weighs “nuclear option” of antitrust complaint against Microsoft" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/tabspaces"&gt; /u/tabspaces &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://arstechnica.com/ai/2025/06/openai-weighs-nuclear-option-of-antitrust-complaint-against-microsoft/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ldv0hk/grab_popcorn_openai_weighs_nuclear_option_of/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1ldv0hk/grab_popcorn_openai_weighs_nuclear_option_of/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-17T18:34:19+00:00</published>
  </entry>
  <entry>
    <id>t3_1lek8yo</id>
    <title>M4 Max 128GB MacBook arrives today. Is LM Studio still king for running MLX or have things moved on?</title>
    <updated>2025-06-18T15:36:34+00:00</updated>
    <author>
      <name>/u/__JockY__</name>
      <uri>https://old.reddit.com/user/__JockY__</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;As title: new top-of-the-line MBP arrives today and I’m wondering what the most performant option is for hosting models locally on it.&lt;/p&gt; &lt;p&gt;Also: we run a quad RTX A6000 rig and I’ll be doing some benchmark comparisons between that and the MBP. Any requests?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/__JockY__"&gt; /u/__JockY__ &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lek8yo/m4_max_128gb_macbook_arrives_today_is_lm_studio/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lek8yo/m4_max_128gb_macbook_arrives_today_is_lm_studio/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1lek8yo/m4_max_128gb_macbook_arrives_today_is_lm_studio/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-18T15:36:34+00:00</published>
  </entry>
  <entry>
    <id>t3_1legaq8</id>
    <title>Update:My agent model now supports OpenAI function calling format! (mirau-agent-base)</title>
    <updated>2025-06-18T12:51:47+00:00</updated>
    <author>
      <name>/u/EliaukMouse</name>
      <uri>https://old.reddit.com/user/EliaukMouse</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1legaq8/updatemy_agent_model_now_supports_openai_function/"&gt; &lt;img alt="Update:My agent model now supports OpenAI function calling format! (mirau-agent-base)" src="https://external-preview.redd.it/8a8-yIo-XSHNh-GrNf4RtIK3HA5ouO1zg1RogdSi4c0.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=cd68843d35315a418aca711de9b0c6516cd2f26e" title="Update:My agent model now supports OpenAI function calling format! (mirau-agent-base)" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hey &lt;a href="/r/LocalLLaMA"&gt;r/LocalLLaMA&lt;/a&gt;!&lt;/p&gt; &lt;p&gt;A while back I shared my multi-turn tool-calling model &lt;a href="https://www.reddit.com/r/LocalLLaMA/comments/1l7v9gf/a_multiturn_toolcalling_base_model_for_rl_agent/"&gt;in this post&lt;/a&gt;. Based on community feedback about OpenAI compatibility, I've updated the model to support OpenAI's function calling format!&lt;/p&gt; &lt;p&gt;&lt;strong&gt;What's new:&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Full compatibility with OpenAI's tool/function definition format&lt;/li&gt; &lt;li&gt;New model available at: &lt;a href="https://huggingface.co/eliuakk/mirau-agent-base-oai"&gt;https://huggingface.co/eliuakk/mirau-agent-base-oai&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Live demo: &lt;a href="https://modelscope.cn/studios/mouseEliauk/mirau-agent-demo/summary"&gt;https://modelscope.cn/studios/mouseEliauk/mirau-agent-demo/summary&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;About the model:&lt;/strong&gt; mirau-agent-14b-base is a large language model specifically optimized for Agent scenarios, fine-tuned from Qwen2.5-14B-Instruct. This model focuses on enhancing multi-turn tool-calling capabilities, enabling it to autonomously plan, execute tasks, and handle exceptions in complex interactive environments.&lt;/p&gt; &lt;p&gt;Although named &amp;quot;base,&amp;quot; this does not refer to a pre-trained only base model. Instead, it is a &amp;quot;cold-start&amp;quot; version that has undergone Supervised Fine-Tuning (SFT) and Direct Preference Optimization (DPO). It provides a high-quality initial policy for subsequent reinforcement learning training. We also hope the community can further enhance it with RL.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/EliaukMouse"&gt; /u/EliaukMouse &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://huggingface.co/eliuakk/mirau-agent-base-oai"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1legaq8/updatemy_agent_model_now_supports_openai_function/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1legaq8/updatemy_agent_model_now_supports_openai_function/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-18T12:51:47+00:00</published>
  </entry>
  <entry>
    <id>t3_1lel886</id>
    <title>Best non-Chinese open models?</title>
    <updated>2025-06-18T16:15:04+00:00</updated>
    <author>
      <name>/u/ProbaDude</name>
      <uri>https://old.reddit.com/user/ProbaDude</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Yes I know that running them locally is fine, and believe me there's nothing I'd like to do more than just use Qwen, but there is significant resistance to anything from China in this use case&lt;/p&gt; &lt;p&gt;Most important factor is it needs to be good at RAG, summarization and essay/report writing. Reasoning would also be a big plus &lt;/p&gt; &lt;p&gt;I'm currently playing around with Llama 3.3 Nemotron Super 49B and Gemma 3 but would love other things to consider&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/ProbaDude"&gt; /u/ProbaDude &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lel886/best_nonchinese_open_models/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lel886/best_nonchinese_open_models/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1lel886/best_nonchinese_open_models/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-18T16:15:04+00:00</published>
  </entry>
  <entry>
    <id>t3_1lekndj</id>
    <title>gemini-2.5-flash-lite-preview-06-17 performance on IDP Leaderboard</title>
    <updated>2025-06-18T15:52:25+00:00</updated>
    <author>
      <name>/u/SouvikMandal</name>
      <uri>https://old.reddit.com/user/SouvikMandal</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lekndj/gemini25flashlitepreview0617_performance_on_idp/"&gt; &lt;img alt="gemini-2.5-flash-lite-preview-06-17 performance on IDP Leaderboard" src="https://a.thumbs.redditmedia.com/sMkes8zrdRPxYFniAG0nWHWSTCh0-qPNSDeFUIiMmt4.jpg" title="gemini-2.5-flash-lite-preview-06-17 performance on IDP Leaderboard" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;&lt;a href="https://preview.redd.it/rxnsezzpip7f1.png?width=2506&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=eb65abe714538a8ea6f25ae579d38b11105ba0bb"&gt;https://preview.redd.it/rxnsezzpip7f1.png?width=2506&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=eb65abe714538a8ea6f25ae579d38b11105ba0bb&lt;/a&gt;&lt;/p&gt; &lt;p&gt;2.5 Flash Lite is much better than other small models like `GPT-4o-mini` and `GPT-4.1-nano`. But not better than Gemini 2.0 flash, at least for document understanding tasks. Official benchmark says `2.5 Flash-Lite has all-round, significantly higher performance than 2.0 Flash-Lite on coding, math, science, reasoning and multimodal benchmarks.` Maybe for VLM component of 2.0 flash still better than 2.5 Flash Lite. Anyone else got similar results?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/SouvikMandal"&gt; /u/SouvikMandal &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lekndj/gemini25flashlitepreview0617_performance_on_idp/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lekndj/gemini25flashlitepreview0617_performance_on_idp/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1lekndj/gemini25flashlitepreview0617_performance_on_idp/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-18T15:52:25+00:00</published>
  </entry>
  <entry>
    <id>t3_1le0mpb</id>
    <title>Llama.cpp is much faster! Any changes made recently?</title>
    <updated>2025-06-17T22:17:52+00:00</updated>
    <author>
      <name>/u/simracerman</name>
      <uri>https://old.reddit.com/user/simracerman</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I've ditched Ollama for about 3 months now, and been on a journey testing multiple wrappers. KoboldCPP coupled with llama swap has been good but I experienced so many hang ups (I leave my PC running 24/7 to serve AI requests), and waking up almost daily and Kobold (or in combination with AMD drivers) would not work. I had to reset llama swap or reboot the PC for it work again.&lt;/p&gt; &lt;p&gt;That said, I tried llama.cpp a few weeks ago and it wasn't smooth with Vulkan (likely some changes that was reverted back). Tried it again yesterday, and the inference speed is 20% faster on average across multiple model types and sizes.&lt;/p&gt; &lt;p&gt;Specifically for Vulkan, I didn't see anything major in the release notes.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/simracerman"&gt; /u/simracerman &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1le0mpb/llamacpp_is_much_faster_any_changes_made_recently/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1le0mpb/llamacpp_is_much_faster_any_changes_made_recently/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1le0mpb/llamacpp_is_much_faster_any_changes_made_recently/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-17T22:17:52+00:00</published>
  </entry>
  <entry>
    <id>t3_1lej1z2</id>
    <title>Hugging Face Sheets - experiment with 1.5K open LLMs on data you care about</title>
    <updated>2025-06-18T14:49:16+00:00</updated>
    <author>
      <name>/u/dvilasuero</name>
      <uri>https://old.reddit.com/user/dvilasuero</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lej1z2/hugging_face_sheets_experiment_with_15k_open_llms/"&gt; &lt;img alt="Hugging Face Sheets - experiment with 1.5K open LLMs on data you care about" src="https://external-preview.redd.it/OWhnczl0czI3cDdmMbW9BBj7Ryw9x5mw-FdJgsMiyoCrCN12S1yIw2gj5bap.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=aea3a17e2d4293a184e92289dd98ff806adedf2d" title="Hugging Face Sheets - experiment with 1.5K open LLMs on data you care about" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hi!&lt;/p&gt; &lt;p&gt;We've built this app as a playground of open LLMs for unstructured datasets. &lt;/p&gt; &lt;p&gt;It might be interesting to this community. It's powered by HF Inference Providers and could be useful for playing and finding the right open models for your use case, without downloading them or running code.&lt;/p&gt; &lt;p&gt;I'd love to hear your ideas.&lt;/p&gt; &lt;p&gt;You can try it out here:&lt;br /&gt; &lt;a href="https://huggingface.co/spaces/aisheets/sheets"&gt;https://huggingface.co/spaces/aisheets/sheets&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Available models:&lt;br /&gt; &lt;a href="https://huggingface.co/models?inference_provider=featherless-ai,together,hf-inference,sambanova,cohere,cerebras,fireworks-ai,groq,hyperbolic,nebius,novita&amp;amp;sort=trending"&gt;https://huggingface.co/models?inference_provider=featherless-ai,together,hf-inference,sambanova,cohere,cerebras,fireworks-ai,groq,hyperbolic,nebius,novita&amp;amp;sort=trending&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/dvilasuero"&gt; /u/dvilasuero &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://v.redd.it/w0j5vts27p7f1"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lej1z2/hugging_face_sheets_experiment_with_15k_open_llms/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1lej1z2/hugging_face_sheets_experiment_with_15k_open_llms/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-18T14:49:16+00:00</published>
  </entry>
  <entry>
    <id>t3_1leea24</id>
    <title>MiniMax-M1</title>
    <updated>2025-06-18T11:06:41+00:00</updated>
    <author>
      <name>/u/David-Kunz</name>
      <uri>https://old.reddit.com/user/David-Kunz</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1leea24/minimaxm1/"&gt; &lt;img alt="MiniMax-M1" src="https://external-preview.redd.it/oMQEZmVHLMDxK1KRt9PeRYnQDqbulLVqufYW6GyaZ_E.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=7e03a77037995d5532bd94e47fb40d5cd61b33f6" title="MiniMax-M1" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/David-Kunz"&gt; /u/David-Kunz &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://github.com/MiniMax-AI/MiniMax-M1"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1leea24/minimaxm1/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1leea24/minimaxm1/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-18T11:06:41+00:00</published>
  </entry>
  <entry>
    <id>t3_1lepjc5</id>
    <title>Mobile Phones are becoming better at running AI locally on the device.</title>
    <updated>2025-06-18T19:02:35+00:00</updated>
    <author>
      <name>/u/Henrie_the_dreamer</name>
      <uri>https://old.reddit.com/user/Henrie_the_dreamer</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lepjc5/mobile_phones_are_becoming_better_at_running_ai/"&gt; &lt;img alt="Mobile Phones are becoming better at running AI locally on the device." src="https://external-preview.redd.it/bssrhhUFkv6YYPmNcbuJIt4gLvIfF5uq2fTh65BCaWI.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=2764476115f204e3b179924d64c1d7e63030de16" title="Mobile Phones are becoming better at running AI locally on the device." /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;&lt;a href="https://preview.redd.it/tvgjdqmqiq7f1.png?width=1393&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=78bd43352e644ef4a02073cba83069a5bed72c48"&gt;https://preview.redd.it/tvgjdqmqiq7f1.png?width=1393&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=78bd43352e644ef4a02073cba83069a5bed72c48&lt;/a&gt;&lt;/p&gt; &lt;p&gt;We aggregated the tokens/second on various devices that use apps built with Cactus&lt;/p&gt; &lt;ul&gt; &lt;li&gt;1B - 4B models at INT4 run quite fast (we shipped some improvements though).&lt;/li&gt; &lt;li&gt;You can see the full list on our GitHub &lt;a href="https://github.com/cactus-compute/cactus"&gt;https://github.com/cactus-compute/cactus&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;You might be wondering if these models aren’t too small to get meaningful results, however:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Beyond coding and large-scale enterprise projects that involves reasoning over massive contexts, these models are overkill. &lt;/li&gt; &lt;li&gt;Most products are fine with GPT 4.1 actually, users working on embedding even go for much smaller models, Gemma is great.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/ow1n6jbxgq7f1.png?width=1200&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=7699d15dc26eae73165c1455af491dd7ecddc19b"&gt;Gemma 3n 4B is very competitive!&lt;/a&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;1-4B models are perfect for on-device problems like automatic message/call handling, email summary, gallery search, photo editing, text retrieval, reminder/calendar management, phone settings control, text-to-speech, realtime translation, quick Q/As and other personal problems&lt;/li&gt; &lt;li&gt;Even Apple’s foundation framework and Google AI Edge products do not exceed 3B either.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;You might also be thinking “yes privacy might be a use case, but is API cost really a problem”, well its not for B2B products and …but its nuanced.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;For &lt;strong&gt;consumer&lt;/strong&gt; &lt;strong&gt;products&lt;/strong&gt; with &lt;strong&gt;100s of millions of users&lt;/strong&gt; and &lt;strong&gt;&amp;lt;= 3B in revenue&lt;/strong&gt;, (Pinterest, Dropbox, Telegram, Duolingo, Blinklist, Audible, ), covering the cost for 500m users is infeasible, makes more sense to offload the costs to the users via a premium package or deploying in-house versions.&lt;/li&gt; &lt;li&gt;Well, wouldn’t they maximise profits and reduce operational overhead by letting the users run the AI locally?&lt;/li&gt; &lt;li&gt;In fact, I would argue that Cursor is becoming too expensive for non-corporate users, and could benefit by using a local model for simple tasks.&lt;/li&gt; &lt;li&gt;The future of personal AI is heading towards realtime live models like Project Astra, Gemini Live, ChatGPT Live Preview etc, which all need very low latency for good user experience.&lt;/li&gt; &lt;li&gt;I mean Zoom/Meets/Teams calls still face latency issues, and we see this glitch in these live streaming models.&lt;/li&gt; &lt;li&gt;We created a low-latency live AI system that runs locally on device with Cactus, watch demo here &lt;a href="https://www.linkedin.com/feed/update/urn:li:activity:7334225731243139072"&gt;https://www.linkedin.com/feed/update/urn:li:activity:7334225731243139072&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Please share your thoughts here in the comments.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Henrie_the_dreamer"&gt; /u/Henrie_the_dreamer &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lepjc5/mobile_phones_are_becoming_better_at_running_ai/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lepjc5/mobile_phones_are_becoming_better_at_running_ai/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1lepjc5/mobile_phones_are_becoming_better_at_running_ai/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-18T19:02:35+00:00</published>
  </entry>
  <entry>
    <id>t3_1le951x</id>
    <title>GMK X2(AMD Max+ 395 w/128GB) first impressions.</title>
    <updated>2025-06-18T05:28:44+00:00</updated>
    <author>
      <name>/u/fallingdowndizzyvr</name>
      <uri>https://old.reddit.com/user/fallingdowndizzyvr</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I've had a X2 for about a day. These are my first impressions of it including a bunch of numbers comparing it to other GPUs I have.&lt;/p&gt; &lt;p&gt;First, the people who were claiming that you couldn't load a model larger than 64GB because it would need to use 64GB of RAM for the CPU too are wrong. That's simple user error. That is simply not the case.&lt;/p&gt; &lt;p&gt;Update: I'm having big model problems. I can load a big model with ROCm. But when it starts to infer, it dies with some unsupported function error. I think I need ROCm 6.4.1 for Strix Halo support. Vulkan works but there's a Vulkan memory limit of 32GB. At least with the driver I'm using under Windows. More on that down below where I talk about shared memory. ROCm does report the available amount of memory to be 110GB. I don't know how that's going to work out since only 96GB is allocated to the GPU so some of that 110GB belongs to the CPU. There's no 110GB option in the BIOS.&lt;/p&gt; &lt;p&gt;Update #2: I thought of a work around with Vulkan. It isn't pretty but it does the job. I should be able to load models up to 80GB. Here's a 50GB model. It's only a quick run since it's late. I'll do a full run tomorrow.&lt;/p&gt; &lt;p&gt;Update #3: Full run is below and a run for another bigger model. So the workaround for Vulkan works. For Deepseek at that context it maxed out at 77.7GB out of 79.5GB.&lt;/p&gt; &lt;p&gt;Second, the GPU can use 120W. It does that when doing PP. Unfortunately, TG seems to be memory bandwidth limited and when doing that the GPU is at around 89W.&lt;/p&gt; &lt;p&gt;Third, as delivered the BIOS was not capable of allocating more than 64GB to the GPU on my 128GB machine. It needed a BIOS update. GMK should at least send email about that with a link to the correct BIOS to use. I first tried the one linked to on the GMK store page. That updated me to what it claimed was the required one, version 1.04 from 5/12 or later. The BIOS was dated 5/12. That didn't do the job. I still couldn't allocate more than 64GB to the GPU. So I dug around the GMK website and found a link to a different BIOS. It is also version 1.04 but was dated 5/14. That one worked. It took forever to flash compared to the first one and took forever to reboot, it turns out twice. There was no video signal for what felt like a long time, although it was probably only about a minute or so. But it finally showed the GMK logo only to restart again with another wait. The second time it booted back up to Windows. This time I could set the VRAM allocation to 96GB.&lt;/p&gt; &lt;p&gt;Overall, it's as I expected. So far, it's like my M1 Max with 96GB. But with about 3x the PP speed. It strangely uses more than a bit of &amp;quot;shared memory&amp;quot; for the GPU as opposed to the &amp;quot;dedicated memory&amp;quot;. Like GBs worth. Which normally would make me believe it's slowing it down, on this machine though the &amp;quot;shared&amp;quot; and &amp;quot;dedicated&amp;quot; RAM is the same. Although it's probably less efficient to go though the shared stack. I wish there was a way to turn off shared memory for a GPU in Windows. It can be done in Linux.&lt;/p&gt; &lt;p&gt;Update: I think I figured it out. There's always a little shared memory being used but what I see is that there's like 15GB of shared memory being used. It's Vulkan. It seems to top out at a 32GB allocation. Then it starts to leverage shared memory. So even though it's only using 32 out of 96GB of dedicated memory, it starts filling out the shared memory. So that limits the maximum size of the model to 47GB under Vulkan.&lt;/p&gt; &lt;p&gt;Update #2: I did a run using only shared memory. It's 90% the speed of dedicated memory. So that's an option for people who don't want a fixed allocation to the GPU. Just dedicate a small amount to the GPU, it can be as low as 512MB and then use shared memory. A 10% performance penalty is not a bad tradeoff for flexibility.&lt;/p&gt; &lt;p&gt;Here are a bunch of numbers. First for a small LLM that I can fit onto a 3060 12GB. Then successively bigger from there. For the 9B model, I threw in a run for the Max+ using only the CPU.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;9B&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;**Max+** | model | size | params | backend | ngl | mmap | test | t/s | | ------------------------------ | ---------: | ---------: | ---------- | --: | ---: | --------------: | -------------------: | | gemma2 9B Q8_0 | 9.15 GiB | 9.24 B | RPC,Vulkan | 99 | 0 | pp512 | 923.76 ± 2.45 | | gemma2 9B Q8_0 | 9.15 GiB | 9.24 B | RPC,Vulkan | 99 | 0 | tg128 | 21.22 ± 0.03 | | gemma2 9B Q8_0 | 9.15 GiB | 9.24 B | RPC,Vulkan | 99 | 0 | pp512 @ d5000 | 486.25 ± 1.08 | | gemma2 9B Q8_0 | 9.15 GiB | 9.24 B | RPC,Vulkan | 99 | 0 | tg128 @ d5000 | 12.31 ± 0.04 | **M1 Max** | model | size | params | backend | threads | mmap | test | t/s | | ------------------------------ | ---------: | ---------: | ---------- | ------: | ---: | --------------: | -------------------: | | gemma2 9B Q8_0 | 9.15 GiB | 9.24 B | Metal,BLAS,RPC | 8 | 0 | pp512 | 335.93 ± 0.22 | | gemma2 9B Q8_0 | 9.15 GiB | 9.24 B | Metal,BLAS,RPC | 8 | 0 | tg128 | 28.08 ± 0.02 | | gemma2 9B Q8_0 | 9.15 GiB | 9.24 B | Metal,BLAS,RPC | 8 | 0 | pp512 @ d5000 | 262.21 ± 0.15 | | gemma2 9B Q8_0 | 9.15 GiB | 9.24 B | Metal,BLAS,RPC | 8 | 0 | tg128 @ d5000 | 20.07 ± 0.01 | **3060** | model | size | params | backend | ngl | mmap | test | t/s | | ------------------------------ | ---------: | ---------: | ---------- | --: | ---: | --------------: | -------------------: | | gemma2 9B Q8_0 | 9.15 GiB | 9.24 B | Vulkan,RPC | 999 | 0 | pp512 | 951.23 ± 1.50 | | gemma2 9B Q8_0 | 9.15 GiB | 9.24 B | Vulkan,RPC | 999 | 0 | tg128 | 26.40 ± 0.12 | | gemma2 9B Q8_0 | 9.15 GiB | 9.24 B | Vulkan,RPC | 999 | 0 | pp512 @ d5000 | 545.49 ± 9.61 | | gemma2 9B Q8_0 | 9.15 GiB | 9.24 B | Vulkan,RPC | 999 | 0 | tg128 @ d5000 | 19.94 ± 0.01 | **7900xtx** | model | size | params | backend | ngl | mmap | test | t/s | | ------------------------------ | ---------: | ---------: | ---------- | --: | ---: | --------------: | -------------------: | | gemma2 9B Q8_0 | 9.15 GiB | 9.24 B | Vulkan,RPC | 999 | 0 | pp512 | 2164.10 ± 3.98 | | gemma2 9B Q8_0 | 9.15 GiB | 9.24 B | Vulkan,RPC | 999 | 0 | tg128 | 61.94 ± 0.20 | | gemma2 9B Q8_0 | 9.15 GiB | 9.24 B | Vulkan,RPC | 999 | 0 | pp512 @ d5000 | 1197.40 ± 4.75 | | gemma2 9B Q8_0 | 9.15 GiB | 9.24 B | Vulkan,RPC | 999 | 0 | tg128 @ d5000 | 44.51 ± 0.08 | **Max+ CPU** | model | size | params | backend | ngl | mmap | test | t/s | | ------------------------------ | ---------: | ---------: | ---------- | --: | ---: | --------------: | -------------------: | | gemma2 9B Q8_0 | 9.15 GiB | 9.24 B | RPC,Vulkan | 0 | 0 | pp512 | 438.57 ± 3.88 | | gemma2 9B Q8_0 | 9.15 GiB | 9.24 B | RPC,Vulkan | 0 | 0 | tg128 | 6.99 ± 0.01 | | gemma2 9B Q8_0 | 9.15 GiB | 9.24 B | RPC,Vulkan | 0 | 0 | pp512 @ d5000 | 292.43 ± 0.30 | | gemma2 9B Q8_0 | 9.15 GiB | 9.24 B | RPC,Vulkan | 0 | 0 | tg128 @ d5000 | 5.82 ± 0.01 | **Max+ workaround** | model | size | params | backend | ngl | mmap | test | t/s | | ------------------------------ | ---------: | ---------: | ---------- | --: | ---: | --------------: | -------------------: | | gemma2 9B Q8_0 | 9.15 GiB | 9.24 B | RPC,Vulkan | 999 | 0 | pp512 | 851.17 ± 0.99 | | gemma2 9B Q8_0 | 9.15 GiB | 9.24 B | RPC,Vulkan | 999 | 0 | tg128 | 19.90 ± 0.16 | | gemma2 9B Q8_0 | 9.15 GiB | 9.24 B | RPC,Vulkan | 999 | 0 | pp512 @ d5000 | 459.69 ± 0.87 | | gemma2 9B Q8_0 | 9.15 GiB | 9.24 B | RPC,Vulkan | 999 | 0 | tg128 @ d5000 | 11.10 ± 0.04 | &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;27B Q5&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;**Max+** | model | size | params | backend | ngl | mmap | test | t/s | | ------------------------------ | ---------: | ---------: | ---------- | --: | ---: | --------------: | -------------------: | | gemma2 27B Q5_K - Medium | 18.07 GiB | 27.23 B | RPC,Vulkan | 99 | 0 | pp512 | 129.93 ± 0.08 | | gemma2 27B Q5_K - Medium | 18.07 GiB | 27.23 B | RPC,Vulkan | 99 | 0 | tg128 | 10.38 ± 0.01 | | gemma2 27B Q5_K - Medium | 18.07 GiB | 27.23 B | RPC,Vulkan | 99 | 0 | pp512 @ d10000 | 97.25 ± 0.04 | | gemma2 27B Q5_K - Medium | 18.07 GiB | 27.23 B | RPC,Vulkan | 99 | 0 | tg128 @ d10000 | 4.70 ± 0.01 | **M1 Max** | model | size | params | backend | threads | mmap | test | t/s | | ------------------------------ | ---------: | ---------: | ---------- | ------: | ---: | --------------: | -------------------: | | gemma2 27B Q5_K - Medium | 18.07 GiB | 27.23 B | Metal,BLAS,RPC | 8 | 0 | pp512 | 79.02 ± 0.02 | | gemma2 27B Q5_K - Medium | 18.07 GiB | 27.23 B | Metal,BLAS,RPC | 8 | 0 | tg128 | 10.15 ± 0.00 | | gemma2 27B Q5_K - Medium | 18.07 GiB | 27.23 B | Metal,BLAS,RPC | 8 | 0 | pp512 @ d10000 | 67.11 ± 0.04 | | gemma2 27B Q5_K - Medium | 18.07 GiB | 27.23 B | Metal,BLAS,RPC | 8 | 0 | tg128 @ d10000 | 7.39 ± 0.00 | **7900xtx** | model | size | params | backend | ngl | mmap | test | t/s | | ------------------------------ | ---------: | ---------: | ---------- | --: | ---: | --------------: | -------------------: | | gemma2 27B Q5_K - Medium | 18.07 GiB | 27.23 B | Vulkan,RPC | 999 | 0 | pp512 | 342.95 ± 0.13 | | gemma2 27B Q5_K - Medium | 18.07 GiB | 27.23 B | Vulkan,RPC | 999 | 0 | tg128 | 35.80 ± 0.01 | | gemma2 27B Q5_K - Medium | 18.07 GiB | 27.23 B | Vulkan,RPC | 999 | 0 | pp512 @ d10000 | 244.69 ± 1.99 | | gemma2 27B Q5_K - Medium | 18.07 GiB | 27.23 B | Vulkan,RPC | 999 | 0 | tg128 @ d10000 | 19.03 ± 0.05 | &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;27B Q8&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;**Max+** | model | size | params | backend | ngl | mmap | test | t/s | | ------------------------------ | ---------: | ---------: | ---------- | --: | ---: | --------------: | -------------------: | | gemma2 27B Q8_0 | 26.94 GiB | 27.23 B | RPC,Vulkan | 99 | 0 | pp512 | 318.41 ± 0.71 | | gemma2 27B Q8_0 | 26.94 GiB | 27.23 B | RPC,Vulkan | 99 | 0 | tg128 | 7.61 ± 0.00 | | gemma2 27B Q8_0 | 26.94 GiB | 27.23 B | RPC,Vulkan | 99 | 0 | pp512 @ d10000 | 175.32 ± 0.08 | | gemma2 27B Q8_0 | 26.94 GiB | 27.23 B | RPC,Vulkan | 99 | 0 | tg128 @ d10000 | 3.97 ± 0.01 | **M1 Max** | model | size | params | backend | threads | mmap | test | t/s | | ------------------------------ | ---------: | ---------: | ---------- | ------: | ---: | --------------: | -------------------: | | gemma2 27B Q8_0 | 26.94 GiB | 27.23 B | Metal,BLAS,RPC | 8 | 0 | pp512 | 90.87 ± 0.24 | | gemma2 27B Q8_0 | 26.94 GiB | 27.23 B | Metal,BLAS,RPC | 8 | 0 | tg128 | 11.00 ± 0.00 | **7900xtx + 3060** | model | size | params | backend | ngl | mmap | test | t/s | | ------------------------------ | ---------: | ---------: | ---------- | --: | ---: | --------------: | -------------------: | | gemma2 27B Q8_0 | 26.94 GiB | 27.23 B | Vulkan,RPC | 999 | 0 | pp512 | 493.75 ± 0.98 | | gemma2 27B Q8_0 | 26.94 GiB | 27.23 B | Vulkan,RPC | 999 | 0 | tg128 | 16.09 ± 0.02 | | gemma2 27B Q8_0 | 26.94 GiB | 27.23 B | Vulkan,RPC | 999 | 0 | pp512 @ d10000 | 269.98 ± 5.03 | | gemma2 27B Q8_0 | 26.94 GiB | 27.23 B | Vulkan,RPC | 999 | 0 | tg128 @ d10000 | 10.49 ± 0.02 | &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;32B&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;**Max+** | model | size | params | backend | ngl | mmap | test | t/s | | ------------------------------ | ---------: | ---------: | ---------- | --: | ---: | --------------: | -------------------: | | qwen2 32B Q8_0 | 32.42 GiB | 32.76 B | RPC,Vulkan | 99 | 0 | pp512 | 231.05 ± 0.73 | | qwen2 32B Q8_0 | 32.42 GiB | 32.76 B | RPC,Vulkan | 99 | 0 | tg128 | 6.44 ± 0.00 | | qwen2 32B Q8_0 | 32.42 GiB | 32.76 B | RPC,Vulkan | 99 | 0 | pp512 @ d10000 | 84.68 ± 0.26 | | qwen2 32B Q8_0 | 32.42 GiB | 32.76 B | RPC,Vulkan | 99 | 0 | tg128 @ d10000 | 4.62 ± 0.01 | **7900xtx + 3060 + 2070** | model | size | params | backend | ngl | mmap | test | t/s | | ------------------------------ | ---------: | ---------: | ---------- | --: | ---: | --------------: | -------------------: | | qwen2 32B Q8_0 | 32.42 GiB | 32.76 B | RPC,Vulkan | 999 | 0 | pp512 | 342.35 ± 17.21 | | qwen2 32B Q8_0 | 32.42 GiB | 32.76 B | RPC,Vulkan | 999 | 0 | tg128 | 11.52 ± 0.18 | | qwen2 32B Q8_0 | 32.42 GiB | 32.76 B | RPC,Vulkan | 999 | 0 | pp512 @ d10000 | 213.81 ± 3.92 | | qwen2 32B Q8_0 | 32.42 GiB | 32.76 B | RPC,Vulkan | 999 | 0 | tg128 @ d10000 | 8.27 ± 0.02 | &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Moe 100B and DP 236B&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;**Max+ workaround** | model | size | params | backend | ngl | mmap | test | t/s | | ------------------------------ | ---------: | ---------: | ---------- | --: | ---: | --------------: | -------------------: | | llama4 17Bx16E (Scout) Q3_K - Medium | 49.47 GiB | 107.77 B | RPC,Vulkan | 999 | 0 | pp512 | 129.15 ± 2.87 | | llama4 17Bx16E (Scout) Q3_K - Medium | 49.47 GiB | 107.77 B | RPC,Vulkan | 999 | 0 | tg128 | 20.09 ± 0.03 | | llama4 17Bx16E (Scout) Q3_K - Medium | 49.47 GiB | 107.77 B | RPC,Vulkan | 999 | 0 | pp512 @ d10000 | 75.32 ± 4.54 | | llama4 17Bx16E (Scout) Q3_K - Medium | 49.47 GiB | 107.77 B | RPC,Vulkan | 999 | 0 | tg128 @ d10000 | 10.68 ± 0.04 | | model | size | params | backend | ngl | mmap | test | t/s | | ------------------------------ | ---------: | ---------: | ---------- | --: | ---: | --------------: | -------------------: | | deepseek2 236B IQ2_XS - 2.3125 bpw | 63.99 GiB | 235.74 B | RPC,Vulkan | 999 | 0 | pp512 | 26.69 ± 0.83 | | deepseek2 236B IQ2_XS - 2.3125 bpw | 63.99 GiB | 235.74 B | RPC,Vulkan | 999 | 0 | tg128 | 12.82 ± 0.02 | | deepseek2 236B IQ2_XS - 2.3125 bpw | 63.99 GiB | 235.74 B | RPC,Vulkan | 999 | 0 | pp512 @ d2000 | 20.66 ± 0.39 | | deepseek2 236B IQ2_XS - 2.3125 bpw | 63.99 GiB | 235.74 B | RPC,Vulkan | 999 | 0 | tg128 @ d2000 | 2.68 ± 0.04 | &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/fallingdowndizzyvr"&gt; /u/fallingdowndizzyvr &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1le951x/gmk_x2amd_max_395_w128gb_first_impressions/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1le951x/gmk_x2amd_max_395_w128gb_first_impressions/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1le951x/gmk_x2amd_max_395_w128gb_first_impressions/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-18T05:28:44+00:00</published>
  </entry>
  <entry>
    <id>t3_1lecpcr</id>
    <title>NVIDIA B300 cut all INT8 and FP64 performance???</title>
    <updated>2025-06-18T09:27:17+00:00</updated>
    <author>
      <name>/u/Mindless_Pain1860</name>
      <uri>https://old.reddit.com/user/Mindless_Pain1860</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lecpcr/nvidia_b300_cut_all_int8_and_fp64_performance/"&gt; &lt;img alt="NVIDIA B300 cut all INT8 and FP64 performance???" src="https://preview.redd.it/cekoaeehmn7f1.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=2334c9b7ee829fa01a3d12ddcf78fd5d800909f0" title="NVIDIA B300 cut all INT8 and FP64 performance???" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;&lt;a href="https://www.nvidia.com/en-us/data-center/hgx/"&gt;https://www.nvidia.com/en-us/data-center/hgx/&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Mindless_Pain1860"&gt; /u/Mindless_Pain1860 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://i.redd.it/cekoaeehmn7f1.png"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lecpcr/nvidia_b300_cut_all_int8_and_fp64_performance/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1lecpcr/nvidia_b300_cut_all_int8_and_fp64_performance/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-18T09:27:17+00:00</published>
  </entry>
  <entry>
    <id>t3_1leq843</id>
    <title>The Bizarre Limitations of Apple's Foundation Models Framework</title>
    <updated>2025-06-18T19:29:31+00:00</updated>
    <author>
      <name>/u/SandBlaster2000AD</name>
      <uri>https://old.reddit.com/user/SandBlaster2000AD</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Last week Apple announced some great new APIs for their on-device foundation models in OS 26. Devs have been experimenting with it for over a week now, and the local LLM is surprisingly capable for only a 3B model w/2-bit quantization. It's also very power efficient because it leverages the ANE. You can try it out for yourself if you have the current developer OS releases as a &lt;a href="https://github.com/PallavAg/Apple-Intelligence-Chat"&gt;chat interface&lt;/a&gt; or using &lt;a href="https://developer.apple.com/documentation/foundationmodels/generate-dynamic-game-content-with-guided-generation-and-tools"&gt;Apple's game dialog demo&lt;/a&gt;. Unfortunately, people are quickly finding that artificial restrictions are limiting the utility of the framework (at least for now).&lt;/p&gt; &lt;p&gt;The first issue most devs will notice are the overly aggressive guardrails. Just take a look at the posts over on the &lt;a href="https://developer.apple.com/forums/topics/machine-learning-and-ai/machine-learning-and-ai-foundation-models"&gt;developer forums&lt;/a&gt;. Everything from news summarization to apps about fishing and camping are blocked. All but the most bland dialog in the Dream Coffee demo is also censored - just try asking &amp;quot;Can I get a polonium latte for my robot?&amp;quot;. You can't even work around the guardrails through clever prompting because the API call itself returns an error.&lt;/p&gt; &lt;p&gt;There are also rate limits for certain uses, so no batch processing or frequent queries. The excuse here might be power savings on mobile, but the only comparable workaround is to bundle another open-weight model - which will totally nuke the battery anyway.&lt;/p&gt; &lt;p&gt;Lastly, you cannot really build an app around any Apple Intelligence features because the App Store ecosystem does not allow publishers to restrict availability to supported devices. Apple will tell you that you need a fallback for older devices, in case local models are not available. But that kind of defeats the purpose - if I need to bundle Mistral or Qwen with my app &amp;quot;just in case&amp;quot;, then I might as well not use the Foundation Models Framework at all.&lt;/p&gt; &lt;p&gt;I really hope that these issues get resolved during the OS 26 beta cycle. There is a ton of potential here for local AI apps, and I'd love to see it take off!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/SandBlaster2000AD"&gt; /u/SandBlaster2000AD &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1leq843/the_bizarre_limitations_of_apples_foundation/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1leq843/the_bizarre_limitations_of_apples_foundation/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1leq843/the_bizarre_limitations_of_apples_foundation/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-18T19:29:31+00:00</published>
  </entry>
  <entry>
    <id>t3_1lehbra</id>
    <title>Built memX: a shared memory backend for LLM agents (demo + open-source code)</title>
    <updated>2025-06-18T13:37:19+00:00</updated>
    <author>
      <name>/u/Temporary-Tap-7323</name>
      <uri>https://old.reddit.com/user/Temporary-Tap-7323</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lehbra/built_memx_a_shared_memory_backend_for_llm_agents/"&gt; &lt;img alt="Built memX: a shared memory backend for LLM agents (demo + open-source code)" src="https://external-preview.redd.it/bWpmbGR5djV2bzdmMYCyFtIdy85G-V-pyC1NhTykFPs5rMNi1ya3S7fCsS5U.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=16d6b58da2a98255f6e48827413597a42a678592" title="Built memX: a shared memory backend for LLM agents (demo + open-source code)" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hey everyone — I built this over the weekend and wanted to share:&lt;/p&gt; &lt;p&gt;🔗 &lt;a href="https://github.com/MehulG/memX"&gt;https://github.com/MehulG/memX&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;memX&lt;/strong&gt; is a shared memory layer for LLM agents — kind of like Redis, but with real-time sync, pub/sub, schema validation, and access control.&lt;/p&gt; &lt;p&gt;Instead of having agents pass messages or follow a fixed pipeline, they just read and write to shared memory keys. It’s like a collaborative whiteboard where agents evolve context together.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Key features:&lt;/strong&gt; - Real-time pub/sub - Per-key JSON schema validation - API key-based ACLs - Python SDK&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Temporary-Tap-7323"&gt; /u/Temporary-Tap-7323 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://v.redd.it/ibq16xv5vo7f1"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lehbra/built_memx_a_shared_memory_backend_for_llm_agents/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1lehbra/built_memx_a_shared_memory_backend_for_llm_agents/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-18T13:37:19+00:00</published>
  </entry>
  <entry>
    <id>t3_1led23c</id>
    <title>Local AI for a small/median accounting firm - € Buget of 10k-25k</title>
    <updated>2025-06-18T09:51:00+00:00</updated>
    <author>
      <name>/u/AFruitShopOwner</name>
      <uri>https://old.reddit.com/user/AFruitShopOwner</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Our medium-sized &lt;strong&gt;accounting firm&lt;/strong&gt; (around 100 people) in the &lt;strong&gt;Netherlands&lt;/strong&gt; is looking to set up a local AI system, I'm hoping to tap into your collective wisdom for some recommendations. The &lt;strong&gt;budget&lt;/strong&gt; is roughly &lt;strong&gt;€10k-€25k.&lt;/strong&gt; This is purely for the hardware. I'll be able to build the system myself. I'll also handle the software side. I don't have a lot of experience actually running local models but I do spent a lot of my free time watching videos about it.&lt;/p&gt; &lt;p&gt;We're going local for privacy. Keeping sensitive client data in-house is paramount. My boss does not want anything going to the cloud.&lt;/p&gt; &lt;p&gt;Some more info about use cases what I had in mind:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;RAG system&lt;/strong&gt; for professional questions about Dutch accounting standards and laws. (We already have an extensive librairy of documents, neatly orderd)&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Analyzing and summarizing&lt;/strong&gt; various files like contracts, invoices, emails, excel sheets, word files and pdfs.&lt;/li&gt; &lt;li&gt;Developing &lt;strong&gt;AI agents&lt;/strong&gt; for more advanced task automation.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Coding assistance&lt;/strong&gt; for our data analyst (mainly in Python).&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;I'm looking for broad advice on:&lt;/p&gt; &lt;p&gt;Hardware&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Go with a &lt;strong&gt;CPU&lt;/strong&gt; based or &lt;strong&gt;GPU based&lt;/strong&gt; set up?&lt;/li&gt; &lt;li&gt;If I go with GPU's should I go with a couple of consumer GPU's like 3090/4090's or maybe a single Pro 6000? Why pick one over the other (cost obviously)&lt;/li&gt; &lt;/ul&gt; &lt;h1&gt;Software&lt;/h1&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Operating System:&lt;/strong&gt; Is Linux still the go-to for optimal AI performance and compatibility with frameworks?&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Local AI Model (LLMs):&lt;/strong&gt; What LLMs are generally recommended for a mix of RAG, summarization, agentic workflows, and coding? Or should I consider running multiple models? I've read some positive reviews about qwen3 235b. Can I even run a model like that with reasonable tps within this budget? Probably not the full 235b variant?&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Inference Software:&lt;/strong&gt; What are the best tools for running open-source LLMs locally, from user-friendly options for beginners to high-performance frameworks for scaling?&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Supporting Software:&lt;/strong&gt; What recommendations do you have for open-source tools or frameworks for building RAG systems (vector databases, RAG frameworks) and AI agents?&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Any general insights, experiences, or project architectural advice would be greatly appreciated!&lt;/p&gt; &lt;p&gt;Thanks in advance for your input!&lt;/p&gt; &lt;p&gt;&lt;strong&gt;EDIT:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Wow, thank you all for the incredible amount of feedback and advice! &lt;/p&gt; &lt;p&gt;I want to clarify a couple of things that came up in the comments:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;This system will probably only be used by 20 users, with probably no more than 5 using it at the same time.&lt;/li&gt; &lt;li&gt;My boss and our IT team are aware that this is an experimental project. The goal is to build in-house knowledge, and we are prepared for some setbacks along the way. Our company already has the necessary infrastructure for security and data backups.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Thanks again to everyone for the valuable input! It has given me a lot to think about and will be extremely helpful as I move forward with this project.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/AFruitShopOwner"&gt; /u/AFruitShopOwner &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1led23c/local_ai_for_a_smallmedian_accounting_firm_buget/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1led23c/local_ai_for_a_smallmedian_accounting_firm_buget/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1led23c/local_ai_for_a_smallmedian_accounting_firm_buget/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-18T09:51:00+00:00</published>
  </entry>
  <entry>
    <id>t3_1lemmsq</id>
    <title>We took Qwen3 235B A22B from 34 tokens/sec to 54 tokens/sec by switching from llama.cpp with Unsloth dynamic Q4_K_M GGUF to vLLM with INT4 w4a16</title>
    <updated>2025-06-18T17:09:31+00:00</updated>
    <author>
      <name>/u/__JockY__</name>
      <uri>https://old.reddit.com/user/__JockY__</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;System: quad RTX A6000 Epyc. &lt;/p&gt; &lt;p&gt;Originally we were running the Unsloth dynamic GGUFs at UD_Q4_K_M and UD_Q5_K_XL with which we were getting speeds of 34 and 31 tokens/sec, respectively, for small-ish prompts of 1-2k tokens. &lt;/p&gt; &lt;p&gt;A couple of days ago we tried an experiment with another 4-bit quant type: INT 4, specifically w4a16, which is a 4-bit quant that's expanded and run at FP16. Or something. The wizard and witches will know better, forgive my butchering of LLM mechanics. This is the one we used: &lt;code&gt;justinjja/Qwen3-235B-A22B-INT4-W4A16&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;The point is that w4a16 runs in vLLM and is a whopping 20 tokens/sec faster than Q4 in llama.cpp in like-for-like tests (as close as we could get without going crazy). &lt;/p&gt; &lt;p&gt;Does anyone know how w4a16 compares to Q4_K_M in terms of quantization quality? Are these 4-bit quants actually comparing apples to apples? Or are we sacrificing quality for speed? We'll do our own tests, but I'd like to hear opinions from the peanut gallery.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/__JockY__"&gt; /u/__JockY__ &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lemmsq/we_took_qwen3_235b_a22b_from_34_tokenssec_to_54/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lemmsq/we_took_qwen3_235b_a22b_from_34_tokenssec_to_54/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1lemmsq/we_took_qwen3_235b_a22b_from_34_tokenssec_to_54/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-18T17:09:31+00:00</published>
  </entry>
  <entry>
    <id>t3_1lek04t</id>
    <title>Built an open-source DeepThink plugin that brings Gemini 2.5 style advanced reasoning to local models (DeepSeek R1, Qwen3, etc.)</title>
    <updated>2025-06-18T15:26:55+00:00</updated>
    <author>
      <name>/u/asankhs</name>
      <uri>https://old.reddit.com/user/asankhs</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lek04t/built_an_opensource_deepthink_plugin_that_brings/"&gt; &lt;img alt="Built an open-source DeepThink plugin that brings Gemini 2.5 style advanced reasoning to local models (DeepSeek R1, Qwen3, etc.)" src="https://b.thumbs.redditmedia.com/9MeqPAY2NW7ptCMMeXL3V8ULf8znmAvn_poPZJGnM8g.jpg" title="Built an open-source DeepThink plugin that brings Gemini 2.5 style advanced reasoning to local models (DeepSeek R1, Qwen3, etc.)" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hey &lt;a href="/r/LocalLLaMA"&gt;r/LocalLLaMA&lt;/a&gt;!&lt;/p&gt; &lt;p&gt;So Google just dropped their Gemini 2.5 report and there's this really interesting technique called &amp;quot;Deep Think&amp;quot; that got me thinking. Basically, it's a structured reasoning approach where the model generates multiple hypotheses in parallel and critiques them before giving you the final answer. The results are pretty impressive - SOTA on math olympiad problems, competitive coding, and other challenging benchmarks.&lt;/p&gt; &lt;p&gt;I implemented a DeepThink plugin for OptiLLM that works with local models like:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;DeepSeek R1&lt;/li&gt; &lt;li&gt;Qwen3&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The plugin essentially makes your local model &amp;quot;think out loud&amp;quot; by exploring multiple solution paths simultaneously, then converging on the best answer. It's like giving your model an internal debate team.&lt;/p&gt; &lt;h1&gt;How it works&lt;/h1&gt; &lt;p&gt;Instead of the typical single-pass generation, the model:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Generates multiple approaches to the problem in parallel&lt;/li&gt; &lt;li&gt;Evaluates each approach critically&lt;/li&gt; &lt;li&gt;Synthesizes the best elements into a final response&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;This is especially useful for complex reasoning tasks, math problems, coding challenges, etc.&lt;/p&gt; &lt;p&gt;We actually won the 3rd Prize at Cerebras &amp;amp; OpenRouter Qwen 3 Hackathon with this approach, which was pretty cool validation that the technique works well beyond Google's implementation.&lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/5el6xgxhep7f1.png?width=1238&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=d9f4f420191f047573dc5dd7adfbc05c2c175227"&gt;https://preview.redd.it/5el6xgxhep7f1.png?width=1238&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=d9f4f420191f047573dc5dd7adfbc05c2c175227&lt;/a&gt;&lt;/p&gt; &lt;h1&gt;Code &amp;amp; Demo&lt;/h1&gt; &lt;ul&gt; &lt;li&gt;GitHub: &lt;a href="https://github.com/codelion/optillm/tree/main/optillm/plugins/deepthink"&gt;https://github.com/codelion/optillm/tree/main/optillm/plugins/deepthink&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Demo video: &lt;a href="https://www.youtube.com/watch?v=b06kD1oWBA4"&gt;https://www.youtube.com/watch?v=b06kD1oWBA4&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The plugin is ready to use right now if you want to try it out. Would love to get feedback from the community and see what improvements we can make together.&lt;/p&gt; &lt;p&gt;Has anyone else been experimenting with similar reasoning techniques for local models? Would be interested to hear what approaches you've tried.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Edit:&lt;/strong&gt; For those asking about performance impact - yes, it does increase inference time since you're essentially running multiple reasoning passes. But for complex problems where you want the best possible answer, the trade-off is usually worth it.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/asankhs"&gt; /u/asankhs &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lek04t/built_an_opensource_deepthink_plugin_that_brings/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lek04t/built_an_opensource_deepthink_plugin_that_brings/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1lek04t/built_an_opensource_deepthink_plugin_that_brings/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-18T15:26:55+00:00</published>
  </entry>
  <entry>
    <id>t3_1lersrw</id>
    <title>Augmentoolkit 3.0: 7 months of work, MIT License, Specialist AI Training</title>
    <updated>2025-06-18T20:33:11+00:00</updated>
    <author>
      <name>/u/Heralax_Tekran</name>
      <uri>https://old.reddit.com/user/Heralax_Tekran</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lersrw/augmentoolkit_30_7_months_of_work_mit_license/"&gt; &lt;img alt="Augmentoolkit 3.0: 7 months of work, MIT License, Specialist AI Training" src="https://external-preview.redd.it/JPdazJ6jtyR317Uj2SGJFQQZYzaRBapP-lbz0ow2wM8.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=8583a011c64efbc563707ac8996f32baf680fa6e" title="Augmentoolkit 3.0: 7 months of work, MIT License, Specialist AI Training" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;&lt;strong&gt;Over the past year and a half&lt;/strong&gt; I've been working on the problem of &lt;strong&gt;factual finetuning&lt;/strong&gt; -- &lt;strong&gt;training an open-source LLM on new facts&lt;/strong&gt; so that it learns those facts, essentially extending its knowledge cutoff. Now that I've made significant progress on the problem, I just released &lt;strong&gt;Augmentoolkit 3.0&lt;/strong&gt; — an easy-to-use dataset generation and model training tool. Add documents, click a button, and Augmmentoolkit will do everything for you: it'll generate a domain-specific dataset, combine it with a balanced amount of generic data, automatically train a model on it, download it, quantize it, and run it for inference (accessible with a built-in chat interface). The project (and its demo models) are fully open-source. I even trained a model to run inside Augmentoolkit itself, allowing for faster &lt;strong&gt;local dataset generation&lt;/strong&gt;.&lt;/p&gt; &lt;p&gt;This update took more than six months and thousands of dollars to put together, and represents &lt;strong&gt;a complete rewrite and overhaul of the original project.&lt;/strong&gt; It includes 16 prebuilt dataset generation pipelines and the extensively-documented code and conventions to build more. Beyond just factual finetuning, it even &lt;strong&gt;includes an experimental&lt;/strong&gt; &lt;a href="https://github.com/e-p-armstrong/augmentoolkit/blob/master/docs/grpo.md"&gt;&lt;strong&gt;GRPO pipeline&lt;/strong&gt;&lt;/a&gt; that lets you &lt;strong&gt;train a model to do any conceivable task&lt;/strong&gt; by just &lt;strong&gt;writing a prompt to grade that task.&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/jnr3luv5zq7f1.png?width=1952&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=c2aed0b5ba86c0945dc41ea084445744784d42e6"&gt;https://preview.redd.it/jnr3luv5zq7f1.png?width=1952&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=c2aed0b5ba86c0945dc41ea084445744784d42e6&lt;/a&gt;&lt;/p&gt; &lt;h1&gt;The Links&lt;/h1&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://github.com/e-p-armstrong/augmentoolkit"&gt;Project&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=E9TyyZzIMyY&amp;amp;ab_channel=Augmentoolkit"&gt;Train your first model in 13 minutes quickstart tutorial video&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Demo model (what the quickstart produces) &lt;ul&gt; &lt;li&gt;&lt;a href="https://huggingface.co/Heralax/llama-Augmentoolkit-Quickstart-Factual-Demo-Example"&gt;Link&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Dataset and training configs are fully open source. The config is literally the quickstart config; the dataset is&lt;/li&gt; &lt;li&gt;The demo model is an LLM trained on a subset of the US Army Field Manuals -- the best free and open modern source of comprehensive documentation on a well-known field that I have found. This is also because I trained a model on these in the past and so training on them now serves as a good comparison between the power of the current tool compared to its previous version.&lt;/li&gt; &lt;/ul&gt;&lt;/li&gt; &lt;li&gt;Experimental GRPO models &lt;ul&gt; &lt;li&gt;Now that Augmentoolkit includes the ability to grade models for their performance on a task, I naturally wanted to try this out, and on a task that people are familiar with.&lt;/li&gt; &lt;li&gt;I produced two RP models (base: Mistral 7b v0.2) with the intent of maximizing writing style quality and emotion, while minimizing GPT-isms.&lt;/li&gt; &lt;li&gt;One model has thought processes, the other does not. The non-thought-process model came out better for reasons described in the model card.&lt;/li&gt; &lt;li&gt;Non-reasoner &lt;a href="https://huggingface.co/Heralax/llama-gRPo-emotions-nothoughts"&gt;https://huggingface.co/Heralax/llama-gRPo-emotions-nothoughts&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Reasoner &lt;a href="https://huggingface.co/Heralax/llama-gRPo-thoughtprocess"&gt;https://huggingface.co/Heralax/llama-gRPo-thoughtprocess&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h1&gt;The Process to Reproduce&lt;/h1&gt; &lt;ul&gt; &lt;li&gt;Clone &lt;ul&gt; &lt;li&gt;&lt;code&gt;git clone&lt;/code&gt; &lt;a href="https://github.com/e-p-armstrong/augmentoolkit.git"&gt;&lt;code&gt;https://github.com/e-p-armstrong/augmentoolkit.git&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/li&gt; &lt;li&gt;Run Start Script &lt;ul&gt; &lt;li&gt;Local or Online&lt;/li&gt; &lt;li&gt;Mac &lt;ul&gt; &lt;li&gt;&lt;code&gt;bash&lt;/code&gt; &lt;a href="http://macos.sh/"&gt;&lt;code&gt;macos.sh&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;bash local_macos.sh&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/li&gt; &lt;li&gt;Linux &lt;ul&gt; &lt;li&gt;&lt;code&gt;bash&lt;/code&gt; &lt;a href="http://linux.sh/"&gt;&lt;code&gt;linux.sh&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;bash local_linux.sh&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/li&gt; &lt;li&gt;Windows + warning &lt;ul&gt; &lt;li&gt;Use WSL. If you don't want to, you will have to use the CLI instead. Instructions are in the readme in the quickstart page.&lt;/li&gt; &lt;/ul&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/li&gt; &lt;li&gt;Add API keys or use the local model &lt;ul&gt; &lt;li&gt;I trained a 7b model that is purpose-built to run Augmentoolkit pipelines (Apache license). This means that you can probably generate data at a decent speed on your own computer. It will definitely be slower than with an API, but it will be &lt;em&gt;much&lt;/em&gt; better than trying to generate tens of millions of tokens with a local 70b.&lt;/li&gt; &lt;li&gt;There are separate start scripts for local datagen.&lt;/li&gt; &lt;li&gt;You'll probably only be able to get good dataset generation speed on a linux machine even though it does technically run on Mac, since Llama.cpp is MUCH slower than vLLM (which is Linux-only).&lt;/li&gt; &lt;/ul&gt;&lt;/li&gt; &lt;li&gt;Click the &amp;quot;run&amp;quot; Button&lt;/li&gt; &lt;li&gt;Get Your Model &lt;ul&gt; &lt;li&gt;The integrated chat interface will automatically let you chat with it when the training and quanting is finished&lt;/li&gt; &lt;li&gt;The model will also automatically be pushed to Hugging Face (make sure you have enough space!)&lt;/li&gt; &lt;/ul&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h1&gt;Uses&lt;/h1&gt; &lt;p&gt;Besides faster generation times and lower costs, an expert AI that is trained on a domain gains a &amp;quot;big-picture&amp;quot; understanding of the subject that a generalist just won't have. It's the difference between giving a new student a class's full textbook and asking them to write an exam, versus asking a graduate student in that subject to write the exam. The new student probably won't even know where in that book they should look for the information they need, and even if they see the correct context, there's no guarantee that they understands what it means or how it fits into the bigger picture.&lt;/p&gt; &lt;p&gt;Also, trying to build AI apps based on closed-source LLMs released by big labs sucks:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The lack of stable checkpoints under the control of the person running the model, makes the tech unstable and unpredictable to build on.&lt;/li&gt; &lt;li&gt;Capabilities change without warning and models are frequently made worse.&lt;/li&gt; &lt;li&gt;People building with AI have to work around the LLMs they are using (a moving target), rather than make the LLMs they are using fit into their system&lt;/li&gt; &lt;li&gt;Refusals force people deploying models to dance around the stuck-up morality of these models while developing.&lt;/li&gt; &lt;li&gt;Closed-source labs charge obscene prices, doing monopolistic rent collecting and impacting the margins of their customers.&lt;/li&gt; &lt;li&gt;Using closed-source labs is a privacy nightmare, especially now that API providers may be required by law to save and log formerly-private API requests.&lt;/li&gt; &lt;li&gt;Different companies have to all work with the same set of models, which have the same knowledge, the same capabilities, the same opinions, and they all sound more or less the same.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;But current open-source models often either suffer from a severe lack of capability, or are massive enough that they might as well be closed-source for most of the people trying to run them. The proposed solution? Small, efficient, powerful models that achieve superior performance on the things they are being used for (and sacrifice performance in the areas they &lt;em&gt;aren't&lt;/em&gt; being used for) which are trained for their task and are controlled by the companies that use them.&lt;/p&gt; &lt;p&gt;With Augmentoolkit:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;You train your models, decide when those models update, and have full transparency over what went into them.&lt;/li&gt; &lt;li&gt;Capabilities change only when the company wants, and no one is forcing them to make their models worse.&lt;/li&gt; &lt;li&gt;People working with AI can customize the model they are using to function as part of the system they are designing, rather than having to twist their system to match a model.&lt;/li&gt; &lt;li&gt;Since you control the data it is built on, the model is only as restricted as you want it to be.&lt;/li&gt; &lt;li&gt;7 billion parameter models (the standard size Augmentoolkit trains) are so cheap to run it is absurd. They can run on a laptop, even.&lt;/li&gt; &lt;li&gt;Because you control your model, you control your inference, and you control your customers' data.&lt;/li&gt; &lt;li&gt;With your model's capabilities being fully customizable, your AI sounds like &lt;em&gt;your&lt;/em&gt; AI, and has the opinions and capabilities that you want it to have.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Furthermore, the open-source indie finetuning scene has been on life support, largely due to a lack of ability to make data, and the difficulty of getting started with (and getting results with) training, compared to methods like merging. Now that data is far easier to make, and training for specific objectives is much easier to do, and there is a good baseline with training wheels included that makes getting started easy, the hope is that people can iterate on finetunes and the scene can have new life.&lt;/p&gt; &lt;p&gt;Augmentoolkit is taking a bet on an open-source future powered by small, efficient, Specialist Language Models.&lt;/p&gt; &lt;h1&gt;Cool things of note&lt;/h1&gt; &lt;ul&gt; &lt;li&gt;Factually-finetuned models can actually cite what files they are remembering information from, and with a good degree of accuracy at that. This is not exclusive to the domain of RAG anymore.&lt;/li&gt; &lt;li&gt;Augmentoolkit models by default use a custom prompt template because it turns out that making SFT data look more like pretraining data in its structure helps models use their pretraining skills during chat settings. This includes factual recall.&lt;/li&gt; &lt;li&gt;Augmentoolkit was used to create the dataset generation model that runs Augmentoolkit's pipelines. You can find the config used to make the dataset (2.5 gigabytes) in the &lt;code&gt;generation/core_composition/meta_datagen&lt;/code&gt; folder.&lt;/li&gt; &lt;li&gt;There's a pipeline for turning normal SFT data into reasoning SFT data that can give a good cold start to models that you want to give thought processes to. A number of datasets converted using this pipeline &lt;a href="https://huggingface.co/Augmentoolkit"&gt;are available on Hugging Face&lt;/a&gt;, fully open-source.&lt;/li&gt; &lt;li&gt;Augmentoolkit does not just automatically train models on the domain-specific data you generate: to ensure that there is enough data made for the model to 1) generalize and 2) learn the actual capability of conversation, Augmentoolkit will balance your domain-specific data with generic conversational data, ensuring that the LLM becomes smarter while retaining all of the question-answering capabilities imparted by the facts it is being trained on.&lt;/li&gt; &lt;li&gt;If you just want to make data and don't want to automatically train models, there's a config file option for that of course.&lt;/li&gt; &lt;/ul&gt; &lt;h1&gt;Why do all this + Vision&lt;/h1&gt; &lt;p&gt;I believe AI alignment is solved when individuals and orgs can make their AI act as they want it to, rather than having to settle for a one-size-fits-all solution. The moment people can use AI specialized to their domains, is also the moment when AI stops being slightly wrong at everything, and starts being incredibly useful across different fields. Furthermore, we must do everything we can to avoid a specific type of AI-powered future: the AI-powered future where what AI believes and is capable of doing is entirely controlled by a select few. Open source has to survive and thrive for this technology to be used right. As many people as possible must be able to control AI.&lt;/p&gt; &lt;p&gt;I want to stop a slop-pocalypse. I want to stop a future of extortionate rent-collecting by the established labs. I want open-source finetuning, even by individuals, to thrive. I want people to be able to be artists, with data their paintbrush and AI weights their canvas.&lt;/p&gt; &lt;p&gt;Teaching models facts was the first step, and I believe this first step has now been taken. It was probably one of the hardest; best to get it out of the way sooner. After this, I'm going to be making coding expert models for specific languages, and I will also improve the &lt;a href="https://github.com/e-p-armstrong/augmentoolkit/blob/master/docs/grpo.md"&gt;GRPO pipeline&lt;/a&gt;, which allows for models to be trained to do &lt;em&gt;literally anything&lt;/em&gt; better. I encourage you to fork the project so that you can make your own data, so that you can create your own pipelines, and so that you can keep the spirit of open-source finetuning and experimentation alive. I also encourage you to star the project, because I like it when &amp;quot;number go up&amp;quot;.&lt;/p&gt; &lt;p&gt;Huge thanks to Austin Cook and all of Alignment Lab AI for helping me with ideas and with getting this out there. Look out for some cool stuff from them soon, by the way :)&lt;/p&gt; &lt;p&gt;&lt;a href="https://github.com/e-p-armstrong/augmentoolkit"&gt;Happy hacking!&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Heralax_Tekran"&gt; /u/Heralax_Tekran &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lersrw/augmentoolkit_30_7_months_of_work_mit_license/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lersrw/augmentoolkit_30_7_months_of_work_mit_license/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1lersrw/augmentoolkit_30_7_months_of_work_mit_license/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-18T20:33:11+00:00</published>
  </entry>
  <entry>
    <id>t3_1lenf36</id>
    <title>new 72B and 70B models from Arcee</title>
    <updated>2025-06-18T17:39:53+00:00</updated>
    <author>
      <name>/u/jacek2023</name>
      <uri>https://old.reddit.com/user/jacek2023</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;looks like there are some new models from Arcee&lt;/p&gt; &lt;p&gt;&lt;a href="https://huggingface.co/arcee-ai/Virtuoso-Large"&gt;https://huggingface.co/arcee-ai/Virtuoso-Large&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://huggingface.co/arcee-ai/Virtuoso-Large-GGUF"&gt;https://huggingface.co/arcee-ai/Virtuoso-Large-GGUF&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&amp;quot;&lt;strong&gt;Virtuoso-Large (72B)&lt;/strong&gt; is our most powerful and versatile general-purpose model, designed to excel at handling complex and varied tasks across domains. With state-of-the-art performance, it offers unparalleled capability for nuanced understanding, contextual adaptability, and high accuracy.&amp;quot;&lt;/p&gt; &lt;p&gt;&lt;a href="https://huggingface.co/arcee-ai/Arcee-SuperNova-v1"&gt;https://huggingface.co/arcee-ai/Arcee-SuperNova-v1&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://huggingface.co/arcee-ai/Arcee-SuperNova-v1-GGUF"&gt;https://huggingface.co/arcee-ai/Arcee-SuperNova-v1-GGUF&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&amp;quot;&lt;strong&gt;Arcee-SuperNova-v1 (70B)&lt;/strong&gt; is a merged model built from multiple advanced training approaches. At its core is a distilled version of Llama-3.1-405B-Instruct into Llama-3.1-70B-Instruct, using out &lt;a href="https://github.com/arcee-ai/DistillKit"&gt;DistillKit&lt;/a&gt; to preserve instruction-following strengths while reducing size.&amp;quot;&lt;/p&gt; &lt;p&gt;not sure is it related or there will be more:&lt;/p&gt; &lt;p&gt;&lt;a href="https://github.com/ggml-org/llama.cpp/pull/14185"&gt;https://github.com/ggml-org/llama.cpp/pull/14185&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&amp;quot;This adds support for upcoming Arcee model architecture, currently codenamed the Arcee Foundation Model (AFM).&amp;quot;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/jacek2023"&gt; /u/jacek2023 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lenf36/new_72b_and_70b_models_from_arcee/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lenf36/new_72b_and_70b_models_from_arcee/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1lenf36/new_72b_and_70b_models_from_arcee/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-18T17:39:53+00:00</published>
  </entry>
  <entry>
    <id>t3_1leod7d</id>
    <title>OpenAI found features in AI models that correspond to different ‘personas’</title>
    <updated>2025-06-18T18:16:40+00:00</updated>
    <author>
      <name>/u/nightsky541</name>
      <uri>https://old.reddit.com/user/nightsky541</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;&lt;a href="https://openai.com/index/emergent-misalignment/"&gt;https://openai.com/index/emergent-misalignment/&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt;&lt;br /&gt; OpenAI discovered that large language models contain internal &amp;quot;persona&amp;quot; features neural patterns linked to specific behaviours like toxic, helpfulness or sarcasm. By activating or suppressing these, researchers can steer the model’s personality and alignment.&lt;/p&gt; &lt;p&gt;Edit: Replaced with original source.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/nightsky541"&gt; /u/nightsky541 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1leod7d/openai_found_features_in_ai_models_that/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1leod7d/openai_found_features_in_ai_models_that/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1leod7d/openai_found_features_in_ai_models_that/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-18T18:16:40+00:00</published>
  </entry>
  <entry>
    <id>t3_1led0lb</id>
    <title>Google doubled the price of Gemini 2.5 Flash thinking output after GA from 0.15 to 0.30 what</title>
    <updated>2025-06-18T09:48:16+00:00</updated>
    <author>
      <name>/u/NoAd2240</name>
      <uri>https://old.reddit.com/user/NoAd2240</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Sorry the input**&lt;/p&gt; &lt;p&gt;&lt;a href="https://cloud.google.com/vertex-ai/generative-ai/pricing"&gt;https://cloud.google.com/vertex-ai/generative-ai/pricing&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/NoAd2240"&gt; /u/NoAd2240 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1led0lb/google_doubled_the_price_of_gemini_25_flash/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1led0lb/google_doubled_the_price_of_gemini_25_flash/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1led0lb/google_doubled_the_price_of_gemini_25_flash/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-18T09:48:16+00:00</published>
  </entry>
  <entry>
    <id>t3_1leh14g</id>
    <title>Can your favourite local model solve this?</title>
    <updated>2025-06-18T13:24:24+00:00</updated>
    <author>
      <name>/u/MrMrsPotts</name>
      <uri>https://old.reddit.com/user/MrMrsPotts</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1leh14g/can_your_favourite_local_model_solve_this/"&gt; &lt;img alt="Can your favourite local model solve this?" src="https://preview.redd.it/gkjegqtyso7f1.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=93880be720bd03128b1e673976aa49f67626b2f0" title="Can your favourite local model solve this?" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I am interested which, if any, models this relatively simple geometry picture if you simply give it this image.&lt;/p&gt; &lt;p&gt;I don't have a big enough setup to test visual models.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/MrMrsPotts"&gt; /u/MrMrsPotts &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://i.redd.it/gkjegqtyso7f1.png"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1leh14g/can_your_favourite_local_model_solve_this/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1leh14g/can_your_favourite_local_model_solve_this/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-18T13:24:24+00:00</published>
  </entry>
  <entry>
    <id>t3_1lei5mb</id>
    <title>Oops</title>
    <updated>2025-06-18T14:12:39+00:00</updated>
    <author>
      <name>/u/Own-Potential-2308</name>
      <uri>https://old.reddit.com/user/Own-Potential-2308</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lei5mb/oops/"&gt; &lt;img alt="Oops" src="https://preview.redd.it/iv35yrek1p7f1.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=0a1be0e37ffab5a4926e5a5a7a869b2ee3a9c853" title="Oops" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Own-Potential-2308"&gt; /u/Own-Potential-2308 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://i.redd.it/iv35yrek1p7f1.png"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1lei5mb/oops/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1lei5mb/oops/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-06-18T14:12:39+00:00</published>
  </entry>
</feed>
