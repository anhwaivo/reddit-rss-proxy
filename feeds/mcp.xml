<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>/r/mcp/.rss</id>
  <title>Model Context Protocol (MCP)</title>
  <updated>2025-06-26T11:48:57+00:00</updated>
  <link href="https://old.reddit.com/r/mcp/" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <icon>https://www.redditstatic.com/icon.png/</icon>
  <subtitle>The Model Context Protocol is an open standard that enables developers to build secure, two-way connections between their data sources and AI-powered tools</subtitle>
  <entry>
    <id>t3_1lkmwf6</id>
    <title>YAPI Interface MCP Server – A Model Context Protocol server that allows AI development tools like Cursor and Claude Desktop to retrieve detailed YAPI interface information by interface ID.</title>
    <updated>2025-06-26T01:00:11+00:00</updated>
    <author>
      <name>/u/modelcontextprotocol</name>
      <uri>https://old.reddit.com/user/modelcontextprotocol</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/mcp/comments/1lkmwf6/yapi_interface_mcp_server_a_model_context/"&gt; &lt;img alt="YAPI Interface MCP Server – A Model Context Protocol server that allows AI development tools like Cursor and Claude Desktop to retrieve detailed YAPI interface information by interface ID." src="https://external-preview.redd.it/943MZ6bcS0psTEU39_3OOXV4_M_7glUelrFAct5FG_Y.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=edc0c9bb77db20f0f7377b32cb9ffd85b1c2236d" title="YAPI Interface MCP Server – A Model Context Protocol server that allows AI development tools like Cursor and Claude Desktop to retrieve detailed YAPI interface information by interface ID." /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/modelcontextprotocol"&gt; /u/modelcontextprotocol &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://glama.ai/mcp/servers/@Gorvey/yapi-get-interface-mcp"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1lkmwf6/yapi_interface_mcp_server_a_model_context/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1lkmwf6/yapi_interface_mcp_server_a_model_context/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-06-26T01:00:11+00:00</published>
  </entry>
  <entry>
    <id>t3_1lkhsdf</id>
    <title>Advanced Trello MCP Server – An enhanced Model Context Protocol server providing comprehensive integration between Trello and Cursor AI with 40+ tools covering multiple Trello API categories for complete project management.</title>
    <updated>2025-06-25T21:15:09+00:00</updated>
    <author>
      <name>/u/modelcontextprotocol</name>
      <uri>https://old.reddit.com/user/modelcontextprotocol</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/mcp/comments/1lkhsdf/advanced_trello_mcp_server_an_enhanced_model/"&gt; &lt;img alt="Advanced Trello MCP Server – An enhanced Model Context Protocol server providing comprehensive integration between Trello and Cursor AI with 40+ tools covering multiple Trello API categories for complete project management." src="https://external-preview.redd.it/F7ZRpgwr-CboNPkVoay91Fb9CvKw4ZG3CdXhoZfiARM.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=47299b55fbfc2d342940e489d018c47d332fcd37" title="Advanced Trello MCP Server – An enhanced Model Context Protocol server providing comprehensive integration between Trello and Cursor AI with 40+ tools covering multiple Trello API categories for complete project management." /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/modelcontextprotocol"&gt; /u/modelcontextprotocol &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://glama.ai/mcp/servers/@adriangrahldev/advanced-trello-mcp-server"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1lkhsdf/advanced_trello_mcp_server_an_enhanced_model/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1lkhsdf/advanced_trello_mcp_server_an_enhanced_model/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-06-25T21:15:09+00:00</published>
  </entry>
  <entry>
    <id>t3_1lkflb7</id>
    <title>Open-source mcp starter template. For UI libraries, APIs, open-source projects and more</title>
    <updated>2025-06-25T19:49:11+00:00</updated>
    <author>
      <name>/u/mnove30</name>
      <uri>https://old.reddit.com/user/mnove30</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/mcp/comments/1lkflb7/opensource_mcp_starter_template_for_ui_libraries/"&gt; &lt;img alt="Open-source mcp starter template. For UI libraries, APIs, open-source projects and more" src="https://external-preview.redd.it/PBJ5m9jri6jk7j_fEo_IAMPTJ5p-62YWI3KBNbkHlQY.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=e8862be812473599aa605e33175bd98eb49800ef" title="Open-source mcp starter template. For UI libraries, APIs, open-source projects and more" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;hey! check out this &lt;strong&gt;mcp servers starter template&lt;/strong&gt;, specifically designed for UI libraries and component registries. &lt;/p&gt; &lt;p&gt;I built a similar one for a UI library and decided to just turn it into a template. &lt;/p&gt; &lt;p&gt;Some features:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;support for component registry integration&lt;/strong&gt; for UI libraries&lt;/li&gt; &lt;li&gt;&lt;strong&gt;categorized component organization&lt;/strong&gt; with flexible category system&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Schema validation&lt;/strong&gt; with Zod for type safety&lt;/li&gt; &lt;li&gt;&lt;strong&gt;D&lt;/strong&gt;ev tools like inspector&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example implementation&lt;/strong&gt; using a real project URL for demonstration (&lt;a href="https://ui.stackzero.co/docs/mcp"&gt;this project&lt;/a&gt;)&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Extensible architecture&lt;/strong&gt; for custom component types and categories&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Repo: &lt;a href="https://github.com/mnove/mcp-server-starter"&gt;https://github.com/mnove/mcp-server-starter&lt;/a&gt; (MIT License)&lt;/p&gt; &lt;p&gt;Let me know what you think&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/mnove30"&gt; /u/mnove30 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://github.com/mnove/mcp-server-starter"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1lkflb7/opensource_mcp_starter_template_for_ui_libraries/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1lkflb7/opensource_mcp_starter_template_for_ui_libraries/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-06-25T19:49:11+00:00</published>
  </entry>
  <entry>
    <id>t3_1lkbpbt</id>
    <title>Which clients support which parts of the MCP protocol? I created a table.</title>
    <updated>2025-06-25T17:20:39+00:00</updated>
    <author>
      <name>/u/ImaginationInFocus</name>
      <uri>https://old.reddit.com/user/ImaginationInFocus</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;The MCP protocol evolves quickly (latest update was last week) and client support varies. Most only support tools, some support prompts and resources, and have different combos of transport and auth support.&lt;/p&gt; &lt;p&gt;I built a repo to track it all: &lt;a href="https://github.com/tadata-org/mcp-client-compatibility"&gt;https://github.com/tadata-org/mcp-client-compatibility&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Anthropic had a table in their launch docs, but it’s already outdated. This one’s open source so the community can help keep it fresh.&lt;/p&gt; &lt;p&gt;PRs welcome!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/ImaginationInFocus"&gt; /u/ImaginationInFocus &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1lkbpbt/which_clients_support_which_parts_of_the_mcp/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1lkbpbt/which_clients_support_which_parts_of_the_mcp/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1lkbpbt/which_clients_support_which_parts_of_the_mcp/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-06-25T17:20:39+00:00</published>
  </entry>
  <entry>
    <id>t3_1lkr0eo</id>
    <title>Random Number MCP – Production-ready MCP server that provides LLMs with essential random generation abilities, including random integers, floats, choices, shuffling, and cryptographically secure tokens.</title>
    <updated>2025-06-26T04:30:05+00:00</updated>
    <author>
      <name>/u/modelcontextprotocol</name>
      <uri>https://old.reddit.com/user/modelcontextprotocol</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/mcp/comments/1lkr0eo/random_number_mcp_productionready_mcp_server_that/"&gt; &lt;img alt="Random Number MCP – Production-ready MCP server that provides LLMs with essential random generation abilities, including random integers, floats, choices, shuffling, and cryptographically secure tokens." src="https://external-preview.redd.it/fU4yD7_ch58i_s8W_XE9n1H7NFplX4DFvrzkBxBMb6M.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=0f59c75b5a31be51a5814df75e99a78894d3a9ac" title="Random Number MCP – Production-ready MCP server that provides LLMs with essential random generation abilities, including random integers, floats, choices, shuffling, and cryptographically secure tokens." /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/modelcontextprotocol"&gt; /u/modelcontextprotocol &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://glama.ai/mcp/servers/@zazencodes/random-number-mcp"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1lkr0eo/random_number_mcp_productionready_mcp_server_that/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1lkr0eo/random_number_mcp_productionready_mcp_server_that/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-06-26T04:30:05+00:00</published>
  </entry>
  <entry>
    <id>t3_1lkr45s</id>
    <title>Pip install persistent, context-aware memory for Claude Code (and GEMINI)</title>
    <updated>2025-06-26T04:35:59+00:00</updated>
    <author>
      <name>/u/Visible-Celery27</name>
      <uri>https://old.reddit.com/user/Visible-Celery27</uri>
    </author>
    <content type="html">&amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Visible-Celery27"&gt; /u/Visible-Celery27 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="/r/ClaudeAI/comments/1lkqi5b/pip_install_persistent_contextaware_memory_for/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1lkr45s/pip_install_persistent_contextaware_memory_for/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1lkr45s/pip_install_persistent_contextaware_memory_for/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-06-26T04:35:59+00:00</published>
  </entry>
  <entry>
    <id>t3_1lkssay</id>
    <title>O'RLY MCP Server – Generates O'Reilly parody book covers that display directly in Claude Desktop application, allowing users to create custom covers with titles, subtitles, authors, and visual themes.</title>
    <updated>2025-06-26T06:15:06+00:00</updated>
    <author>
      <name>/u/modelcontextprotocol</name>
      <uri>https://old.reddit.com/user/modelcontextprotocol</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/mcp/comments/1lkssay/orly_mcp_server_generates_oreilly_parody_book/"&gt; &lt;img alt="O'RLY MCP Server – Generates O'Reilly parody book covers that display directly in Claude Desktop application, allowing users to create custom covers with titles, subtitles, authors, and visual themes." src="https://external-preview.redd.it/gKLkBDqyMDMes2-_Rhh6lVHZrINlw0XlkmF5N80mWLU.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=6fc087d9129bf4a51f79952da74d01e679adc7d6" title="O'RLY MCP Server – Generates O'Reilly parody book covers that display directly in Claude Desktop application, allowing users to create custom covers with titles, subtitles, authors, and visual themes." /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/modelcontextprotocol"&gt; /u/modelcontextprotocol &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://glama.ai/mcp/servers/@princefishthrower/orly-mcp"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1lkssay/orly_mcp_server_generates_oreilly_parody_book/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1lkssay/orly_mcp_server_generates_oreilly_parody_book/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-06-26T06:15:06+00:00</published>
  </entry>
  <entry>
    <id>t3_1lkt0ze</id>
    <title>MCP Gemini Google Search – Provides Google Search functionality for AI models using Gemini's built-in Grounding with Google Search feature, returning real-time web search results with source citations.</title>
    <updated>2025-06-26T06:30:08+00:00</updated>
    <author>
      <name>/u/modelcontextprotocol</name>
      <uri>https://old.reddit.com/user/modelcontextprotocol</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/mcp/comments/1lkt0ze/mcp_gemini_google_search_provides_google_search/"&gt; &lt;img alt="MCP Gemini Google Search – Provides Google Search functionality for AI models using Gemini's built-in Grounding with Google Search feature, returning real-time web search results with source citations." src="https://external-preview.redd.it/S4-g-PyYjA4a16GCPwPjn0ROiHuzjlEFbF0_1qUJDrs.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=bdde0fb7cf8c71b680b63400a3ee46f2f7b8d0d5" title="MCP Gemini Google Search – Provides Google Search functionality for AI models using Gemini's built-in Grounding with Google Search feature, returning real-time web search results with source citations." /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/modelcontextprotocol"&gt; /u/modelcontextprotocol &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://glama.ai/mcp/servers/@yukukotani/mcp-gemini-google-search"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1lkt0ze/mcp_gemini_google_search_provides_google_search/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1lkt0ze/mcp_gemini_google_search_provides_google_search/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-06-26T06:30:08+00:00</published>
  </entry>
  <entry>
    <id>t3_1lkp1n2</id>
    <title>Many ways to call the mcp tools</title>
    <updated>2025-06-26T02:45:39+00:00</updated>
    <author>
      <name>/u/srtrsb10</name>
      <uri>https://old.reddit.com/user/srtrsb10</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/mcp/comments/1lkp1n2/many_ways_to_call_the_mcp_tools/"&gt; &lt;img alt="Many ways to call the mcp tools" src="https://external-preview.redd.it/pqx2UohcZMjXSNeYZlIe9fboB68I_Lv-XiKWWdW0gGE.gif?width=640&amp;amp;crop=smart&amp;amp;s=2a1753aa631fade42a027d5fb59ed97635c757dd" title="Many ways to call the mcp tools" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/srtrsb10"&gt; /u/srtrsb10 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://generativeai.pub/integrating-tools-with-llms-using-model-context-protocol-mcp-complete-guide-82b12b401c0d"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1lkp1n2/many_ways_to_call_the_mcp_tools/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1lkp1n2/many_ways_to_call_the_mcp_tools/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-06-26T02:45:39+00:00</published>
  </entry>
  <entry>
    <id>t3_1lkthlm</id>
    <title>IT Tools MCP Server – A comprehensive Model Context Protocol server providing access to 70+ IT tools for developers and system administrators, including encoding/decoding, text manipulation, hashing, and network utilities.</title>
    <updated>2025-06-26T07:00:12+00:00</updated>
    <author>
      <name>/u/modelcontextprotocol</name>
      <uri>https://old.reddit.com/user/modelcontextprotocol</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/mcp/comments/1lkthlm/it_tools_mcp_server_a_comprehensive_model_context/"&gt; &lt;img alt="IT Tools MCP Server – A comprehensive Model Context Protocol server providing access to 70+ IT tools for developers and system administrators, including encoding/decoding, text manipulation, hashing, and network utilities." src="https://external-preview.redd.it/CPuBLnlnHkNeOmRE__yqpqWIdgsXVlB-LYYbp-LyScs.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=701c023ca938b136bcaa1f059d59c55776f7e353" title="IT Tools MCP Server – A comprehensive Model Context Protocol server providing access to 70+ IT tools for developers and system administrators, including encoding/decoding, text manipulation, hashing, and network utilities." /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/modelcontextprotocol"&gt; /u/modelcontextprotocol &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://glama.ai/mcp/servers/@wrenchpilot/it-tools-mcp"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1lkthlm/it_tools_mcp_server_a_comprehensive_model_context/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1lkthlm/it_tools_mcp_server_a_comprehensive_model_context/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-06-26T07:00:12+00:00</published>
  </entry>
  <entry>
    <id>t3_1lk5sa5</id>
    <title>[Open Source] Full boilerplate Typescript MCP server for the community - Complete with OAuth 2.1, and every MCP feature (sampling, elicitation, progress) implemented.</title>
    <updated>2025-06-25T13:32:35+00:00</updated>
    <author>
      <name>/u/AffectionateHoney992</name>
      <uri>https://old.reddit.com/user/AffectionateHoney992</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;: Our product is an MCP client, and while building it, we developed multiple MCP servers to test the full range of the spec. Instead of keeping it internal, we've updated it and are open-sourcing the entire thing. Works out the box with the official inspector or any client (in theory, do let us know any issues!) &lt;/p&gt; &lt;p&gt;&lt;strong&gt;GitHub&lt;/strong&gt;: &lt;a href="https://github.com/systempromptio/systemprompt-mcp-server"&gt;https://github.com/systempromptio/systemprompt-mcp-server&lt;/a&gt;&lt;br /&gt; &lt;strong&gt;NPM&lt;/strong&gt;: &lt;code&gt;npx @systemprompt/systemprompt-mcp-server&lt;/code&gt; (instant Docker setup!)&lt;/p&gt; &lt;p&gt;First off, massive thanks to this community. Your contributions to the MCP ecosystem have been incredible. When we started building our MCP client, we quickly realized we needed rock-solid server implementations to test against. What began as an internal tool evolved into something we think can help everyone building in this space.&lt;/p&gt; &lt;p&gt;So we're donating our entire production MCP server to the community. No strings attached, MIT licensed, ready to fork and adapt.&lt;/p&gt; &lt;h1&gt;Why We're Doing This&lt;/h1&gt; &lt;p&gt;Building MCP servers is HARD. OAuth flows, session management, proper error handling - there's a ton of complexity. We spent months getting this right for our client testing, and we figured that everyone here has to solve these same problems...&lt;/p&gt; &lt;p&gt;This isn't some stripped-down demo. This is an adaption of the actual servers we use in production, with all the battle-tested code, security measures, and architectural decisions intact.&lt;/p&gt; &lt;h1&gt;🚀 What Makes This Special&lt;/h1&gt; &lt;p&gt;&lt;strong&gt;This is a HIGH-EFFORT implementation.&lt;/strong&gt; We're talking months of work here:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;✅ &lt;strong&gt;Every MCP Method in the Latest Spec&lt;/strong&gt; - Not just the basics, EVERYTHING&lt;/li&gt; &lt;li&gt;✅ &lt;strong&gt;Working OAuth 2.1 with PKCE&lt;/strong&gt; - Not a mock, actual production OAuth that handles all edge cases&lt;/li&gt; &lt;li&gt;✅ &lt;strong&gt;Full E2E Test Suite&lt;/strong&gt; - Both TypeScript SDK tests AND raw HTTP/SSE tests&lt;/li&gt; &lt;li&gt;✅ &lt;strong&gt;AI Sampling&lt;/strong&gt; - The new human-in-the-loop feature fully implemented&lt;/li&gt; &lt;li&gt;✅ &lt;strong&gt;Real-time Notifications&lt;/strong&gt; - SSE streams, progress updates, the works&lt;/li&gt; &lt;li&gt;✅ &lt;strong&gt;Multi-user Sessions&lt;/strong&gt; - Proper isolation, no auth leaks between users&lt;/li&gt; &lt;li&gt;✅ &lt;strong&gt;Production Security&lt;/strong&gt; - Rate limiting, CORS, JWT auth, input validation&lt;/li&gt; &lt;li&gt;✅ &lt;strong&gt;100% TypeScript&lt;/strong&gt; - Full type safety, strict mode, no any's!&lt;/li&gt; &lt;li&gt;✅ &lt;strong&gt;Comprehensive Error Handling&lt;/strong&gt; - Every edge case we could think of&lt;/li&gt; &lt;/ul&gt; &lt;h1&gt;🛠️ The Technical Goodies&lt;/h1&gt; &lt;p&gt;Here's what I'm most proud of:&lt;/p&gt; &lt;h1&gt;The OAuth Implementation (Fully Working!)&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;// Not just basic OAuth - this is the full MCP spec: // - Dynamic registration support // - PKCE flow for security // - JWT tokens with encrypted credentials // - Automatic refresh handling // - Per-session isolation &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Complete E2E Test Coverage&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;# TypeScript SDK tests npm run test:sdk # Raw HTTP/SSE tests npm run test:http # Concurrent stress tests npm run test:concurrent &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;The Sampling Flow&lt;/h1&gt; &lt;p&gt;This blew my mind when I first understood it:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Server asks client for AI help&lt;/li&gt; &lt;li&gt;Client shows user what it wants to do&lt;/li&gt; &lt;li&gt;User approves/modifies&lt;/li&gt; &lt;li&gt;AI generates content&lt;/li&gt; &lt;li&gt;User reviews final output&lt;/li&gt; &lt;li&gt;Server gets approved content&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;It's like having a human-supervised AI assistant built into the protocol!&lt;/p&gt; &lt;h1&gt;Docker One-Liner&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;# Literally this simple: docker run -it --rm -p 3000:3000 --env-file .env \ node:20-slim npx @systemprompt/systemprompt-mcp-server &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;No installation. No setup. Just works.&lt;/p&gt; &lt;h1&gt;The Architecture&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;Your MCP Client (Claude, etc.) ↓ MCP Protocol Layer ↓ ┌─────────────────────────────┐ │ Session Manager (Multi-user)│ ├─────────────────────────────┤ │ OAuth Handler (Full 2.1) │ ├─────────────────────────────┤ │ Tools + Sampling + Notifs │ ├─────────────────────────────┤ │ Reddit Service Layer │ └─────────────────────────────┘ &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Each component is modular. Want to add GitHub instead of Reddit? Just swap the service layer. The MCP infrastructure stays the same.&lt;/p&gt; &lt;h1&gt;💡 Real Examples That Work&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;// Search Reddit with AI assistance const results = await searchReddit({ query: &amp;quot;best TypeScript practices&amp;quot;, subreddit: &amp;quot;programming&amp;quot;, sort: &amp;quot;top&amp;quot;, timeRange: &amp;quot;month&amp;quot; }); // Get notifications with real-time updates // The client sees progress as it happens! const notifications = await getNotifications({ filter: &amp;quot;mentions&amp;quot;, markAsRead: true }); &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;What We Learned&lt;/h1&gt; &lt;p&gt;Building this taught us SO much about MCP:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;State management is crucial for multi-user support&lt;/li&gt; &lt;li&gt;OAuth in MCP needs careful session isolation&lt;/li&gt; &lt;li&gt;Sampling is incredibly powerful for AI+human workflows&lt;/li&gt; &lt;li&gt;Good error messages save hours of debugging&lt;/li&gt; &lt;/ul&gt; &lt;h1&gt;Try It Right Now&lt;/h1&gt; &lt;p&gt;Seriously, if you have Docker, you can run this in 2 minutes:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Create Reddit app at &lt;a href="https://reddit.com/prefs/apps"&gt;reddit.com/prefs/apps&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Make an &lt;code&gt;.env&lt;/code&gt; file:&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;&amp;#8203;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;REDDIT_CLIENT_ID=your_id REDDIT_CLIENT_SECRET=your_secret JWT_SECRET=any_random_string &lt;/code&gt;&lt;/pre&gt; &lt;ol&gt; &lt;li&gt;&lt;p&gt;Run it:&lt;/p&gt; &lt;p&gt;docker run -it --rm -p 3000:3000 --env-file .env \ node:20-slim npx @systemprompt/systemprompt-mcp-server&lt;/p&gt;&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;We're actively looking for feedback!&lt;/strong&gt; This is v1.0, and we know there's always room to improve:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Found a bug? Please report it!&lt;/li&gt; &lt;li&gt;Have a better pattern? PR it!&lt;/li&gt; &lt;li&gt;Want a feature? Let's discuss!&lt;/li&gt; &lt;li&gt;Building something similar? Let's collaborate!&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Got questions? Hit me up! We're also on &lt;a href="https://discord.com/invite/wkAbSuPWpr"&gt;Discord&lt;/a&gt; if you want to chat about MCP implementation details.&lt;/p&gt; &lt;h1&gt;Interactive blog&lt;/h1&gt; &lt;p&gt;&lt;a href="https://systemprompt.io/mcp-server"&gt;systemprompt demo&lt;/a&gt;&lt;/p&gt; &lt;h1&gt;🙏 Thank You!&lt;/h1&gt; &lt;p&gt;Seriously, thank you to:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Anthropic&lt;/strong&gt; for creating MCP and being so open with the spec&lt;/li&gt; &lt;li&gt;&lt;strong&gt;The MCP community&lt;/strong&gt; for pushing the boundaries&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Early testers&lt;/strong&gt; who found all our bugs 😅&lt;/li&gt; &lt;li&gt;&lt;strong&gt;You&lt;/strong&gt; for reading this far!&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;This is our way of giving back. We hope it helps you build amazing things.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;P.S.&lt;/strong&gt; - If you find this useful, a GitHub star means the world to us! And if you build something cool with it, please share - we love seeing what people create!&lt;/p&gt; &lt;p&gt;&lt;strong&gt;P.S.S&lt;/strong&gt; Yes, AI (helped) me write this post, thank you Opus for the expensive tokens, all writing was personally vetted by myself however! &lt;/p&gt; &lt;p&gt;&lt;strong&gt;Links:&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;GitHub: &lt;a href="https://github.com/systempromptio/systemprompt-mcp-server"&gt;https://github.com/systempromptio/systemprompt-mcp-server&lt;/a&gt;&lt;/li&gt; &lt;li&gt;NPM: &lt;a href="https://www.npmjs.com/package/@systemprompt/systemprompt-mcp-server"&gt;@systemprompt/systemprompt-mcp-server&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Our MCP Client: &lt;a href="https://systemprompt.io"&gt;systemprompt.io&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Discord: &lt;a href="https://discord.com/invite/wkAbSuPWpr"&gt;Join our community&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/AffectionateHoney992"&gt; /u/AffectionateHoney992 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1lk5sa5/open_source_full_boilerplate_typescript_mcp/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1lk5sa5/open_source_full_boilerplate_typescript_mcp/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1lk5sa5/open_source_full_boilerplate_typescript_mcp/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-06-25T13:32:35+00:00</published>
  </entry>
  <entry>
    <id>t3_1lkty5n</id>
    <title>Thunder Client License Manager MCP Server – Provides tools for managing Thunder Client licenses through their API, enabling users to add, retrieve, and remove licenses with simple commands.</title>
    <updated>2025-06-26T07:30:05+00:00</updated>
    <author>
      <name>/u/modelcontextprotocol</name>
      <uri>https://old.reddit.com/user/modelcontextprotocol</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/mcp/comments/1lkty5n/thunder_client_license_manager_mcp_server/"&gt; &lt;img alt="Thunder Client License Manager MCP Server – Provides tools for managing Thunder Client licenses through their API, enabling users to add, retrieve, and remove licenses with simple commands." src="https://external-preview.redd.it/3QBthmPDMFBafpxQc5kYjLka4D_KGxjDwGB_u2dyVhY.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=d3da765c35c173d9a5d8f4e0daffc4f4fa082bf9" title="Thunder Client License Manager MCP Server – Provides tools for managing Thunder Client licenses through their API, enabling users to add, retrieve, and remove licenses with simple commands." /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/modelcontextprotocol"&gt; /u/modelcontextprotocol &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://glama.ai/mcp/servers/@chezsmithy/thunderclient-license-manager-mcp"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1lkty5n/thunder_client_license_manager_mcp_server/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1lkty5n/thunder_client_license_manager_mcp_server/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-06-26T07:30:05+00:00</published>
  </entry>
  <entry>
    <id>t3_1lku08w</id>
    <title>MCP + Google Sheets: A Beginner’s Guide to MCP Servers</title>
    <updated>2025-06-26T07:34:04+00:00</updated>
    <author>
      <name>/u/Kooky_Impression9575</name>
      <uri>https://old.reddit.com/user/Kooky_Impression9575</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/mcp/comments/1lku08w/mcp_google_sheets_a_beginners_guide_to_mcp_servers/"&gt; &lt;img alt="MCP + Google Sheets: A Beginner’s Guide to MCP Servers" src="https://external-preview.redd.it/0KwUuJWuetE2V5zMy5AvoNg9BFVGgAd-835V3ZRozFU.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=91c6d421c82f1956a70def367e14951c18cc3f1b" title="MCP + Google Sheets: A Beginner’s Guide to MCP Servers" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Kooky_Impression9575"&gt; /u/Kooky_Impression9575 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://medium.com/gitconnected/mcp-google-sheets-a-beginners-guide-to-mcp-servers-92757acf8ee7"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1lku08w/mcp_google_sheets_a_beginners_guide_to_mcp_servers/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1lku08w/mcp_google_sheets_a_beginners_guide_to_mcp_servers/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-06-26T07:34:04+00:00</published>
  </entry>
  <entry>
    <id>t3_1lkqghj</id>
    <title>octodet-elasticsearch-mcp – Read/write Elasticsearch mcp server with many tools</title>
    <updated>2025-06-26T04:00:07+00:00</updated>
    <author>
      <name>/u/modelcontextprotocol</name>
      <uri>https://old.reddit.com/user/modelcontextprotocol</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/mcp/comments/1lkqghj/octodetelasticsearchmcp_readwrite_elasticsearch/"&gt; &lt;img alt="octodet-elasticsearch-mcp – Read/write Elasticsearch mcp server with many tools" src="https://external-preview.redd.it/xsA1MEmdFAom9VMPT21-09C0ujEr7MNofvwuWfh-m6U.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=6456e6b2c8b48b0e466ac82da65d5f3b4899abff" title="octodet-elasticsearch-mcp – Read/write Elasticsearch mcp server with many tools" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/modelcontextprotocol"&gt; /u/modelcontextprotocol &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://glama.ai/mcp/servers/@Octodet/elasticsearch-mcp"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1lkqghj/octodetelasticsearchmcp_readwrite_elasticsearch/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1lkqghj/octodetelasticsearchmcp_readwrite_elasticsearch/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-06-26T04:00:07+00:00</published>
  </entry>
  <entry>
    <id>t3_1lkr9vt</id>
    <title>DevBrain – Quickly search indexed indie devs blog posts and articles. It is like chatting with your favourite newsletters (coding, tech, founder). It's kind of like a web search, but specifically tuned for high-quality, developer-curated content. Use case: help implement features faster.</title>
    <updated>2025-06-26T04:45:04+00:00</updated>
    <author>
      <name>/u/modelcontextprotocol</name>
      <uri>https://old.reddit.com/user/modelcontextprotocol</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/mcp/comments/1lkr9vt/devbrain_quickly_search_indexed_indie_devs_blog/"&gt; &lt;img alt="DevBrain – Quickly search indexed indie devs blog posts and articles. It is like chatting with your favourite newsletters (coding, tech, founder). It's kind of like a web search, but specifically tuned for high-quality, developer-curated content. Use case: help implement features faster." src="https://external-preview.redd.it/DKoNyRMKQQACMaKZL86Wd1Azh5awZSMLROGX50E25v0.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=f2fd0a767e79f195fcfd9656b4b6543bff1bbeed" title="DevBrain – Quickly search indexed indie devs blog posts and articles. It is like chatting with your favourite newsletters (coding, tech, founder). It's kind of like a web search, but specifically tuned for high-quality, developer-curated content. Use case: help implement features faster." /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/modelcontextprotocol"&gt; /u/modelcontextprotocol &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://glama.ai/mcp/servers/@mimeCam/mcp-devbrain-stdio"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1lkr9vt/devbrain_quickly_search_indexed_indie_devs_blog/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1lkr9vt/devbrain_quickly_search_indexed_indie_devs_blog/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-06-26T04:45:04+00:00</published>
  </entry>
  <entry>
    <id>t3_1lkv216</id>
    <title>Jira MCP Server – Connects Jira with Claude, enabling users to search issues, view issue details, update issues, add comments, and retrieve project information through natural language commands.</title>
    <updated>2025-06-26T08:45:04+00:00</updated>
    <author>
      <name>/u/modelcontextprotocol</name>
      <uri>https://old.reddit.com/user/modelcontextprotocol</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/mcp/comments/1lkv216/jira_mcp_server_connects_jira_with_claude/"&gt; &lt;img alt="Jira MCP Server – Connects Jira with Claude, enabling users to search issues, view issue details, update issues, add comments, and retrieve project information through natural language commands." src="https://external-preview.redd.it/EfW1lsHoikNKcgwOWGiIBaTGmxyc0Pq11Zx0KQxj8js.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=4d3555e0a812f5a0a9b7268b70e9d4c2a6e2ef3d" title="Jira MCP Server – Connects Jira with Claude, enabling users to search issues, view issue details, update issues, add comments, and retrieve project information through natural language commands." /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/modelcontextprotocol"&gt; /u/modelcontextprotocol &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://glama.ai/mcp/servers/@SunWooBang/jira-mcp-server"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1lkv216/jira_mcp_server_connects_jira_with_claude/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1lkv216/jira_mcp_server_connects_jira_with_claude/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-06-26T08:45:04+00:00</published>
  </entry>
  <entry>
    <id>t3_1lkvrkg</id>
    <title>Does Browser Use has its MCP？</title>
    <updated>2025-06-26T09:31:30+00:00</updated>
    <author>
      <name>/u/JulieMojito</name>
      <uri>https://old.reddit.com/user/JulieMojito</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Could I use Browser Use via Claude？Or are there any other MCPs that could provide browser automation capabilities?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/JulieMojito"&gt; /u/JulieMojito &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1lkvrkg/does_browser_use_has_its_mcp/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1lkvrkg/does_browser_use_has_its_mcp/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1lkvrkg/does_browser_use_has_its_mcp/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-06-26T09:31:30+00:00</published>
  </entry>
  <entry>
    <id>t3_1lkw7j0</id>
    <title>MCP Memory Server – A Model Context Protocol server that provides knowledge graph-based persistent memory for LLMs, allowing them to store, retrieve, and reason about information across multiple conversations and sessions.</title>
    <updated>2025-06-26T10:00:06+00:00</updated>
    <author>
      <name>/u/modelcontextprotocol</name>
      <uri>https://old.reddit.com/user/modelcontextprotocol</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/mcp/comments/1lkw7j0/mcp_memory_server_a_model_context_protocol_server/"&gt; &lt;img alt="MCP Memory Server – A Model Context Protocol server that provides knowledge graph-based persistent memory for LLMs, allowing them to store, retrieve, and reason about information across multiple conversations and sessions." src="https://external-preview.redd.it/yz_SU7yFLVY6yl_9XR0UIApjbiNwtkw-RRGoim5GwZE.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=ba9ed41786aa48af81e6a55a5e4f0d61bbaac8df" title="MCP Memory Server – A Model Context Protocol server that provides knowledge graph-based persistent memory for LLMs, allowing them to store, retrieve, and reason about information across multiple conversations and sessions." /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/modelcontextprotocol"&gt; /u/modelcontextprotocol &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://glama.ai/mcp/servers/@StevenWangler/mcp-memory-server"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1lkw7j0/mcp_memory_server_a_model_context_protocol_server/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1lkw7j0/mcp_memory_server_a_model_context_protocol_server/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-06-26T10:00:06+00:00</published>
  </entry>
  <entry>
    <id>t3_1lkd0sw</id>
    <title>Got my first full MCP stack (Tools + Prompts + Resources) running 🎉</title>
    <updated>2025-06-25T18:10:06+00:00</updated>
    <author>
      <name>/u/cyber_harsh</name>
      <uri>https://old.reddit.com/user/cyber_harsh</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/mcp/comments/1lkd0sw/got_my_first_full_mcp_stack_tools_prompts/"&gt; &lt;img alt="Got my first full MCP stack (Tools + Prompts + Resources) running 🎉" src="https://preview.redd.it/ra8cf1cb649f1.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=161da2e142976bec327b18f7d997a8a227f4a020" title="Got my first full MCP stack (Tools + Prompts + Resources) running 🎉" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I finally took a weekend to dive deep into MCP and wrote up everything I wish I’d known before starting - setting up a clean workspace with uv + fastmcp, wiring a “hello_world” tool, adding prompt templates, and even exposing local files/images as resources (turns out MCP’s resource URIs are insanely flexible).&lt;/p&gt; &lt;p&gt;A few highlights from the guide:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; Workspace first – MCP can nuke your FS if you’re careless, so I demo the “mkdir mcp &amp;amp;&amp;amp; uv venv .venv” flow for a totally sandboxed setup.&lt;br /&gt;&lt;/li&gt; &lt;li&gt; Tools as simple Python functions – decorated with &lt;code&gt;@mcp.tool&lt;/code&gt;, instantly discoverable via tools/list.&lt;br /&gt;&lt;/li&gt; &lt;li&gt; Prompt templates that feel like f-strings – &lt;code&gt;@mcp.prompt&lt;/code&gt; lets you reuse the same prompt skeleton everywhere.&lt;br /&gt;&lt;/li&gt; &lt;li&gt; Resources = partial RAG for free – expose text, DB rows, even JPEGs as &lt;code&gt;protocol://host/path&lt;/code&gt; URIs the LLM can reference.&lt;br /&gt;&lt;/li&gt; &lt;li&gt; Example agents: utility CLI, data-science toolbox, IRCTC helper, research assistant, code debugger… lots of starter ideas in the post.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;If any of that sounds useful, the full walkthrough is here: &lt;a href="https://composio.dev/blog/how-to-effectively-use-prompts-resources-and-tools-in-mcp/"&gt;A Brief Intro to MCP (workspace, code snippets, inspector screenshots, etc.)&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Curious—what MCP servers/tools have you built or plugged into lately that actually moved the needle for you? Always looking for inspo!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/cyber_harsh"&gt; /u/cyber_harsh &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://i.redd.it/ra8cf1cb649f1.png"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1lkd0sw/got_my_first_full_mcp_stack_tools_prompts/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1lkd0sw/got_my_first_full_mcp_stack_tools_prompts/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-06-25T18:10:06+00:00</published>
  </entry>
  <entry>
    <id>t3_1lkxqsw</id>
    <title>@missionsquad/mcp-rss – MCP server for fetching, parsing, and managing RSS feeds. Features Fetch and parse RSS/Atom feeds In-memory caching with TTL Batch fetching of multiple feeds Monitor feeds for new items Search content across multiple feeds Extract and format feed content</title>
    <updated>2025-06-26T11:30:03+00:00</updated>
    <author>
      <name>/u/modelcontextprotocol</name>
      <uri>https://old.reddit.com/user/modelcontextprotocol</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/mcp/comments/1lkxqsw/missionsquadmcprss_mcp_server_for_fetching/"&gt; &lt;img alt="@missionsquad/mcp-rss – MCP server for fetching, parsing, and managing RSS feeds. Features Fetch and parse RSS/Atom feeds In-memory caching with TTL Batch fetching of multiple feeds Monitor feeds for new items Search content across multiple feeds Extract and format feed content" src="https://external-preview.redd.it/DbR4zXurWuhZfh-JKFmVovP58pyRPXQdjKjiBPsm1ck.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=5f9d5a18170ff27b8fcb3a0d6b190cf96a8de7e0" title="@missionsquad/mcp-rss – MCP server for fetching, parsing, and managing RSS feeds. Features Fetch and parse RSS/Atom feeds In-memory caching with TTL Batch fetching of multiple feeds Monitor feeds for new items Search content across multiple feeds Extract and format feed content" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/modelcontextprotocol"&gt; /u/modelcontextprotocol &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://glama.ai/mcp/servers/@MissionSquad/mcp-rss"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1lkxqsw/missionsquadmcprss_mcp_server_for_fetching/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1lkxqsw/missionsquadmcprss_mcp_server_for_fetching/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-06-26T11:30:03+00:00</published>
  </entry>
  <entry>
    <id>t3_1lky187</id>
    <title>How to define the execution flow through MCP server in VS Code GitHub extension?</title>
    <updated>2025-06-26T11:45:56+00:00</updated>
    <author>
      <name>/u/_Living_Thing_</name>
      <uri>https://old.reddit.com/user/_Living_Thing_</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hey folks 👋,&lt;/p&gt; &lt;p&gt;I'm trying to build an MCP server that integrates with the GitHub Copilot Agent Mode inside VS Code. My goal is to define a clear execution flow for the following task:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Run existing Python test cases Measure code coverage If coverage is less than desired threshold, Trigger LLM to generate additional tests automatically&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;Now here’s the problem I’m facing:&lt;/p&gt; &lt;p&gt;I’ve looked into sampling(in MCP)and MCP's ability to invoke tools in a structured way, but it’s not working as expected. The LLM doesn’t seem to follow the intended control flow — especially the conditional logic like “if coverage &amp;lt; threshold, then generate more tests.”&lt;/p&gt; &lt;p&gt;I'm using Python for the MCP server, and have exposed tools like:&lt;/p&gt; &lt;p&gt;run_pytest&lt;/p&gt; &lt;p&gt;measure_coverage&lt;/p&gt; &lt;p&gt;generate_tests&lt;/p&gt; &lt;p&gt;But chaining them based on dynamic results (like coverage %) has been tricky.&lt;/p&gt; &lt;hr /&gt; &lt;p&gt;What I want to understand:[&lt;em&gt;GitHub Copilot Through costum MCP server&lt;/em&gt;] &lt;/p&gt; &lt;p&gt;How can an MCP server define a proper execution flow instead of relying on LLM ?&lt;/p&gt; &lt;p&gt;Can sampling in MCP used here for defining the flow? Or I understood the sampling in a wrong way.&lt;/p&gt; &lt;p&gt;Has anyone else implemented a flow-control-aware MCP server ?&lt;/p&gt; &lt;p&gt;Any tips, insights, or examples would be incredibly helpful 🙏&lt;/p&gt; &lt;hr /&gt; &lt;p&gt;Thanks in advance!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/_Living_Thing_"&gt; /u/_Living_Thing_ &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1lky187/how_to_define_the_execution_flow_through_mcp/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1lky187/how_to_define_the_execution_flow_through_mcp/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1lky187/how_to_define_the_execution_flow_through_mcp/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-06-26T11:45:56+00:00</published>
  </entry>
  <entry>
    <id>t3_1lko1te</id>
    <title>Shocking! This is how multi-MCP agent interaction can be done!</title>
    <updated>2025-06-26T01:56:24+00:00</updated>
    <author>
      <name>/u/SubstantialWord7757</name>
      <uri>https://old.reddit.com/user/SubstantialWord7757</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/mcp/comments/1lko1te/shocking_this_is_how_multimcp_agent_interaction/"&gt; &lt;img alt="Shocking! This is how multi-MCP agent interaction can be done!" src="https://external-preview.redd.it/tYVDyuARMrGu2umgL-mTOfZjEJQ4Dh6eLZnHg1Jtrqs.jpeg?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=a6eab4285f6f7b7125e7537930e144d02dfdc30d" title="Shocking! This is how multi-MCP agent interaction can be done!" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hey Reddit,&lt;/p&gt; &lt;p&gt;A while back, I shared an example of multi-modal interaction &lt;a href="https://www.reddit.com/r/mcp/comments/1lids1j/supercharge_your_telegram_bot_with_deepseek_ai/"&gt;here&lt;/a&gt;. Today, we're diving deeper by breaking down the individual &lt;strong&gt;prompts&lt;/strong&gt; used in that system to understand what each one does, complete with code references.&lt;/p&gt; &lt;p&gt;All the code discussed here comes from this GitHub repository: &lt;a href="https://github.com/yincongcyincong/telegram-deepseek-bot"&gt;https://github.com/yincongcyincong/telegram-deepseek-bot&lt;/a&gt;&lt;/p&gt; &lt;h1&gt;Overall Workflow: Intelligent Task Decomposition and Execution&lt;/h1&gt; &lt;p&gt;The core of this automated process is to take a &amp;quot;main task&amp;quot; and break it down into several manageable &amp;quot;subtasks.&amp;quot; Each subtask is then matched with the most suitable executor, which could be a specific &lt;strong&gt;Multi-modal Computing Platform (MCP) service&lt;/strong&gt; or a &lt;strong&gt;Large Language Model (LLM)&lt;/strong&gt; itself. The entire process operates in a cyclical, iterative manner until all subtasks are completed and the results are finally summarized.&lt;/p&gt; &lt;p&gt;Here's a breakdown of the specific steps:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;&lt;strong&gt;Prompt-driven Task Decomposition:&lt;/strong&gt; The process begins with the system receiving a main task. A specialized &amp;quot;&lt;strong&gt;Deep Researcher&lt;/strong&gt;&amp;quot; role, defined by a specific prompt, is used to break down this main task into a series of automated subtasks. The &amp;quot;Deep Researcher&amp;quot;'s responsibility is to analyze the main task, identify all data or information required for the &amp;quot;Output Expert&amp;quot; to generate the final deliverable, and design a detailed execution plan for the subtasks. It intentionally ignores the final output format, focusing solely on data collection and information provision.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Subtask Assignment:&lt;/strong&gt; Each decomposed subtask is intelligently assigned based on its requirements and the &lt;strong&gt;descriptions of various MCP services&lt;/strong&gt;. If a suitable MCP service exists, the subtask is directly assigned to it. If no match is found, the task is assigned directly to the Large Language Model (llm_tool) for processing.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;LLM Function Configuration:&lt;/strong&gt; For assigned subtasks, the system configures different &lt;strong&gt;function calls&lt;/strong&gt; for the Large Language Model. This ensures the LLM can specifically handle the subtask and retrieve the necessary data or information.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Looping Inquiry and Judgment:&lt;/strong&gt; After a subtask is completed, the system &lt;strong&gt;queries the Large Language Model again&lt;/strong&gt; to determine if there are any uncompleted subtasks. This is a crucial feedback loop mechanism that ensures continuous task progression.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Iterative Execution:&lt;/strong&gt; If there are remaining subtasks, the process returns to steps 2-4, continuing with subtask assignment, processing, and inquiry.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Result Summarization:&lt;/strong&gt; Once all subtasks are completed, the process moves into the &lt;strong&gt;summarization stage&lt;/strong&gt;, returning the final result related to the main task.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/c914htv1h69f1.jpg?width=732&amp;amp;format=pjpg&amp;amp;auto=webp&amp;amp;s=4d454fea665504b1e478a67fc130377da95fe1be"&gt;https://preview.redd.it/c914htv1h69f1.jpg?width=732&amp;amp;format=pjpg&amp;amp;auto=webp&amp;amp;s=4d454fea665504b1e478a67fc130377da95fe1be&lt;/a&gt;&lt;/p&gt; &lt;h1&gt;Workflow Diagram&lt;/h1&gt; &lt;h1&gt;Core Prompt Examples&lt;/h1&gt; &lt;p&gt;Here are the key prompts used in the system:&lt;/p&gt; &lt;h1&gt;Task Decomposition Prompt:&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;Role: * You are a professional deep researcher. Your responsibility is to plan tasks using a team of professional intelligent agents to gather sufficient and necessary information for the &amp;quot;Output Expert.&amp;quot; * The Output Expert is a powerful agent capable of generating deliverables such as documents, spreadsheets, images, and audio. Responsibilities: 1. Analyze the main task and determine all data or information the Output Expert needs to generate the final deliverable. 2. Design a series of automated subtasks, with each subtask executed by a suitable &amp;quot;Working Agent.&amp;quot; Carefully consider the main objective of each step and create a planning outline. Then, define the detailed execution process for each subtask. 3. Ignore the final deliverable required by the main task: subtasks only focus on providing data or information, not generating output. 4. Based on the main task and completed subtasks, generate or update your task plan. 5. Determine if all necessary information or data has been collected for the Output Expert. 6. Track task progress. If the plan needs updating, avoid repeating completed subtasks – only generate the remaining necessary subtasks. 7. If the task is simple and can be handled directly (e.g., writing code, creative writing, basic data analysis, or prediction), immediately use `llm_tool` without further planning. Available Working Agents: {{range $i, $tool := .assign_param}}- Agent Name: {{$tool.tool_name}} Agent Description: {{$tool.tool_desc}} {{end}} Main Task: {{.user_task}} Output Format (JSON): ```json { &amp;quot;plan&amp;quot;: [ { &amp;quot;name&amp;quot;: &amp;quot;Name of the agent required for the first task&amp;quot;, &amp;quot;description&amp;quot;: &amp;quot;Detailed instructions for executing step 1&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;Name of the agent required for the second task&amp;quot;, &amp;quot;description&amp;quot;: &amp;quot;Detailed instructions for executing step 2&amp;quot; }, ... ] } &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Example of Returned Result from Decomposition Prompt:&lt;/h1&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/k9fymn38h69f1.png?width=791&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=d903d9683bdf8d8e5e8043dad8bb23a95cae1c37"&gt;https://preview.redd.it/k9fymn38h69f1.png?width=791&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=d903d9683bdf8d8e5e8043dad8bb23a95cae1c37&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;### Loop Task Prompt: Main Task: {{.user\_task}} **Completed Subtasks:** {{range $task, $res := .complete\_tasks}} \- Subtask: {{$task}} {{end}} **Current Task Plan:** {{.last\_plan}} Based on the above information, create or update the task plan. If the task is complete, return an empty plan list. **Note:** - Carefully analyze the completion status of previously completed subtasks to determine the next task plan. - Appropriately and reasonably add details to ensure the working agent or tool has sufficient information to execute the task. - The expanded description must not deviate from the main objective of the subtask. &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can see which MCPs are called through the logs:&lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/bwyzpp9dh69f1.png?width=640&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=441ad7b6ff07e85e1406cf730069114bc207f457"&gt;https://preview.redd.it/bwyzpp9dh69f1.png?width=640&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=441ad7b6ff07e85e1406cf730069114bc207f457&lt;/a&gt;&lt;/p&gt; &lt;h1&gt;Summary Task Prompt:&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;Based on the question, summarize the key points from the search results and other reference information in plain text format. Main Task: {{.user\_task}}&amp;quot; &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Deepseek's Returned Summary:&lt;/h1&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/ed1v65jeh69f1.png?width=640&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=caf406308fd2fcde19738e434acd736b564d767e"&gt;https://preview.redd.it/ed1v65jeh69f1.png?width=640&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=caf406308fd2fcde19738e434acd736b564d767e&lt;/a&gt;&lt;/p&gt; &lt;h1&gt;Why Differentiate Function Calls Based on MCP Services?&lt;/h1&gt; &lt;p&gt;Based on the provided information, there are two main reasons to differentiate &lt;strong&gt;Function Calls&lt;/strong&gt; according to the specific &lt;strong&gt;MCP (Multi-modal Computing Platform) services&lt;/strong&gt;:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;&lt;strong&gt;Prevent LLM Context Overflow:&lt;/strong&gt; Large Language Models (LLMs) have strict &lt;strong&gt;context token limits&lt;/strong&gt;. If all MCP functions were directly crammed into the LLM's request context, it would very likely exceed this limit, preventing normal processing.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Optimize Token Usage Efficiency:&lt;/strong&gt; Stuffing a large number of MCP functions into the context significantly increases &lt;strong&gt;token usage&lt;/strong&gt;. Tokens are a crucial unit for measuring the computational cost and efficiency of LLMs; an increase in token count means higher costs and longer processing times. By differentiating Function Calls, the system can provide the LLM with only the most relevant Function Calls for the current subtask, drastically reducing token consumption and improving overall efficiency.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;In short, this strategy of differentiating Function Calls aims to &lt;strong&gt;ensure the LLM's processing capability&lt;/strong&gt; while &lt;strong&gt;optimizing resource utilization&lt;/strong&gt;, avoiding unnecessary context bloat and token waste.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;telegram-deepseek-bot Core Method Breakdown&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Here's a look at some of the key Go functions in the bot's codebase:&lt;/p&gt; &lt;h1&gt;ExecuteTask() Method&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;func (d *DeepseekTaskReq) ExecuteTask() { // Set a 15-minute timeout context ctx, cancel := context.WithTimeout(context.Background(), 15*time.Minute) defer cancel() // Prepare task parameters taskParam := make(map[string]interface{}) taskParam[&amp;quot;assign_param&amp;quot;] = make([]map[string]string, 0) taskParam[&amp;quot;user_task&amp;quot;] = d.Content // Add available tool information for name, tool := range conf.TaskTools { taskParam[&amp;quot;assign_param&amp;quot;] = append(taskParam[&amp;quot;assign_param&amp;quot;].([]map[string]string), map[string]string{ &amp;quot;tool_name&amp;quot;: name, &amp;quot;tool_desc&amp;quot;: tool.Description, }) } // Create LLM client llm := NewLLM(WithBot(d.Bot), WithUpdate(d.Update), WithMessageChan(d.MessageChan)) // Get and send task assignment prompt prompt := i18n.GetMessage(*conf.Lang, &amp;quot;assign_task_prompt&amp;quot;, taskParam) llm.LLMClient.GetUserMessage(prompt) llm.Content = prompt // Send synchronous request c, err := llm.LLMClient.SyncSend(ctx, llm) if err != nil { logger.Error(&amp;quot;get message fail&amp;quot;, &amp;quot;err&amp;quot;, err) return } // Parse AI-returned JSON task plan matches := jsonRe.FindAllString(c, -1) plans := new(TaskInfo) for _, match := range matches { err = json.Unmarshal([]byte(match), &amp;amp;plans) if err != nil { logger.Error(&amp;quot;json umarshal fail&amp;quot;, &amp;quot;err&amp;quot;, err) } } // If no plan, directly request summary if len(plans.Plan) == 0 { finalLLM := NewLLM(WithBot(d.Bot), WithUpdate(d.Update), WithMessageChan(d.MessageChan), WithContent(d.Content)) finalLLM.LLMClient.GetUserMessage(c) err = finalLLM.LLMClient.Send(ctx, finalLLM) return } // Execute task loop llm.LLMClient.GetAssistantMessage(c) d.loopTask(ctx, plans, c, llm) // Final summary summaryParam := make(map[string]interface{}) summaryParam[&amp;quot;user_task&amp;quot;] = d.Content llm.LLMClient.GetUserMessage(i18n.GetMessage(*conf.Lang, &amp;quot;summary_task_prompt&amp;quot;, summaryParam)) err = llm.LLMClient.Send(ctx, llm) } &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;loopTask() Method&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;func (d *DeepseekTaskReq) loopTask(ctx context.Context, plans *TaskInfo, lastPlan string, llm *LLM) { // Record completed tasks completeTasks := map[string]bool{} // Create a dedicated LLM instance for tasks taskLLM := NewLLM(WithBot(d.Bot), WithUpdate(d.Update), WithMessageChan(d.MessageChan)) defer func() { llm.LLMClient.AppendMessages(taskLLM.LLMClient) }() // Execute each subtask for _, plan := range plans.Plan { // Configure task tool o := WithTaskTools(conf.TaskTools[plan.Name]) o(taskLLM) // Send task description taskLLM.LLMClient.GetUserMessage(plan.Description) taskLLM.Content = plan.Description // Execute task d.requestTask(ctx, taskLLM, plan) completeTasks[plan.Description] = true } // Prepare loop task parameters taskParam := map[string]interface{}{ &amp;quot;user_task&amp;quot;: d.Content, &amp;quot;complete_tasks&amp;quot;: completeTasks, &amp;quot;last_plan&amp;quot;: lastPlan, } // Request AI to evaluate if more tasks are needed llm.LLMClient.GetUserMessage(i18n.GetMessage(*conf.Lang, &amp;quot;loop_task_prompt&amp;quot;, taskParam)) c, err := llm.LLMClient.SyncSend(ctx, llm) // Parse new task plan matches := jsonRe.FindAllString(c, -1) plans = new(TaskInfo) for _, match := range matches { err := json.Unmarshal([]byte(match), &amp;amp;plans) } // If there are new tasks, recursively call if len(plans.Plan) &amp;gt; 0 { d.loopTask(ctx, plans, c, llm) } } &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;requestTask() Method&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;func (d *DeepseekTaskReq) requestTask(ctx context.Context, llm *LLM, plan *Task) { // Send synchronous task request c, err := llm.LLMClient.SyncSend(ctx, llm) if err != nil { logger.Error(&amp;quot;ChatCompletionStream error&amp;quot;, &amp;quot;err&amp;quot;, err) return } // Handle empty response if c == &amp;quot;&amp;quot; { c = plan.Name + &amp;quot; is completed&amp;quot; } // Save AI response llm.LLMClient.GetAssistantMessage(c) } &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/SubstantialWord7757"&gt; /u/SubstantialWord7757 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1lko1te/shocking_this_is_how_multimcp_agent_interaction/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1lko1te/shocking_this_is_how_multimcp_agent_interaction/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1lko1te/shocking_this_is_how_multimcp_agent_interaction/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-06-26T01:56:24+00:00</published>
  </entry>
  <entry>
    <id>t3_1lktpsz</id>
    <title>my cofounder just made a payments and billing MCP demo</title>
    <updated>2025-06-26T07:14:54+00:00</updated>
    <author>
      <name>/u/CryptographerOwn5475</name>
      <uri>https://old.reddit.com/user/CryptographerOwn5475</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/mcp/comments/1lktpsz/my_cofounder_just_made_a_payments_and_billing_mcp/"&gt; &lt;img alt="my cofounder just made a payments and billing MCP demo" src="https://external-preview.redd.it/6UWxo4_ozfxgfpKQlVshOH-kpRMhW4bo472TJDQ488g.jpg?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=7d8f475066edc6cbf3a04264190f5241deb1b1a4" title="my cofounder just made a payments and billing MCP demo" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;We just shipped an early version of our billing + payments MCP for infra and tooling founders. If you're dealing with usage-based pricing, Stripe headaches, or just want to move faster on monetization, curious what you think of this flow.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/CryptographerOwn5475"&gt; /u/CryptographerOwn5475 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://x.com/agreeahmed/status/1938125556450734305"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1lktpsz/my_cofounder_just_made_a_payments_and_billing_mcp/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1lktpsz/my_cofounder_just_made_a_payments_and_billing_mcp/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-06-26T07:14:54+00:00</published>
  </entry>
  <entry>
    <id>t3_1lk5ous</id>
    <title>Google releases Gemini CLI - with full MCP Support</title>
    <updated>2025-06-25T13:28:41+00:00</updated>
    <author>
      <name>/u/coding9</name>
      <uri>https://old.reddit.com/user/coding9</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;&lt;a href="https://github.com/google-gemini/gemini-cli"&gt;https://github.com/google-gemini/gemini-cli&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/coding9"&gt; /u/coding9 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1lk5ous/google_releases_gemini_cli_with_full_mcp_support/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1lk5ous/google_releases_gemini_cli_with_full_mcp_support/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1lk5ous/google_releases_gemini_cli_with_full_mcp_support/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-06-25T13:28:41+00:00</published>
  </entry>
  <entry>
    <id>t3_1lkv9y2</id>
    <title>MCP developers: How do you handle complex tool routing logic?</title>
    <updated>2025-06-26T08:59:53+00:00</updated>
    <author>
      <name>/u/tokyo_kunoichi</name>
      <uri>https://old.reddit.com/user/tokyo_kunoichi</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;&lt;em&gt;Building MCP servers with multiple tools always hits the same complexity wall:&lt;/em&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;em&gt;Tool selection logic buried in prompt instructions&lt;/em&gt;&lt;/li&gt; &lt;li&gt;&lt;em&gt;Complex &amp;quot;if user needs X, call tool Y, else try Z&amp;quot; written as text&lt;/em&gt;&lt;/li&gt; &lt;li&gt;&lt;em&gt;No clear way to debug which tool path was taken&lt;/em&gt;&lt;/li&gt; &lt;li&gt;&lt;em&gt;Conditional logic for tool chaining gets messy fast&lt;/em&gt;&lt;/li&gt; &lt;li&gt;&lt;em&gt;Hard to test edge cases in tool routing workflows&lt;/em&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;em&gt;Questions:&lt;/em&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;em&gt;How do you structure complex tool routing in your MCP servers?&lt;/em&gt;&lt;/li&gt; &lt;li&gt;&lt;em&gt;What's your debugging process for tool selection issues?&lt;/em&gt;&lt;/li&gt; &lt;li&gt;&lt;em&gt;Do you handle tool orchestration in prompts or code?&lt;/em&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;em&gt;Built something that replaces routing prompts with one line of code—curious about your MCP workflows!&lt;/em&gt; 🔧&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/tokyo_kunoichi"&gt; /u/tokyo_kunoichi &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1lkv9y2/mcp_developers_how_do_you_handle_complex_tool/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1lkv9y2/mcp_developers_how_do_you_handle_complex_tool/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1lkv9y2/mcp_developers_how_do_you_handle_complex_tool/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-06-26T08:59:53+00:00</published>
  </entry>
  <entry>
    <id>t3_1h7pl2v</id>
    <title>Awesome MCP Servers – A curated list of awesome Model Context Protocol (MCP) servers</title>
    <updated>2024-12-06T01:23:42+00:00</updated>
    <author>
      <name>/u/punkpeye</name>
      <uri>https://old.reddit.com/user/punkpeye</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/mcp/comments/1h7pl2v/awesome_mcp_servers_a_curated_list_of_awesome/"&gt; &lt;img alt="Awesome MCP Servers – A curated list of awesome Model Context Protocol (MCP) servers" src="https://external-preview.redd.it/BlNcrgap-6pz7IdUsbomFSVuqp_BB8tTUEFVIk6by18.jpg?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=f25629e364c60f72e8d88ce33c5b1f90a326c065" title="Awesome MCP Servers – A curated list of awesome Model Context Protocol (MCP) servers" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/punkpeye"&gt; /u/punkpeye &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://github.com/punkpeye/awesome-mcp-servers/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1h7pl2v/awesome_mcp_servers_a_curated_list_of_awesome/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1h7pl2v/awesome_mcp_servers_a_curated_list_of_awesome/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2024-12-06T01:23:42+00:00</published>
  </entry>
  <entry>
    <id>t3_1h7qe88</id>
    <title>Join the Model Context Protocol Discord Server!</title>
    <updated>2024-12-06T02:04:10+00:00</updated>
    <author>
      <name>/u/punkpeye</name>
      <uri>https://old.reddit.com/user/punkpeye</uri>
    </author>
    <content type="html">&amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/punkpeye"&gt; /u/punkpeye &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://glama.ai/mcp/discord"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1h7qe88/join_the_model_context_protocol_discord_server/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1h7qe88/join_the_model_context_protocol_discord_server/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2024-12-06T02:04:10+00:00</published>
  </entry>
</feed>
