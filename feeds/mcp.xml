<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>/r/mcp/.rss</id>
  <title>Model Context Protocol (MCP)</title>
  <updated>2025-08-15T03:49:14+00:00</updated>
  <link href="https://old.reddit.com/r/mcp/" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <icon>https://www.redditstatic.com/icon.png/</icon>
  <subtitle>The Model Context Protocol is an open standard that enables developers to build secure, two-way connections between their data sources and AI-powered tools</subtitle>
  <entry>
    <id>t3_1mpvaco</id>
    <title>I built a Cursor-style MCP error formatter so LLMs stop guessing</title>
    <updated>2025-08-14T08:59:36+00:00</updated>
    <author>
      <name>/u/Muted_Estate890</name>
      <uri>https://old.reddit.com/user/Muted_Estate890</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;&lt;strong&gt;TL;DR: I've built both server- and client-side MCP integrations, including official ones for Void (~25.8K⭐) and Marimo (~15.3K⭐) so I know how confusing tool errors can derail AI flows. Tired of LLMs retrying failed tool calls or giving “something went wrong” messages, I made a zero-dependency (just uuid) TypeScript package that formats any JS error into a standardized MCP CallToolResult (Cursor-style). It makes it clear whether the LLM should retry, stop, or suggest fixes. Server-side MCP only for now, but open to expanding. Post covers how it works and why it matters.&lt;/strong&gt; &lt;a href="https://github.com/bjoaquinc/mcp-error-formatter"&gt;&lt;strong&gt;GitHub Repo ⭐&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Hey guys, I'm Joaquin. I’ve been building MCP integrations for a while and one thing that kept annoying me is how tool crashes leave LLMs with cryptic stack traces so they either loop retries, give up or return a vague &amp;quot;something went wrong.&amp;quot; Then I noticed how Cursor formats errors. They include things like &lt;code&gt;isRetryable&lt;/code&gt;, &lt;code&gt;isExpected&lt;/code&gt;, a request ID, and human-readable details. That structure lets the LLM handle the failure correctly (e.g. “user aborted” → don’t retry).&lt;/p&gt; &lt;p&gt;So I built &lt;a href="https://github.com/bjoaquinc/mcp-error-formatter"&gt;&lt;strong&gt;mcp-error-formatter&lt;/strong&gt;&lt;/a&gt;: a tiny, zero-dependency TypeScript package (just &lt;code&gt;uuid&lt;/code&gt;) that takes any JavaScript &lt;code&gt;Error&lt;/code&gt; and outputs a proper MCP &lt;code&gt;CallToolResult&lt;/code&gt; with:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;isRetryable&lt;/code&gt; flag so the LLM knows whether to try again&lt;/li&gt; &lt;li&gt;&lt;code&gt;isExpected&lt;/code&gt; flag for normal failures vs. real errors&lt;/li&gt; &lt;li&gt;Structured error type for better advice (“network timeout” → “check your connection”)&lt;/li&gt; &lt;li&gt;Request ID for debugging&lt;/li&gt; &lt;li&gt;Human-readable details and optional extra context&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Works with any MCP tool framework, including FastMCP, LangChain, or vanilla MCP SDK and standardizes error output so LLMs can actually respond helpfully.&lt;/p&gt; &lt;p&gt;Repo (Apache-2.0, open source): &lt;a href="https://github.com/bjoaquinc/mcp-error-formatter"&gt;&lt;strong&gt;https://github.com/bjoaquinc/mcp-error-formatter&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt; If it’s useful, a ⭐ would mean a lot.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Muted_Estate890"&gt; /u/Muted_Estate890 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1mpvaco/i_built_a_cursorstyle_mcp_error_formatter_so_llms/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1mpvaco/i_built_a_cursorstyle_mcp_error_formatter_so_llms/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1mpvaco/i_built_a_cursorstyle_mcp_error_formatter_so_llms/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-08-14T08:59:36+00:00</published>
  </entry>
  <entry>
    <id>t3_1mpvbpp</id>
    <title>How I Built an AI Assistant That Outperforms Me in Research: Octocode’s Advanced LLM Playbook</title>
    <updated>2025-08-14T09:01:44+00:00</updated>
    <author>
      <name>/u/_bgauryy_</name>
      <uri>https://old.reddit.com/user/_bgauryy_</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;h2&gt;How I Built an AI Assistant That Outperforms Me in Research: Octocode’s Advanced LLM Playbook&lt;/h2&gt; &lt;p&gt;Forget incremental gains. When I built Octocode (&lt;a href="https://octocode.ai"&gt;octocode.ai&lt;/a&gt;), my AI-powered GitHub research assistant, I engineered a cognitive stack that turns an LLM from a search helper into a research system. This is the architecture, the techniques, and the reasoning patterns I used—battle‑tested on real codebases.&lt;/p&gt; &lt;h3&gt;What is Octocode&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;MCP server with research tools&lt;/strong&gt;: search repositories, search code, search packages, view folder structure, and inspect commits/PRs.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Semantic understanding&lt;/strong&gt;: interprets user prompts, selects the right tools, and runs smart research to produce deep explanations—like a human reading code and docs.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Advanced AI techniques + hints&lt;/strong&gt;: targeted guidance improves LLM thinking, so it can research almost anything—often better than IDE search on local code.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;What this post covers&lt;/strong&gt;: the exact techniques that make it genuinely useful.&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;Why “traditional” LLMs fail at research&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Sequential bias&lt;/strong&gt;: Linear thinking misses parallel insights and cross‑validation.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Context fragmentation&lt;/strong&gt;: No persistent research state across steps/tools.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Surface analysis&lt;/strong&gt;: Keyword matches, not structured investigation.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Token waste&lt;/strong&gt;: Poor context engineering, fast to hit window limits.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Strategy blindness&lt;/strong&gt;: No meta‑cognition about what to do next.&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;The cognitive architecture I built&lt;/h3&gt; &lt;p&gt;Seven pillars, each mapped to concrete engineering: - &lt;strong&gt;Chain‑of‑Thought with phase transitions&lt;/strong&gt;: Discovery → Analysis → Synthesis; each with distinct objectives and tool orchestration. - &lt;strong&gt;ReAct loop&lt;/strong&gt;: Reason → Act → Observe → Reflect; persistent strategy over one‑shot answers. - &lt;strong&gt;Progressive context engineering&lt;/strong&gt;: Transform raw data into LLM‑optimized structures; maintain research state across turns. - &lt;strong&gt;Intelligent hints system&lt;/strong&gt;: Context‑aware guidance and fallbacks that steer the LLM like a meta‑copilot. - &lt;strong&gt;Bulk/parallel reasoning&lt;/strong&gt;: Multi‑perspective runs with error isolation and synthesis. - &lt;strong&gt;Quality boosting&lt;/strong&gt;: Source scoring (authority, freshness, completeness) before reasoning. - &lt;strong&gt;Adaptive feedback loops&lt;/strong&gt;: Self‑improvement via observed success/failure patterns.&lt;/p&gt; &lt;h3&gt;1) Chain‑of‑Thought with explicit phases&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Discovery&lt;/strong&gt;: semantic expansion, concept mapping, broad coverage.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Analysis&lt;/strong&gt;: comparative patterns, cross‑validation, implementation details.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Synthesis&lt;/strong&gt;: pattern integration, tradeoffs, actionable guidance.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Research goal propagation&lt;/strong&gt; keeps the LLM on target: discovery/analysis/debugging/code‑gen/context.&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;2) ReAct for strategic decision‑making&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Reason&lt;/strong&gt; about context and gaps.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Act&lt;/strong&gt; with optimized toolchains (often bulk operations).&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Observe&lt;/strong&gt; results for quality and coverage.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Reflect&lt;/strong&gt; and adapt strategy to avoid dead‑ends and keep momentum.&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;3) Progressive context engineering and memory&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Semantic JSON → NL transformation&lt;/strong&gt; for token efficiency (50–80% savings in practice).&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Domain labels + hierarchy&lt;/strong&gt; to align with LLM attention.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Language‑aware minification&lt;/strong&gt; for 50+ file types; preserve semantics, drop noise.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Cross‑query persistence&lt;/strong&gt;: maintain patterns and state across operations.&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;4) Intelligent hints (meta‑cognitive guidance)&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Consolidated hints&lt;/strong&gt; with 85% code reduction vs earlier versions.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Context‑aware suggestions&lt;/strong&gt; for next tools, angles, and fallbacks.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Quality/coverage guidance&lt;/strong&gt; so the model prioritizes better sources, not just louder ones.&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;5) Bulk reasoning and cognitive parallelization&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Multi‑perspective runs&lt;/strong&gt; (1–10 in parallel) with shared context.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Error isolation&lt;/strong&gt; so one failed path never sinks the batch.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Synthesis engine&lt;/strong&gt; merges results into clean insights. &lt;ul&gt; &lt;li&gt;Result aggregation uses pattern recognition across perspectives to converge on consistent findings.&lt;/li&gt; &lt;li&gt;Cross‑run contradiction checks reduce hallucinations and force reconciliation.&lt;/li&gt; &lt;/ul&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Cognitive orchestration&lt;/strong&gt; &lt;ul&gt; &lt;li&gt;Strategic query distribution: maximize coverage while minimizing redundancy.&lt;/li&gt; &lt;li&gt;Cross‑operation context sharing: propagate discovered entities/patterns between parallel branches.&lt;/li&gt; &lt;li&gt;Adaptive load balancing: adjust parallelism based on repo size, latency budgets, and tool health.&lt;/li&gt; &lt;li&gt;Timeouts per branch with graceful degradation rather than global failure.&lt;/li&gt; &lt;/ul&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;6) Quality boosting and source prioritization&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Authority/freshness/completeness&lt;/strong&gt; scoring.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Content optimization&lt;/strong&gt; before reasoning: semantic enhancement + compression. &lt;ul&gt; &lt;li&gt;Authority signal detection: community validation, maintenance quality, institutional credibility.&lt;/li&gt; &lt;li&gt;Freshness/relevance scoring: prefer recent, actively maintained sources; down‑rank deprecated content.&lt;/li&gt; &lt;li&gt;Content quality analysis: documentation completeness, code health signals, community responsiveness.&lt;/li&gt; &lt;li&gt;Token‑aware optimization pipeline: strip syntactic noise, preserve semantics, compress safely for LLMs.&lt;/li&gt; &lt;/ul&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;7) Adaptive feedback loops&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Performance‑based adaptation&lt;/strong&gt;: reinforce strategies that work, drop those that don’t.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Phase/Tool rebalancing&lt;/strong&gt;: dynamically budget effort across discovery/analysis/synthesis. &lt;ul&gt; &lt;li&gt;Success pattern recognition: learn which tool chains produce reliable results per task type.&lt;/li&gt; &lt;li&gt;Failure mode analysis: detect repeated dead‑ends, trigger alternative routes and hints.&lt;/li&gt; &lt;li&gt;Strategy effectiveness measurement: track coverage, accuracy, latency, and token efficiency.&lt;/li&gt; &lt;/ul&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;Security, caching, reliability&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Input validation + secret detection&lt;/strong&gt; with aggressive sanitization.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Success‑only caching&lt;/strong&gt; (24h TTL, capped keys) to avoid error poisoning.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Parallelism with timeouts&lt;/strong&gt; and isolation.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Token/auth robustness&lt;/strong&gt; with OAuth/GitHub App support.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;File safety&lt;/strong&gt;: size/binary guards, partial ranges, matchString windows, file‑type minification. &lt;ul&gt; &lt;li&gt;API throttling &amp;amp; rate limits: GitHub client throttling + enterprise‑aware backoff.&lt;/li&gt; &lt;li&gt;Cache policy: per‑tool TTLs (e.g., code search ~1h, repo structure ~2h, default 24h); success‑only writes; capped keyspace.&lt;/li&gt; &lt;li&gt;Cache keys: content‑addressed hashing (e.g., SHA‑256/MD5) over normalized parameters.&lt;/li&gt; &lt;li&gt;Standardized response contract for predictable IO:&lt;/li&gt; &lt;li&gt;data: primary payload (results, files, repos)&lt;/li&gt; &lt;li&gt;meta: totals, researchGoal, errors, structure summaries&lt;/li&gt; &lt;li&gt;hints: consolidated, novelty‑ranked guidance (token‑capped)&lt;/li&gt; &lt;/ul&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;Internal benchmarks (what I observed)&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Token use&lt;/strong&gt;: 50% reduction via context engineering (getting parts of files and minification techniques)&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Latency&lt;/strong&gt;: up to 05% faster research cycles through parallelism.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Redundant queries&lt;/strong&gt;: ~85% fewer via progressive refinement.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Quality&lt;/strong&gt;: deeper coverage, higher accuracy, more actionable synthesis. &lt;ul&gt; &lt;li&gt;Research completeness: 95% reduction in shallow/incomplete analyses.&lt;/li&gt; &lt;li&gt;Accuracy: consistent improvement via cross‑validation and quality‑first sourcing.&lt;/li&gt; &lt;li&gt;Insight generation: higher rate of concrete, implementation‑ready guidance.&lt;/li&gt; &lt;li&gt;Reliability: near‑elimination of dead‑ends through intelligent fallbacks.&lt;/li&gt; &lt;li&gt;Context efficiency: ~86% memory savings with hierarchical context.&lt;/li&gt; &lt;li&gt;Scalability: linear performance scaling with repository size via distributed processing.&lt;/li&gt; &lt;/ul&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Step‑by‑step: how you can build this (with the right LLM/AI primitives)&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Define phases + goals&lt;/strong&gt;: encode Discovery/Analysis/Synthesis with explicit researchGoal propagation.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Implement ReAct&lt;/strong&gt;: persistent loop with state, not single prompts.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Engineer context&lt;/strong&gt;: semantic JSON→NL transforms, hierarchical labels, chunking aligned to code semantics.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Add tool orchestration&lt;/strong&gt;: semantic code search, partial file fetch with matchString windows, repo structure views.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Parallelize&lt;/strong&gt;: bulk queries by perspective (definitions/usages/tests/docs), then synthesize.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Score sources&lt;/strong&gt;: authority/freshness/completeness; route low‑quality to the bottom.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Hints layer&lt;/strong&gt;: next‑step guidance, fallbacks, quality nudges; keep it compact and ranked.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Safety layer&lt;/strong&gt;: sanitization, secret filters, size guards; schema‑constrained outputs.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Caching&lt;/strong&gt;: success‑only, TTL by tool; MD5/SHA‑style keys; 24h horizon by default. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Adaptation&lt;/strong&gt;: track success metrics; rebalance parallelism and phase budgets.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Contract&lt;/strong&gt;: enforce the standardized response contract (data/meta/hints) across tools.&lt;/li&gt; &lt;/ul&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;Key takeaways&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Cognitive architecture &amp;gt; prompts&lt;/strong&gt;. Engineer phases, memory, and strategy.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Context is a product&lt;/strong&gt;. Optimize it like code.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Bulk beats sequential&lt;/strong&gt;. Parallelize and synthesize.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Quality first&lt;/strong&gt;. Prioritize sources before you reason.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Connect: &lt;a href="https://octocode.ai"&gt;Website&lt;/a&gt; | &lt;a href="https://github.com/bgauryy/octocode-mcp"&gt;GitHub&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/_bgauryy_"&gt; /u/_bgauryy_ &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1mpvbpp/how_i_built_an_ai_assistant_that_outperforms_me/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1mpvbpp/how_i_built_an_ai_assistant_that_outperforms_me/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1mpvbpp/how_i_built_an_ai_assistant_that_outperforms_me/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-08-14T09:01:44+00:00</published>
  </entry>
  <entry>
    <id>t3_1mq27fn</id>
    <title>Using MCP to connect Cursor Code to Zephyr</title>
    <updated>2025-08-14T14:26:41+00:00</updated>
    <author>
      <name>/u/jstormes</name>
      <uri>https://old.reddit.com/user/jstormes</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I have been trying for two days to get Claude Code to talk to the Zephyr test management system for Jira. &lt;/p&gt; &lt;p&gt;Jira was a breeze, but setting up Claude Code to see the test cases in Zephyr seem to be beyond me. &lt;/p&gt; &lt;p&gt;There are two MCP project for Zephyr in Github but I seem to be unable to get ether to work with Claude Code.&lt;/p&gt; &lt;p&gt;Has anyone has success and if so how?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/jstormes"&gt; /u/jstormes &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1mq27fn/using_mcp_to_connect_cursor_code_to_zephyr/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1mq27fn/using_mcp_to_connect_cursor_code_to_zephyr/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1mq27fn/using_mcp_to_connect_cursor_code_to_zephyr/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-08-14T14:26:41+00:00</published>
  </entry>
  <entry>
    <id>t3_1mpe8ep</id>
    <title>A free goldmine of AI agent examples, templates, and advanced workflows</title>
    <updated>2025-08-13T19:34:59+00:00</updated>
    <author>
      <name>/u/Arindam_200</name>
      <uri>https://old.reddit.com/user/Arindam_200</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I’ve put together a collection of &lt;strong&gt;35+ AI agent projects&lt;/strong&gt; from simple starter templates to complex, production-ready agentic workflows, all in one open-source repo.&lt;/p&gt; &lt;p&gt;It has everything from quick prototypes to multi-agent research crews, RAG-powered assistants, and MCP-integrated agents. In less than 2 months, it’s already crossed &lt;strong&gt;2,000+ GitHub stars&lt;/strong&gt;, which tells me devs are looking for practical, plug-and-play examples.&lt;/p&gt; &lt;p&gt;Here's the Repo: &lt;a href="https://github.com/Arindam200/awesome-ai-apps"&gt;https://github.com/Arindam200/awesome-ai-apps&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You’ll find side-by-side implementations across multiple frameworks so you can compare approaches:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;LangChain + LangGraph&lt;/li&gt; &lt;li&gt;LlamaIndex&lt;/li&gt; &lt;li&gt;Agno&lt;/li&gt; &lt;li&gt;CrewAI&lt;/li&gt; &lt;li&gt;Google ADK&lt;/li&gt; &lt;li&gt;OpenAI Agents SDK&lt;/li&gt; &lt;li&gt;AWS Strands Agent&lt;/li&gt; &lt;li&gt;Pydantic AI&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The repo has a mix of:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Starter agents&lt;/strong&gt; (quick examples you can build on)&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Simple agents&lt;/strong&gt; (finance tracker, HITL workflows, newsletter generator)&lt;/li&gt; &lt;li&gt;&lt;strong&gt;MCP agents&lt;/strong&gt; (GitHub analyzer, doc QnA, Couchbase ReAct)&lt;/li&gt; &lt;li&gt;&lt;strong&gt;RAG apps&lt;/strong&gt; (resume optimizer, PDF chatbot, OCR doc/image processor)&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Advanced agents&lt;/strong&gt; (multi-stage research, AI trend mining, LinkedIn job finder)&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;I’ll be adding more examples regularly.&lt;/p&gt; &lt;p&gt;If you’ve been wanting to try out different agent frameworks side-by-side or just need a working example to kickstart your own, you might find something useful here.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Arindam_200"&gt; /u/Arindam_200 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1mpe8ep/a_free_goldmine_of_ai_agent_examples_templates/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1mpe8ep/a_free_goldmine_of_ai_agent_examples_templates/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1mpe8ep/a_free_goldmine_of_ai_agent_examples_templates/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-08-13T19:34:59+00:00</published>
  </entry>
  <entry>
    <id>t3_1mpxwij</id>
    <title>Launching “MCP Warp”: securely share your local MCP (launch perks inside)</title>
    <updated>2025-08-14T11:25:48+00:00</updated>
    <author>
      <name>/u/hrntknr</name>
      <uri>https://old.reddit.com/user/hrntknr</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/mcp/comments/1mpxwij/launching_mcp_warp_securely_share_your_local_mcp/"&gt; &lt;img alt="Launching “MCP Warp”: securely share your local MCP (launch perks inside)" src="https://external-preview.redd.it/Nm0xZTl3Y3F6eWlmMSxMwf-vGk8DJl9xfCsy05tmt7Ovb4SkNjWgTxAxHAyv.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=b0f3dbe673467890aee69f751a927958c41ca514" title="Launching “MCP Warp”: securely share your local MCP (launch perks inside)" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;h1&gt;What is it?&lt;/h1&gt; &lt;p&gt;I just released &lt;a href="https://www.mcpwarp.app/"&gt;MCP Warp&lt;/a&gt; — a CLI tool that lets you securely expose your local Model Context Protocol (MCP) server to the internet without port forwarding or complicated infra.&lt;/p&gt; &lt;p&gt;While you can roll your own secure exposure with OAuth 2.1, it’s notoriously complex. With MCP Warp, you skip all that setup and make your MCP safely accessible from anywhere with a single command. I’ll drop a demo video in the comments right after posting.&lt;/p&gt; &lt;h1&gt;Launch perks&lt;/h1&gt; &lt;p&gt;&lt;strong&gt;Coupon&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;REDDITLAUNCH100 → 100% off for 1 month.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Social share campaign&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Post about MCP Warp on any social platform (hashtag #MCPWarp optional), submit your post URL, and get a lifetime free license (one per person; campaign may end without notice).&lt;/p&gt; &lt;p&gt;Details &amp;amp; form: &lt;a href="https://www.mcpwarp.app/promotion/"&gt;https://www.mcpwarp.app/promotion/&lt;/a&gt;&lt;/p&gt; &lt;h1&gt;Links&lt;/h1&gt; &lt;p&gt;Website: &lt;a href="https://www.mcpwarp.app/"&gt;https://www.mcpwarp.app/&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Web Portal: &lt;a href="https://portal.mcpwarp.app/"&gt;https://portal.mcpwarp.app/&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/hrntknr"&gt; /u/hrntknr &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://v.redd.it/k80znwcqzyif1"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1mpxwij/launching_mcp_warp_securely_share_your_local_mcp/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1mpxwij/launching_mcp_warp_securely_share_your_local_mcp/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-08-14T11:25:48+00:00</published>
  </entry>
  <entry>
    <id>t3_1mpzffa</id>
    <title>Bright Data debuts free tier of The Web MCP to support real-time AI interaction with the web</title>
    <updated>2025-08-14T12:35:54+00:00</updated>
    <author>
      <name>/u/joshemaggie</name>
      <uri>https://old.reddit.com/user/joshemaggie</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/mcp/comments/1mpzffa/bright_data_debuts_free_tier_of_the_web_mcp_to/"&gt; &lt;img alt="Bright Data debuts free tier of The Web MCP to support real-time AI interaction with the web" src="https://external-preview.redd.it/uxab8EqGYUgLIOa3TkjRAGkxF5v0yVJ7cWb-B7ox34c.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=a1fc9f090cf9f7cf5940a9ff75b3110bbcd9311f" title="Bright Data debuts free tier of The Web MCP to support real-time AI interaction with the web" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/joshemaggie"&gt; /u/joshemaggie &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://siliconangle.com/2025/08/12/bright-data-debuts-free-tier-web-mcp-support-real-time-ai-interaction-web/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1mpzffa/bright_data_debuts_free_tier_of_the_web_mcp_to/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1mpzffa/bright_data_debuts_free_tier_of_the_web_mcp_to/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-08-14T12:35:54+00:00</published>
  </entry>
  <entry>
    <id>t3_1mq5bqy</id>
    <title>Mcp orchestrator</title>
    <updated>2025-08-14T16:21:56+00:00</updated>
    <author>
      <name>/u/National-Bad-9661</name>
      <uri>https://old.reddit.com/user/National-Bad-9661</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I want to create some kind of orchestrator MCP. It means it will serve right assets/resources to client which will actually solve any task from jira. &lt;/p&gt; &lt;p&gt;Do you have any ideas or actually saw something like this implemented? &lt;/p&gt; &lt;p&gt;I appreciate in advance for some kind of informations 🙂&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/National-Bad-9661"&gt; /u/National-Bad-9661 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1mq5bqy/mcp_orchestrator/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1mq5bqy/mcp_orchestrator/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1mq5bqy/mcp_orchestrator/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-08-14T16:21:56+00:00</published>
  </entry>
  <entry>
    <id>t3_1mq7jfu</id>
    <title>Minimal Java shim to MCP-enable API</title>
    <updated>2025-08-14T17:41:00+00:00</updated>
    <author>
      <name>/u/seannol</name>
      <uri>https://old.reddit.com/user/seannol</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Not an SDK or anything (yet I guess), but seems to me a lot of folks are going to want to expose existing web services as simple remote servers. No auth, no streaming, just call-and-response tools. Here's a working example with minimal (not zero) dependencies, written as an Azure Function but easily translatable to other environments: &lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://github.com/seanno/shutdownhook/blob/main/lorawan-azure/iofuncs/src/main/java/com/shutdownhook/lorawan2/WitterMCP.java"&gt;Remote MCP Server&lt;/a&gt; (for a little LoRaWAN-based sensor database)&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/seanno/shutdownhook/blob/main/toolbox/src/main/java/com/shutdownhook/toolbox/JsonRpc2.java"&gt;JsonRpc2 helper class&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Bug reports always welcome! Written as part of a high-level article covering post-training learning/context options: &lt;a href="https://shutdownhook.com/2025/08/12/ai-models-50-first-dates/"&gt;https://shutdownhook.com/2025/08/12/ai-models-50-first-dates/&lt;/a&gt; &lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/seannol"&gt; /u/seannol &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1mq7jfu/minimal_java_shim_to_mcpenable_api/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1mq7jfu/minimal_java_shim_to_mcpenable_api/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1mq7jfu/minimal_java_shim_to_mcpenable_api/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-08-14T17:41:00+00:00</published>
  </entry>
  <entry>
    <id>t3_1mq3qk9</id>
    <title>User access in SaaS application</title>
    <updated>2025-08-14T15:24:03+00:00</updated>
    <author>
      <name>/u/MGMayhem</name>
      <uri>https://old.reddit.com/user/MGMayhem</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hi Need some input of how to do user access restrictions. I'm experienced in software development in various aspects, but with MCP I'm a noob.&lt;/p&gt; &lt;p&gt;Assume you have a database host with various databases. A user can access their database only.&lt;/p&gt; &lt;p&gt;How do you do this in an MCP setup? Many clients provide either a database in their env settings for the MCP server...is this the way to go? I've looked at the mcp-clickhouse docker solution, but can't get my head around if a client should init its own MCP server instance?&lt;/p&gt; &lt;p&gt;So 10 users would have 10 different instances of the same client, with only the database setting different? Even if this is done, is it then assured that querying outside you own database is prohibited?&lt;/p&gt; &lt;p&gt;It's safe to assume that security checks of the user have been done prior to instantiating the MCP client. (So only db is given to MCP server connection)&lt;/p&gt; &lt;p&gt;Please enlighten med here.:)&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/MGMayhem"&gt; /u/MGMayhem &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1mq3qk9/user_access_in_saas_application/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1mq3qk9/user_access_in_saas_application/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1mq3qk9/user_access_in_saas_application/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-08-14T15:24:03+00:00</published>
  </entry>
  <entry>
    <id>t3_1mqb1fe</id>
    <title>The next step after MCP</title>
    <updated>2025-08-14T19:45:45+00:00</updated>
    <author>
      <name>/u/FaustoIngenium</name>
      <uri>https://old.reddit.com/user/FaustoIngenium</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/mcp/comments/1mqb1fe/the_next_step_after_mcp/"&gt; &lt;img alt="The next step after MCP" src="https://external-preview.redd.it/aNVIU4R1EtfuGqyEPba_JJjl2d715rSx7enc7y5YIjI.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=19fcf69425cb72e1d234b29696e05b9c832e7bc0" title="The next step after MCP" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/FaustoIngenium"&gt; /u/FaustoIngenium &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://github.com/Ingenium-Software/AION"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1mqb1fe/the_next_step_after_mcp/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1mqb1fe/the_next_step_after_mcp/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-08-14T19:45:45+00:00</published>
  </entry>
  <entry>
    <id>t3_1mq2aft</id>
    <title>Python FastMCP 2.11 - authorization code workflow for RemoteAuthProvider</title>
    <updated>2025-08-14T14:29:57+00:00</updated>
    <author>
      <name>/u/Skalisz</name>
      <uri>https://old.reddit.com/user/Skalisz</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hi. I've been trying to understand how new &lt;code&gt;RemoteAuthProvider&lt;/code&gt; class in FastMCP can be used to achieve code authorization OAuth grant.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Should I define custom callback url? If this is handled automaticall, whats its endpoint? &lt;em&gt;Just&lt;/em&gt; &lt;code&gt;/callback&lt;/code&gt;?&lt;/li&gt; &lt;li&gt;&lt;em&gt;How to pass access token in request to the resource server? Where is he generated in that new workflow?&lt;/em&gt;&lt;/li&gt; &lt;/ol&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Skalisz"&gt; /u/Skalisz &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1mq2aft/python_fastmcp_211_authorization_code_workflow/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1mq2aft/python_fastmcp_211_authorization_code_workflow/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1mq2aft/python_fastmcp_211_authorization_code_workflow/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-08-14T14:29:57+00:00</published>
  </entry>
  <entry>
    <id>t3_1mq6xz2</id>
    <title>Announcing Dolt MCP</title>
    <updated>2025-08-14T17:20:01+00:00</updated>
    <author>
      <name>/u/liquidcoffeee</name>
      <uri>https://old.reddit.com/user/liquidcoffeee</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/mcp/comments/1mq6xz2/announcing_dolt_mcp/"&gt; &lt;img alt="Announcing Dolt MCP" src="https://external-preview.redd.it/ZQMT2ggjM78E7C1ZHqPPQyvahEM-4nH1bMbC5GPLJus.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=22d75bf7be7e6792bfaea7555efa3665dc155ea6" title="Announcing Dolt MCP" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Agents need branches&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/liquidcoffeee"&gt; /u/liquidcoffeee &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://www.dolthub.com/blog/2025-08-14-announcing-dolt-mcp/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1mq6xz2/announcing_dolt_mcp/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1mq6xz2/announcing_dolt_mcp/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-08-14T17:20:01+00:00</published>
  </entry>
  <entry>
    <id>t3_1mq3psi</id>
    <title>Key Differences Between MCP Authorization Flow and Standard OAuth 2.0 PKCE Flow</title>
    <updated>2025-08-14T15:23:17+00:00</updated>
    <author>
      <name>/u/vlad-chat</name>
      <uri>https://old.reddit.com/user/vlad-chat</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I've been looking into the specification of the protocol in order to better understand how to implement a proper authentication. I didn't find the standard documentation to be easy to understand and I compiled this list of difference with PKCE. I thought to post it as well.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;&lt;strong&gt;Resource Server Metadata Discovery (RFC 9728)&lt;/strong&gt;: &lt;ul&gt; &lt;li&gt;&lt;strong&gt;MCP&lt;/strong&gt;: Requires MCP servers to implement OAuth 2.0 Protected Resource Metadata (RFC 9728) to advertise authorization server locations via a /.well-known/oauth-protected-resource endpoint. Clients must parse this metadata to discover the authorization server and its capabilities. If an MCP request fails with a 401 Unauthorized, the server must return a WWW-Authenticate header with the metadata URL.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Standard OAuth 2.0 PKCE&lt;/strong&gt;: Does not mandate resource server metadata discovery. Clients typically know the authorization server’s endpoints in advance (e.g., hardcoded or configured) and don’t require dynamic discovery via metadata.&lt;/li&gt; &lt;/ul&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Authorization Server Metadata (RFC 8414)&lt;/strong&gt;: &lt;ul&gt; &lt;li&gt;&lt;strong&gt;MCP&lt;/strong&gt;: Mandates that clients use OAuth 2.0 Authorization Server Metadata (RFC 8414) to obtain authorization server endpoints (e.g., /authorize, /token) and capabilities via /.well-known/oauth-authorization-server. This ensures clients dynamically adapt to server configurations.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Standard OAuth 2.0 PKCE&lt;/strong&gt;: Metadata discovery is optional; clients often rely on preconfigured endpoint URLs.&lt;/li&gt; &lt;/ul&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Resource Parameter (RFC 8707)&lt;/strong&gt;: &lt;ul&gt; &lt;li&gt;&lt;strong&gt;MCP&lt;/strong&gt;: Requires clients to include the resource parameter in both authorization and token requests to explicitly specify the target MCP server (e.g., resource=https%3A%2F%&lt;a href="http://2fmcp.example.com/"&gt;2Fmcp.example.com&lt;/a&gt;). This binds tokens to the intended resource, enhancing security against token misuse.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Standard OAuth 2.0 PKCE&lt;/strong&gt;: The resource parameter is not required and is rarely used unless explicitly needed for audience restriction.&lt;/li&gt; &lt;/ul&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Dynamic Client Registration (RFC 7591)&lt;/strong&gt;: &lt;ul&gt; &lt;li&gt;&lt;strong&gt;MCP&lt;/strong&gt;: Strongly recommends dynamic client registration for MCP clients to obtain client_id automatically, reducing user friction. If not supported, clients must either hardcode client_id or prompt users to register manually.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Standard OAuth 2.0 PKCE&lt;/strong&gt;: Dynamic registration is optional and less emphasized; public clients typically use a pre-registered client_id.&lt;/li&gt; &lt;/ul&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Token Audience Validation&lt;/strong&gt;: &lt;ul&gt; &lt;li&gt;&lt;strong&gt;MCP&lt;/strong&gt;: Mandates strict audience validation per RFC 8707. MCP servers must verify that access tokens are issued specifically for them (e.g., via the aud claim) and reject tokens intended for other resources. Token passthrough to upstream APIs is explicitly forbidden.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Standard OAuth 2.0 PKCE&lt;/strong&gt;: Audience validation is not strictly required unless specified by the implementation. Token passthrough risks are less explicitly addressed.&lt;/li&gt; &lt;/ul&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Security Requirements&lt;/strong&gt;: &lt;ul&gt; &lt;li&gt;&lt;strong&gt;MCP&lt;/strong&gt;: Enforces OAuth 2.1 security practices (e.g., HTTPS for all endpoints, PKCE mandatory for public clients, short-lived tokens, refresh token rotation) and explicitly addresses threats like token theft, open redirection, and confused deputy attacks.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Standard OAuth 2.0 PKCE&lt;/strong&gt;: Follows OAuth 2.0 security considerations (RFC 6749, RFC 6819), with PKCE as an extension (RFC 7636). OAuth 2.1 (draft) adds stricter requirements, but these are not universally adopted in standard PKCE flows.&lt;/li&gt; &lt;/ul&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Error Handling&lt;/strong&gt;: &lt;ul&gt; &lt;li&gt;&lt;strong&gt;MCP&lt;/strong&gt;: Specifies detailed error handling (e.g., 401 for invalid/expired tokens, 403 for insufficient scopes, 400 for malformed requests) and requires WWW-Authenticate headers for unauthorized responses.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Standard OAuth 2.0 PKCE&lt;/strong&gt;: Error handling follows OAuth 2.0 (RFC 6749), but WWW-Authenticateheaders and metadata discovery are not mandatory.&lt;/li&gt; &lt;/ul&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Transport-Specific Considerations&lt;/strong&gt;: &lt;ul&gt; &lt;li&gt;&lt;strong&gt;MCP&lt;/strong&gt;: Authorization is optional and applies only to HTTP-based transports. Non-HTTP transports (e.g., STDIO) use alternative credential mechanisms, and other transports must follow their own security best practices.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Standard OAuth 2.0 PKCE&lt;/strong&gt;: Assumes HTTP-based communication exclusively, with no provisions for non-HTTP transports.&lt;/li&gt; &lt;/ul&gt;&lt;/li&gt; &lt;/ol&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/vlad-chat"&gt; /u/vlad-chat &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1mq3psi/key_differences_between_mcp_authorization_flow/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1mq3psi/key_differences_between_mcp_authorization_flow/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1mq3psi/key_differences_between_mcp_authorization_flow/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-08-14T15:23:17+00:00</published>
  </entry>
  <entry>
    <id>t3_1mqeno4</id>
    <title>Here's why 1st party MCP servers aren’t as secure as you think they are...</title>
    <updated>2025-08-14T21:58:22+00:00</updated>
    <author>
      <name>/u/beckywsss</name>
      <uri>https://old.reddit.com/user/beckywsss</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/mcp/comments/1mqeno4/heres_why_1st_party_mcp_servers_arent_as_secure/"&gt; &lt;img alt="Here's why 1st party MCP servers aren’t as secure as you think they are..." src="https://preview.redd.it/746t6j0942jf1.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=7eb9bcee324cebeffe0ee122f2c623993991e439" title="Here's why 1st party MCP servers aren’t as secure as you think they are..." /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Just because companies with trusted reputations create 1st party servers, don't assume they're automatically &amp;quot;safe by default.&amp;quot; We've already seen some security fails (like with &lt;a href="https://www.theregister.com/2025/06/18/asana_mcp_server_bug/"&gt;Asana's MCP server&lt;/a&gt;, which had a pretty nasty security bug earlier this summer) to prove that this point.&lt;/p&gt; &lt;p&gt;While 1st party MCP servers have less vulnerabilities than the many, many untrusted / 3rd party servers out there, they still aren't 100% safe. &lt;/p&gt; &lt;p&gt;&lt;strong&gt;Why 1st Party Servers Aren’t Safe Enough&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Don't assume that sticking to first-party servers eliminates the threats you might expect with unvetted 3rd-party servers. While it reduces risk compared to public, unverified servers, it doesn’t eliminate all risk. Here’s why:&lt;/p&gt; &lt;h1&gt;Reason #1: Risk of Data Exposure&lt;/h1&gt; &lt;p&gt;Because MCP servers often connect directly to core business systems like CRMs, ERPs, and email platforms, there’s a real risk of overexposure when LLM agents access this data (especially in autonomous workflows). For example, a Salesforce MCP server might surface internal meeting notes, customer PII, or financial details.&lt;/p&gt; &lt;p&gt;MCP workflows are dynamic; they don’t benefit from the same strict schemas or access controls as traditional APIs. Over-permissioned agents may request and expose sensitive data without clear visibility.&lt;/p&gt; &lt;p&gt;(Data exposure is what happened with Asana in June of this year, btw.)&lt;/p&gt; &lt;p&gt;&lt;strong&gt;2. Risk of Prompt Injection&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Even if a 1st party server is secure, the data it accesses may not be. Just look at a Gmail MCP server: if an email includes a prompt like &lt;em&gt;“reply confirming the wire transfer,”&lt;/em&gt; it could fool an LLM into taking action.&lt;/p&gt; &lt;p&gt;These attacks (AKA &lt;strong&gt;prompt injection&lt;/strong&gt; attacks) can be particularly dangerous because:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;They originate from external data sources&lt;/li&gt; &lt;li&gt;They exploit LLMs’ tendency to follow instructions&lt;/li&gt; &lt;li&gt;They often evade traditional input validation&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;3. Risk of Decentralized Adoption / Shadow MCP Servers&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;One of the more subtle risks of MCP usage is the fragmentation of adoption across teams. Engineers, analysts, and operations personnel may each spin up their own local MCP servers, where some are trusted, some are outdated, and some are incorrectly configured.&lt;/p&gt; &lt;p&gt;This decentralized behavior leads to inconsistent security postures, unknown / unverified tools, pissed of CISOs and difficulty scaling across an org.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;MCP Middleware Is Your Friend&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;1st party MCP servers provide a false sense of security. Adding a middleware platforms like &lt;a href="https://mcpmanager.ai/"&gt;&lt;strong&gt;MCP Manager&lt;/strong&gt;&lt;/a&gt; (which offers a gateway between agents + servers) can:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Enforce centralized governance and approval workflows&lt;/li&gt; &lt;li&gt;Secure agent-to-server traffic with robust policy enforcement&lt;/li&gt; &lt;li&gt;Log and monitor sensitive interactions,&lt;/li&gt; &lt;li&gt;Accelerate safe AI adoption across teams&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;You can check out our &lt;a href="https://mcpmanager.ai/protection-tracker/"&gt;&lt;strong&gt;Threat Protection Checklist&lt;/strong&gt;&lt;/a&gt; as well to see what threats we currently prevent. (And what's planned.)&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/beckywsss"&gt; /u/beckywsss &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://i.redd.it/746t6j0942jf1.png"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1mqeno4/heres_why_1st_party_mcp_servers_arent_as_secure/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1mqeno4/heres_why_1st_party_mcp_servers_arent_as_secure/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-08-14T21:58:22+00:00</published>
  </entry>
  <entry>
    <id>t3_1mq4vvj</id>
    <title>MCP Anywhere: Consolidate and Serve your MCP Tools from Anywhere</title>
    <updated>2025-08-14T16:06:03+00:00</updated>
    <author>
      <name>/u/Prettynotthatbad</name>
      <uri>https://old.reddit.com/user/Prettynotthatbad</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/mcp/comments/1mq4vvj/mcp_anywhere_consolidate_and_serve_your_mcp_tools/"&gt; &lt;img alt="MCP Anywhere: Consolidate and Serve your MCP Tools from Anywhere" src="https://external-preview.redd.it/iwczCd7cOlNfcpBAsMe565LjF23b13IRLiRWeCMCWyY.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=dda1270a0ae092c6a9d73153f1f93631ac6d5593" title="MCP Anywhere: Consolidate and Serve your MCP Tools from Anywhere" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;We wanted a place where we could host whatever MCP servers we wanted and share with others on our team. We built MCP Anywhere with Oauth (mcp library), docker sandboxing, auto-load (using Claude), env variables, tool selection, and http/stdio interface.&lt;/p&gt; &lt;p&gt;Very much beta right now, but wanted to share our work with others in the hopes that 1) It helps give a quick start to those with a similar problem, 2)We would love help to make it better.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Prettynotthatbad"&gt; /u/Prettynotthatbad &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://github.com/locomotive-agency/mcp-anywhere"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1mq4vvj/mcp_anywhere_consolidate_and_serve_your_mcp_tools/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1mq4vvj/mcp_anywhere_consolidate_and_serve_your_mcp_tools/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-08-14T16:06:03+00:00</published>
  </entry>
  <entry>
    <id>t3_1mq6znv</id>
    <title>Upcoming Book – Fundamentals of Cognitive Programming</title>
    <updated>2025-08-14T17:21:36+00:00</updated>
    <author>
      <name>/u/elgrhydev</name>
      <uri>https://old.reddit.com/user/elgrhydev</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/mcp/comments/1mq6znv/upcoming_book_fundamentals_of_cognitive/"&gt; &lt;img alt="Upcoming Book – Fundamentals of Cognitive Programming" src="https://preview.redd.it/7nchdk44r0jf1.jpeg?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=15de37658dbb634bf36b8e1b481bf658be0eb3a7" title="Upcoming Book – Fundamentals of Cognitive Programming" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/elgrhydev"&gt; /u/elgrhydev &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://i.redd.it/7nchdk44r0jf1.jpeg"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1mq6znv/upcoming_book_fundamentals_of_cognitive/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1mq6znv/upcoming_book_fundamentals_of_cognitive/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-08-14T17:21:36+00:00</published>
  </entry>
  <entry>
    <id>t3_1mq1o86</id>
    <title>Introducing Minnas: a remote MCP server for prompt/resource management and sharing</title>
    <updated>2025-08-14T14:06:33+00:00</updated>
    <author>
      <name>/u/senor_buendia</name>
      <uri>https://old.reddit.com/user/senor_buendia</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/mcp/comments/1mq1o86/introducing_minnas_a_remote_mcp_server_for/"&gt; &lt;img alt="Introducing Minnas: a remote MCP server for prompt/resource management and sharing" src="https://b.thumbs.redditmedia.com/UxMIWHXjTIZs3ndDy3xEnDXcq9QkIa8sq7HRHKuWqqc.jpg" title="Introducing Minnas: a remote MCP server for prompt/resource management and sharing" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hey &lt;a href="/r/mcp"&gt;r/mcp&lt;/a&gt;!&lt;/p&gt; &lt;p&gt;I've built a oauth compliant remote MCP server for sharing and managing resources/prompts.&lt;/p&gt; &lt;p&gt;I've posted pictures of how a flow might look.&lt;/p&gt; &lt;p&gt;You start by creating an account on &lt;a href="https://minnas.io"&gt;https://minnas.io&lt;/a&gt;, from there you can create collections to group your prompts and resources by project. You then connect minnas to your local MCP client using &lt;a href="https://api.minnas.io/mcp"&gt;https://api.minnas.io/mcp&lt;/a&gt;, whereupon an oauth flow will be launched where you can authenticate with your new account.&lt;/p&gt; &lt;p&gt;You then get immediate access to your prompts and resources added to your account. I've tested it with claude code and cursor. In claude code you can invoke prompts using /minnas:collection-name::prompt-name, and resources using \@minnas:collection-name::resource-name.&lt;/p&gt; &lt;p&gt;I've created a few starter collections you can add to your account here, &lt;a href="https://www.minnas.io/directory"&gt;https://www.minnas.io/directory&lt;/a&gt;, but you can also publish your own and let other people save them to their accounts! This is done using the share/publish button on a collection. You can only publish PUBLIC or PUBLIC_READ collections.&lt;/p&gt; &lt;p&gt;You can also share a collection with your team without using the directory, just set the privacy to PUBLIC or PUBLIC_READ and share the URL with them!&lt;/p&gt; &lt;p&gt;Hope you like it! I think it's a really convenient alternative to prompt directories since it's integrated directly into your MCP client, but would love to hear your thoughts! Also, if you find any bugs or something that doesn't work as expected, please do let me know!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/senor_buendia"&gt; /u/senor_buendia &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/gallery/1mq1o86"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1mq1o86/introducing_minnas_a_remote_mcp_server_for/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1mq1o86/introducing_minnas_a_remote_mcp_server_for/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-08-14T14:06:33+00:00</published>
  </entry>
  <entry>
    <id>t3_1mpl0vp</id>
    <title>Local-first self hostable MCP dashboard</title>
    <updated>2025-08-14T00:01:53+00:00</updated>
    <author>
      <name>/u/stevelacy</name>
      <uri>https://old.reddit.com/user/stevelacy</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/mcp/comments/1mpl0vp/localfirst_self_hostable_mcp_dashboard/"&gt; &lt;img alt="Local-first self hostable MCP dashboard" src="https://preview.redd.it/2kvuiuf0lvif1.jpeg?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=a4d94d86d6e441af93f94ee010189769c3d686bd" title="Local-first self hostable MCP dashboard" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I was tired of not having a way to run/manage my mcp servers locally so I built this. It's open source, self-hostable, and runs the containers in docker. &lt;a href="https://github.com/stephenlacy/mathom"&gt;https://github.com/stephenlacy/mathom&lt;/a&gt; &lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/stevelacy"&gt; /u/stevelacy &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://i.redd.it/2kvuiuf0lvif1.jpeg"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1mpl0vp/localfirst_self_hostable_mcp_dashboard/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1mpl0vp/localfirst_self_hostable_mcp_dashboard/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-08-14T00:01:53+00:00</published>
  </entry>
  <entry>
    <id>t3_1mq99yg</id>
    <title>We built a fast, safe (yet another) Rust SDK for MCP — here’s why</title>
    <updated>2025-08-14T18:42:12+00:00</updated>
    <author>
      <name>/u/guyernest</name>
      <uri>https://old.reddit.com/user/guyernest</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/mcp/comments/1mq99yg/we_built_a_fast_safe_yet_another_rust_sdk_for_mcp/"&gt; &lt;img alt="We built a fast, safe (yet another) Rust SDK for MCP — here’s why" src="https://external-preview.redd.it/aGY3IYlBhLJp-xF0MUPtj6aBhnK3RH3zNj_7RwAh4gI.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=b89b9b895b345866899ea92787d3443c3ea60948" title="We built a fast, safe (yet another) Rust SDK for MCP — here’s why" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;h2&gt;Why Rust?&lt;/h2&gt; &lt;p&gt;For developers coming from other programming languages, Rust can feel challenging at first. But today, most code is written with the help of AI — and Rust has the best compiler for catching bugs early. That makes it one of the safest and most reliable languages to build in.&lt;/p&gt; &lt;p&gt;It’s also blazing fast and memory-safe. In our tests, Python-based MCP servers feel sluggish compared to Rust-based ones.&lt;/p&gt; &lt;h2&gt;Why yet another MCP SDK?&lt;/h2&gt; &lt;p&gt;MCP is still young — the protocol has already seen 3–4 versions in under a year. Existing Rust MCP SDKs are incomplete or immature, so we decided to do something different: use our AI agents to port the official TypeScript SDK into Rust, while applying our long-standing Rust expertise to make it clean, well-structured, and production-ready.&lt;/p&gt; &lt;p&gt;We think it’s the most complete Rust SDK for MCP clients and servers so far, and we’d love for you to try it.&lt;/p&gt; &lt;h2&gt;Why Open Source?&lt;/h2&gt; &lt;p&gt;The foundations of computing — from operating systems to web servers — have always thrived as open source. MCP clients and servers should be no different. Open source allows anyone to audit for security, understand how things work, and contribute improvements. That’s how the MCP ecosystem will grow.&lt;/p&gt; &lt;p&gt;Your turn What features do you want to see in this SDK? What would make your MCP development easier?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/guyernest"&gt; /u/guyernest &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://github.com/paiml/rust-mcp-sdk"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1mq99yg/we_built_a_fast_safe_yet_another_rust_sdk_for_mcp/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1mq99yg/we_built_a_fast_safe_yet_another_rust_sdk_for_mcp/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-08-14T18:42:12+00:00</published>
  </entry>
  <entry>
    <id>t3_1mqfg6t</id>
    <title>Where do you see MCP in 2 years?</title>
    <updated>2025-08-14T22:28:44+00:00</updated>
    <author>
      <name>/u/WakkaBoy8</name>
      <uri>https://old.reddit.com/user/WakkaBoy8</uri>
    </author>
    <content type="html">&amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/WakkaBoy8"&gt; /u/WakkaBoy8 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1mqfg6t/where_do_you_see_mcp_in_2_years/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1mqfg6t/where_do_you_see_mcp_in_2_years/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1mqfg6t/where_do_you_see_mcp_in_2_years/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-08-14T22:28:44+00:00</published>
  </entry>
  <entry>
    <id>t3_1mqc3fa</id>
    <title>With MCP Docs Servers You'll Never Run Out Of Fresh Documentation</title>
    <updated>2025-08-14T20:23:40+00:00</updated>
    <author>
      <name>/u/Active-Fuel-49</name>
      <uri>https://old.reddit.com/user/Active-Fuel-49</uri>
    </author>
    <content type="html">&amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Active-Fuel-49"&gt; /u/Active-Fuel-49 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://www.i-programmer.info/news/90-tools/18248-with-mcp-docs-servers-youll-never-run-out-of-fresh-documentation-.html"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1mqc3fa/with_mcp_docs_servers_youll_never_run_out_of/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1mqc3fa/with_mcp_docs_servers_youll_never_run_out_of/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-08-14T20:23:40+00:00</published>
  </entry>
  <entry>
    <id>t3_1mqluqs</id>
    <title>MCP sampling - crazy?</title>
    <updated>2025-08-15T03:09:18+00:00</updated>
    <author>
      <name>/u/orarbel1</name>
      <uri>https://old.reddit.com/user/orarbel1</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;MCP sampling allows the server to ask the client to run LLM calls using the client api tokens.&lt;/p&gt; &lt;p&gt;Meaning incurring variable cost on the end user.&lt;/p&gt; &lt;p&gt;Am I the only one that thinks this is widely dangerous?&lt;/p&gt; &lt;p&gt;A malicious server with a client that doesn’t implement protections can inflict very high costs on the user by asking the client to run many llm calls with a lot of tokens.&lt;/p&gt; &lt;p&gt;What am I missing?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/orarbel1"&gt; /u/orarbel1 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1mqluqs/mcp_sampling_crazy/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1mqluqs/mcp_sampling_crazy/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1mqluqs/mcp_sampling_crazy/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-08-15T03:09:18+00:00</published>
  </entry>
  <entry>
    <id>t3_1mq1bh3</id>
    <title>Running MCPs locally is a security time-bomb - Here's how to secure them (Guide &amp; Docker Files)</title>
    <updated>2025-08-14T13:53:23+00:00</updated>
    <author>
      <name>/u/Swimming_Pound258</name>
      <uri>https://old.reddit.com/user/Swimming_Pound258</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Installing and running MCP servers locally gives them unlimited &lt;strong&gt;access to all your files&lt;/strong&gt;, creating risks of data exfiltration, token theft, virus infection and propagation, or data encryption attacks (Ransomware).&lt;/p&gt; &lt;p&gt;Lots of people (including many I've spotted in this community) are deploying MCP servers locally without recognizing these risks. So myself and my team wanted to show people how to use local MCPs securely.&lt;/p&gt; &lt;p&gt;Here's our free, &lt;a href="https://github.com/MCP-Manager/MCP-Checklists/blob/main/README.md"&gt;comprehensive guide&lt;/a&gt;, &lt;strong&gt;complete with Docker files you can use to containerize&lt;/strong&gt; your local MCP servers and get &lt;strong&gt;full control&lt;/strong&gt; over what files and resources are exposed to them.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Note: Even with containerization there's still a risk around MCP access to your computer's connected network, but our guide has some recommendations on how to handle this vulnerability too.&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Guide here:&lt;/strong&gt; &lt;a href="https://github.com/MCP-Manager/MCP-Checklists/blob/main/infrastructure/docs/how-to-run-mcp-servers-securely.md"&gt;https://github.com/MCP-Manager/MCP-Checklists/blob/main/infrastructure/docs/how-to-run-mcp-servers-securely.md&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Hope this helps you - there's always going to be a need for some local MCPs so let's use them securely!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Swimming_Pound258"&gt; /u/Swimming_Pound258 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1mq1bh3/running_mcps_locally_is_a_security_timebomb_heres/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1mq1bh3/running_mcps_locally_is_a_security_timebomb_heres/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1mq1bh3/running_mcps_locally_is_a_security_timebomb_heres/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-08-14T13:53:23+00:00</published>
  </entry>
  <entry>
    <id>t3_1mq8l3s</id>
    <title>How to easily add OAuth authentication to MCP</title>
    <updated>2025-08-14T18:17:03+00:00</updated>
    <author>
      <name>/u/hrntknr</name>
      <uri>https://old.reddit.com/user/hrntknr</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;As many posts have noted, adding OAuth to an MCP server quickly runs into problems that typical OAuth proxies don’t address—&lt;strong&gt;OAuth 2.1 support&lt;/strong&gt;, &lt;strong&gt;dynamic client registration&lt;/strong&gt;, and related .well-known metadata. On top of that, subtle differences across MCP clients make it hard to build while you’re still mapping out those nuances.&lt;/p&gt; &lt;p&gt;To address this, I built &lt;a href="https://github.com/sigbit/mcp-auth-proxy"&gt;&lt;strong&gt;MCP Auth Proxy (mcp-auth-proxy)&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;.&lt;/strong&gt; It’s an MCP-focused authentication proxy that offloads the OAuth work. Put it in front of your MCP server to require sign-in (e.g., Google/GitHub), safely expose it to the internet, and access your local MCP from tools like &lt;strong&gt;Claude Web&lt;/strong&gt;.&lt;/p&gt; &lt;p&gt;If you want an even simpler option, check out MCP Warp—a SaaS that combines an &lt;strong&gt;MCP OAuth proxy with an ngrok-like tunnel&lt;/strong&gt;:&lt;br /&gt; &lt;a href="https://www.reddit.com/r/mcp/comments/1mpxwij/launching_mcp_warp_securely_share_your_local_mcp/"&gt;https://www.reddit.com/r/mcp/comments/1mpxwij/launching_mcp_warp_securely_share_your_local_mcp/&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/hrntknr"&gt; /u/hrntknr &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1mq8l3s/how_to_easily_add_oauth_authentication_to_mcp/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1mq8l3s/how_to_easily_add_oauth_authentication_to_mcp/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1mq8l3s/how_to_easily_add_oauth_authentication_to_mcp/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-08-14T18:17:03+00:00</published>
  </entry>
  <entry>
    <id>t3_1mq6btf</id>
    <title>Is it just me or does it seem like most MCP servers are lazy and miss the point of MCP?</title>
    <updated>2025-08-14T16:58:21+00:00</updated>
    <author>
      <name>/u/otothea</name>
      <uri>https://old.reddit.com/user/otothea</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/mcp/comments/1mq6btf/is_it_just_me_or_does_it_seem_like_most_mcp/"&gt; &lt;img alt="Is it just me or does it seem like most MCP servers are lazy and miss the point of MCP?" src="https://preview.redd.it/ryjkmnp6d0jf1.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=41f1327fcd4fc44cecab3a72a9b0fc8de0676cc4" title="Is it just me or does it seem like most MCP servers are lazy and miss the point of MCP?" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;One of the most common refrains I hear about MCP is &amp;quot;It's just an API&amp;quot;. I 1000% DISAGREE, but I understand why some people think that:&lt;/p&gt; &lt;p&gt;The reality is most MCP servers ARE JUST APIs. But that's not a problem with MCP, that's a problem with lazy engineers crapping out software interfaces based on a fad without fully understanding why the interface exists in the first place.&lt;/p&gt; &lt;p&gt;The power of MCP tooling is the dynamic aspect of the tools. The image above demonstrates how I think a good MCP server should be designed. It should look more like a headless application and less like a REST API.&lt;/p&gt; &lt;p&gt;If you are building MCPs, it is your responsibility to make tool systems that are good stewards of context and work in tandem with the AI.&lt;/p&gt; &lt;p&gt;What do you think?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/otothea"&gt; /u/otothea &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://i.redd.it/ryjkmnp6d0jf1.png"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1mq6btf/is_it_just_me_or_does_it_seem_like_most_mcp/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1mq6btf/is_it_just_me_or_does_it_seem_like_most_mcp/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-08-14T16:58:21+00:00</published>
  </entry>
  <entry>
    <id>t3_1h7pl2v</id>
    <title>Awesome MCP Servers – A curated list of awesome Model Context Protocol (MCP) servers</title>
    <updated>2024-12-06T01:23:42+00:00</updated>
    <author>
      <name>/u/punkpeye</name>
      <uri>https://old.reddit.com/user/punkpeye</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/mcp/comments/1h7pl2v/awesome_mcp_servers_a_curated_list_of_awesome/"&gt; &lt;img alt="Awesome MCP Servers – A curated list of awesome Model Context Protocol (MCP) servers" src="https://external-preview.redd.it/BlNcrgap-6pz7IdUsbomFSVuqp_BB8tTUEFVIk6by18.jpg?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=f25629e364c60f72e8d88ce33c5b1f90a326c065" title="Awesome MCP Servers – A curated list of awesome Model Context Protocol (MCP) servers" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/punkpeye"&gt; /u/punkpeye &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://github.com/punkpeye/awesome-mcp-servers/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1h7pl2v/awesome_mcp_servers_a_curated_list_of_awesome/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1h7pl2v/awesome_mcp_servers_a_curated_list_of_awesome/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2024-12-06T01:23:42+00:00</published>
  </entry>
  <entry>
    <id>t3_1h7qe88</id>
    <title>Join the Model Context Protocol Discord Server!</title>
    <updated>2024-12-06T02:04:10+00:00</updated>
    <author>
      <name>/u/punkpeye</name>
      <uri>https://old.reddit.com/user/punkpeye</uri>
    </author>
    <content type="html">&amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/punkpeye"&gt; /u/punkpeye &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://glama.ai/mcp/discord"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1h7qe88/join_the_model_context_protocol_discord_server/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1h7qe88/join_the_model_context_protocol_discord_server/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2024-12-06T02:04:10+00:00</published>
  </entry>
</feed>
