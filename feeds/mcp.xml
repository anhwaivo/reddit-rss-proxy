<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>/r/mcp/.rss</id>
  <title>Model Context Protocol (MCP)</title>
  <updated>2025-09-03T16:39:06+00:00</updated>
  <link href="https://old.reddit.com/r/mcp/" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <icon>https://www.redditstatic.com/icon.png/</icon>
  <subtitle>The Model Context Protocol is an open standard that enables developers to build secure, two-way connections between their data sources and AI-powered tools</subtitle>
  <entry>
    <id>t3_1n6buqh</id>
    <title>A CLI tool to create MCP (Model Context Protocol) applications with ease.</title>
    <updated>2025-09-02T06:08:45+00:00</updated>
    <author>
      <name>/u/ObjectiveQuarter7299</name>
      <uri>https://old.reddit.com/user/ObjectiveQuarter7299</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/mcp/comments/1n6buqh/a_cli_tool_to_create_mcp_model_context_protocol/"&gt; &lt;img alt="A CLI tool to create MCP (Model Context Protocol) applications with ease." src="https://external-preview.redd.it/8TTS-gmyE789u4OecFGyLtwZ-sJs8mkW_hNdxBdNEpM.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=2d4d3e7beb4c290b1901ca095a75fe3f539aa605" title="A CLI tool to create MCP (Model Context Protocol) applications with ease." /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;&lt;a href="https://my-mcp-hub.github.io/mcp-kit/"&gt;MCP Kit&lt;/a&gt; is a toolkit for creating MCP (Model Context Protocol) applications with ease, enabling developers to build MCP-compliant servers and client applications.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/ObjectiveQuarter7299"&gt; /u/ObjectiveQuarter7299 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://github.com/my-mcp-hub/mcp-kit"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1n6buqh/a_cli_tool_to_create_mcp_model_context_protocol/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1n6buqh/a_cli_tool_to_create_mcp_model_context_protocol/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-09-02T06:08:45+00:00</published>
  </entry>
  <entry>
    <id>t3_1n5v5t9</id>
    <title>Just launched: flight search MCP server with real price information</title>
    <updated>2025-09-01T17:34:36+00:00</updated>
    <author>
      <name>/u/g2c_93</name>
      <uri>https://old.reddit.com/user/g2c_93</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hey everyone! üëã&lt;/p&gt; &lt;p&gt;I've been working on this for the past few weeks and finally got it live. It's a &lt;strong&gt;Flight Search MCP Server&lt;/strong&gt; that gives you real-time flight prices, booking URLs, and travel info. The MCP interface that works with Cursor, VS Code, Windsurf, and other AI coding tools. I automated this in Claude for my own trips and vacations. It feels like magic and I'm here for it.&lt;/p&gt; &lt;h2&gt;What it does&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;üõ´ &lt;strong&gt;Flight Search&lt;/strong&gt; - Find cheapest flights, nonstop routes, and price ranges across multiple APIs with one tool&lt;/li&gt; &lt;li&gt;üìÖ &lt;strong&gt;Smart Calendar Search&lt;/strong&gt; - See prices across entire months or weeks with flexible date options&lt;br /&gt;&lt;/li&gt; &lt;li&gt;üåç &lt;strong&gt;Complete Travel Database&lt;/strong&gt; - Access airports, cities, airlines, and countries data instantly&lt;/li&gt; &lt;li&gt;üîç &lt;strong&gt;Flight Discovery&lt;/strong&gt; - Find popular routes, alternative destinations, and special deals&lt;/li&gt; &lt;li&gt;üîó &lt;strong&gt;Direct Booking URLs&lt;/strong&gt; - Get instant booking links to book flights (no need to use it)&lt;/li&gt; &lt;li&gt;‚öôÔ∏è &lt;strong&gt;Advanced Filtering&lt;/strong&gt; - Filter by price, flight class, direct flights, etc.&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Why I built this&lt;/h2&gt; &lt;p&gt;I was tired of having to manually search multiple flight sites, relying on google flights, and checking travel blogs/apps This MCP server bridges that gap - you get comprehensive flight data without any coding setup in your preferred AI client that supports MCP.&lt;/p&gt; &lt;h2&gt;How to install&lt;/h2&gt; &lt;p&gt;&lt;strong&gt;Option 1: One-click via Smithery&lt;/strong&gt; (recommended for non-engineers)&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Go to &lt;a href="https://smithery.ai/server/@gvzq/flight-mcp"&gt;Smithery&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Click install&lt;/li&gt; &lt;li&gt;Works with Cursor, VS Code, Windsurf, Cline automatically&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;Option 2: Manual setup&lt;/strong&gt; Only do this if you know what you're doing. Add this to your IDE's MCP config file:&lt;/p&gt; &lt;p&gt;&lt;code&gt;json { &amp;quot;mcpServers&amp;quot;: { &amp;quot;flight-search&amp;quot;: { &amp;quot;command&amp;quot;: &amp;quot;npx&amp;quot;, &amp;quot;args&amp;quot;: [&amp;quot;mcp-remote&amp;quot;, &amp;quot;https://flights.fctolabs.com/mcp&amp;quot;] } } } &lt;/code&gt;&lt;/p&gt; &lt;h2&gt;Example usage&lt;/h2&gt; &lt;p&gt;```typescript // Find cheapest flights from LAX to Tokyo search_flights({ origin: &amp;quot;LAX&amp;quot;, destination: &amp;quot;NRT&amp;quot;, depart_date: &amp;quot;2025-11-15&amp;quot;, options: { flight_type: &amp;quot;cheapest&amp;quot;, api_version: &amp;quot;v2&amp;quot; } })&lt;/p&gt; &lt;p&gt;// Get monthly price calendar search_calendar({ origin: &amp;quot;AUS&amp;quot;, destination: &amp;quot;TYO&amp;quot;, date: &amp;quot;2025-11&amp;quot;, options: { calendar_type: &amp;quot;month&amp;quot;, trip_length: 7 } }) ```&lt;/p&gt; &lt;h2&gt;What you get back&lt;/h2&gt; &lt;p&gt;Real flight data with prices, airlines, booking URLs, and all the details you'd expect. The server aggregates from multiple sources.&lt;/p&gt; &lt;h2&gt;Pricing&lt;/h2&gt; &lt;p&gt;&lt;strong&gt;Free forever&lt;/strong&gt; - I will keep this free in my server. I have no usage limits. I'm covering the API costs myself for now.&lt;/p&gt; &lt;h2&gt;What's next&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;Chat interface in my website at &lt;a href="https://flights.fctolabs.com/"&gt;https://flights.fctolabs.com/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Would love to hear what you think! Anyone building travel apps or just want to experiment with flight data in their AI coding workflow?&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Links:&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://flights.fctolabs.com/"&gt;Live demo&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://smithery.ai/server/@gvzq/flight-mcp"&gt;Install on Smithery&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Let me know if you run into any issues or have feature requests! üöÄ&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/g2c_93"&gt; /u/g2c_93 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1n5v5t9/just_launched_flight_search_mcp_server_with_real/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1n5v5t9/just_launched_flight_search_mcp_server_with_real/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1n5v5t9/just_launched_flight_search_mcp_server_with_real/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-09-01T17:34:36+00:00</published>
  </entry>
  <entry>
    <id>t3_1n6ey9c</id>
    <title>How to build a production grade MCP for UI design systems</title>
    <updated>2025-09-02T09:32:20+00:00</updated>
    <author>
      <name>/u/tinkererhead</name>
      <uri>https://old.reddit.com/user/tinkererhead</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Folks, If you can refer to any good articles or blogs? or github links to repo&lt;br /&gt; that would be helpful&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/tinkererhead"&gt; /u/tinkererhead &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1n6ey9c/how_to_build_a_production_grade_mcp_for_ui_design/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1n6ey9c/how_to_build_a_production_grade_mcp_for_ui_design/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1n6ey9c/how_to_build_a_production_grade_mcp_for_ui_design/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-09-02T09:32:20+00:00</published>
  </entry>
  <entry>
    <id>t3_1n6m70r</id>
    <title>Techniques for Summarizing Agent Message History (and Why It Matters for Performance)</title>
    <updated>2025-09-02T15:13:15+00:00</updated>
    <author>
      <name>/u/ialijr</name>
      <uri>https://old.reddit.com/user/ialijr</uri>
    </author>
    <content type="html">&amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/ialijr"&gt; /u/ialijr &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="/r/AI_Agents/comments/1n6lo58/techniques_for_summarizing_agent_message_history/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1n6m70r/techniques_for_summarizing_agent_message_history/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1n6m70r/techniques_for_summarizing_agent_message_history/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-09-02T15:13:15+00:00</published>
  </entry>
  <entry>
    <id>t3_1n6na8r</id>
    <title>Jigglypuff MCP: a simple MacOS mouse jiggler your AI can toggle</title>
    <updated>2025-09-02T15:54:36+00:00</updated>
    <author>
      <name>/u/taysteekakes</name>
      <uri>https://old.reddit.com/user/taysteekakes</uri>
    </author>
    <content type="html">&amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/taysteekakes"&gt; /u/taysteekakes &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="/r/vibecoding/comments/1n6n9pc/jigglypuff_mcp_a_simple_macos_mouse_jiggler_your/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1n6na8r/jigglypuff_mcp_a_simple_macos_mouse_jiggler_your/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1n6na8r/jigglypuff_mcp_a_simple_macos_mouse_jiggler_your/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-09-02T15:54:36+00:00</published>
  </entry>
  <entry>
    <id>t3_1n6xt3f</id>
    <title>Local Memory MCP</title>
    <updated>2025-09-02T22:34:21+00:00</updated>
    <author>
      <name>/u/d2000e</name>
      <uri>https://old.reddit.com/user/d2000e</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;We just launched Local Memory MCP!&lt;/p&gt; &lt;p&gt;It enables memory across all of your LLMs, coding agents, and AI tools. It integrates out of the box with any MCP-enabled LLM, and has a local REST API for non-MCP agents (or agents that don't use MCP well). It is written in GoLang and has the most straightforward installation:&lt;/p&gt; &lt;p&gt;npm install or copy the agent prompt&lt;/p&gt; &lt;p&gt;Once installed, you just run 'local-memory start'&lt;/p&gt; &lt;p&gt;It's just that simple.&lt;/p&gt; &lt;p&gt;Check out &lt;a href="http://localmemory.co"&gt;http://localmemory.co&lt;/a&gt; for details and documentation.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/d2000e"&gt; /u/d2000e &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1n6xt3f/local_memory_mcp/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1n6xt3f/local_memory_mcp/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1n6xt3f/local_memory_mcp/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-09-02T22:34:21+00:00</published>
  </entry>
  <entry>
    <id>t3_1n6jbvs</id>
    <title>Evaluating Tool-Oriented Architectures for AI Agents</title>
    <updated>2025-09-02T13:22:16+00:00</updated>
    <author>
      <name>/u/Great_Particular2024</name>
      <uri>https://old.reddit.com/user/Great_Particular2024</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/mcp/comments/1n6jbvs/evaluating_tooloriented_architectures_for_ai/"&gt; &lt;img alt="Evaluating Tool-Oriented Architectures for AI Agents" src="https://external-preview.redd.it/TkR-vqdArZP79bMqjhRJ3j3iTYBCbusTn37YHxG2K_w.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=cf4a2ac9cf228e9b733094fbd355b0e7c2b5230c" title="Evaluating Tool-Oriented Architectures for AI Agents" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Choosing between LangChain/ReAct and MCP for chatbot design isn‚Äôt just about libraries it‚Äôs about architecture. This post compares the orchestration-based approach of LangChain with the protocol-driven model of MCP, showing how each handles tool use, scalability, and developer ergonomics. If you‚Äôre curious about where MCP fits into the evolving AI agent landscape, this breakdown highlights the trade-offs clearly.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Great_Particular2024"&gt; /u/Great_Particular2024 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://glama.ai/blog/2025-09-02-comparing-mcp-vs-lang-chainre-act-for-chatbots"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1n6jbvs/evaluating_tooloriented_architectures_for_ai/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1n6jbvs/evaluating_tooloriented_architectures_for_ai/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-09-02T13:22:16+00:00</published>
  </entry>
  <entry>
    <id>t3_1n716bo</id>
    <title>If you‚Äôre learning MCP and want to see how it‚Äôs used in the wild, this might help</title>
    <updated>2025-09-03T01:02:41+00:00</updated>
    <author>
      <name>/u/data_diva_0902</name>
      <uri>https://old.reddit.com/user/data_diva_0902</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Saw a bunch of great comments in here on whether learning MCP makes sense for career growth ‚Äî we‚Äôve been building on MCP for a while and can say: it‚Äôs absolutely a skill worth leveling up right now.&lt;/p&gt; &lt;p&gt;We‚Äôre launching a major platform update that shows how real product and data teams are putting MCP agents into workflows ‚Äî and how it‚Äôs helping people move fast without relying on devs for every change.&lt;/p&gt; &lt;p&gt;We‚Äôre doing a free, live walkthrough that‚Äôs part launch, part &amp;quot;here‚Äôs how this is actually being used.&amp;quot;&lt;/p&gt; &lt;p&gt;Could be useful if you‚Äôre trying to figure out where MCP fits into real-world stacks, hiring conversations, or just want to see what a modern AI workflow looks like.&lt;/p&gt; &lt;p&gt;Here‚Äôs the link if you‚Äôre curious: &lt;a href="https://www.thoughtspot.com/spotlight-series-boundaryless?utm_source=livestream&amp;amp;utm_medium=webinar&amp;amp;utm_term=post1&amp;amp;utm_content=reddit&amp;amp;utm_campaign=wb_productspotlight_boundaryless25"&gt;https://www.thoughtspot.com/spotlight-series-boundaryless?utm_source=livestream&amp;amp;utm_medium=webinar&amp;amp;utm_term=post1&amp;amp;utm_content=reddit&amp;amp;utm_campaign=wb_productspotlight_boundaryless25&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/data_diva_0902"&gt; /u/data_diva_0902 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1n716bo/if_youre_learning_mcp_and_want_to_see_how_its/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1n716bo/if_youre_learning_mcp_and_want_to_see_how_its/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1n716bo/if_youre_learning_mcp_and_want_to_see_how_its/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-09-03T01:02:41+00:00</published>
  </entry>
  <entry>
    <id>t3_1n6qh6l</id>
    <title>MCP Developer Summit Europe in London, üá¨üáß in October 2nd has revealed its agenda and speakers.</title>
    <updated>2025-09-02T17:53:14+00:00</updated>
    <author>
      <name>/u/Jordi_Mon_Companys</name>
      <uri>https://old.reddit.com/user/Jordi_Mon_Companys</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/mcp/comments/1n6qh6l/mcp_developer_summit_europe_in_london_in_october/"&gt; &lt;img alt="MCP Developer Summit Europe in London, üá¨üáß in October 2nd has revealed its agenda and speakers." src="https://external-preview.redd.it/QP8SrFHc_ohA_wndjfvLBk-255vWkGVb5FfAm0NTYS8.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=f1dbb440b6ddabe9b40171661a4c231a03a1c9b9" title="MCP Developer Summit Europe in London, üá¨üáß in October 2nd has revealed its agenda and speakers." /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Jordi_Mon_Companys"&gt; /u/Jordi_Mon_Companys &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://mcpdevsummit.ai/agenda/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1n6qh6l/mcp_developer_summit_europe_in_london_in_october/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1n6qh6l/mcp_developer_summit_europe_in_london_in_october/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-09-02T17:53:14+00:00</published>
  </entry>
  <entry>
    <id>t3_1n6nhcs</id>
    <title>MCP Explained in Under 10 minutes (with examples)</title>
    <updated>2025-09-02T16:02:00+00:00</updated>
    <author>
      <name>/u/jackwoth</name>
      <uri>https://old.reddit.com/user/jackwoth</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/mcp/comments/1n6nhcs/mcp_explained_in_under_10_minutes_with_examples/"&gt; &lt;img alt="MCP Explained in Under 10 minutes (with examples)" src="https://external-preview.redd.it/mwMFwW-Lmv8MNdHzXEpHd0uNhbAFv13J3IYC5afFVfw.jpeg?width=320&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=f31a9b04dff7589654cfcc9edbaa40171265d5c1" title="MCP Explained in Under 10 minutes (with examples)" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;One of the best videos I have come across that explains MCP in under 10 minutes.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/jackwoth"&gt; /u/jackwoth &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://www.youtube.com/watch?v=IYpt25GHB1U&amp;amp;lc=UgyMKdiEd_0z0VPksGJ4AaABAg"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1n6nhcs/mcp_explained_in_under_10_minutes_with_examples/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1n6nhcs/mcp_explained_in_under_10_minutes_with_examples/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-09-02T16:02:00+00:00</published>
  </entry>
  <entry>
    <id>t3_1n6otae</id>
    <title>We built a CLI tool to run MCP server evals</title>
    <updated>2025-09-02T16:51:07+00:00</updated>
    <author>
      <name>/u/matt8p</name>
      <uri>https://old.reddit.com/user/matt8p</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/mcp/comments/1n6otae/we_built_a_cli_tool_to_run_mcp_server_evals/"&gt; &lt;img alt="We built a CLI tool to run MCP server evals" src="https://preview.redd.it/evymbi4x6smf1.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=635c82e3d859ab90dccadbb8c9d5959feda6f474" title="We built a CLI tool to run MCP server evals" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Last week, we shipped out a demo of MCP server evals within the MCPJam GUI. It was a good visualization of MCP evals, but the feedback we got was to build a CLI version of it. We shipped that over the long weekend. &lt;/p&gt; &lt;h2&gt;How to set it up&lt;/h2&gt; &lt;p&gt;All instructions can be found on &lt;a href="https://www.npmjs.com/package/@mcpjam/cli"&gt;our NPM package&lt;/a&gt;. &lt;/p&gt; &lt;ol&gt; &lt;li&gt;&lt;p&gt;Install the CLI with &lt;code&gt;npm install -g @mcpjam/cli&lt;/code&gt;. &lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;Set up your environment JSON. This is similar to how you would set up a &lt;code&gt;mcp.json&lt;/code&gt; file for Claude Desktop. You also need to provide an API key from your favorite foundation model. &lt;/p&gt;&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;&lt;code&gt;local-env.json&lt;/code&gt; &lt;code&gt;json { &amp;quot;mcpServers&amp;quot;: { &amp;quot;weather-server&amp;quot;: { &amp;quot;command&amp;quot;: &amp;quot;python&amp;quot;, &amp;quot;args&amp;quot;: [&amp;quot;weather_server.py&amp;quot;], &amp;quot;env&amp;quot;: { &amp;quot;WEATHER_API_KEY&amp;quot;: &amp;quot;${WEATHER_API_KEY}&amp;quot; } }, }, &amp;quot;providerApiKeys&amp;quot;: { &amp;quot;anthropic&amp;quot;: &amp;quot;${ANTHROPIC_API_KEY}&amp;quot;, &amp;quot;openai&amp;quot;: &amp;quot;${OPENAI_API_KEY}&amp;quot;, &amp;quot;deepseek&amp;quot;: &amp;quot;${DEEPSEEK_API_KEY}&amp;quot; } } &lt;/code&gt;&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Set up your tests. You define a prompt (which is like what you would ask an LLM), and then define the expected tools to be executed. &lt;/li&gt; &lt;/ol&gt; &lt;p&gt;&lt;code&gt;weather-tests.json&lt;/code&gt; &lt;code&gt;json { &amp;quot;tests&amp;quot;: [ { &amp;quot;title&amp;quot;: &amp;quot;Test weather tool&amp;quot;, &amp;quot;prompt&amp;quot;: &amp;quot;What's the weather in San Francisco?&amp;quot;, &amp;quot;expectedTools&amp;quot;: [&amp;quot;get_weather&amp;quot;], &amp;quot;model&amp;quot;: { &amp;quot;id&amp;quot;: &amp;quot;claude-3-5-sonnet-20241022&amp;quot;, &amp;quot;provider&amp;quot;: &amp;quot;anthropic&amp;quot; }, &amp;quot;selectedServers&amp;quot;: [&amp;quot;weather-server&amp;quot;], &amp;quot;advancedConfig&amp;quot;: { &amp;quot;instructions&amp;quot;: &amp;quot;You are a helpful weather assistant&amp;quot;, &amp;quot;temperature&amp;quot;: 0.1, &amp;quot;maxSteps&amp;quot;: 5, &amp;quot;toolChoice&amp;quot;: &amp;quot;auto&amp;quot; } } ] } &lt;/code&gt;&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Run the evals with the command. Make sure the &lt;code&gt;local-dev.json&lt;/code&gt; and &lt;code&gt;weather-tests.json&lt;/code&gt; are in the same directory. &lt;code&gt; mcpjam evals run --tests weather-tests.json --environment local-dev.json &lt;/code&gt;&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;What's next&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;What we built so far is very bare bones, but is the foundation of MCP evals + testing. We're building features like chained queries, sophisticated assertions, and LLM as a judge in future updates. &lt;/p&gt; &lt;p&gt;&lt;strong&gt;MCPJam&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;If MCPJam has been useful to you, take a moment to add a star on Github and leave a comment. Feedback help others discover it and help us improve the project!&lt;/p&gt; &lt;p&gt;&lt;a href="https://github.com/MCPJam/inspector"&gt;https://github.com/MCPJam/inspector&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Join our community: &lt;a href="https://discord.com/invite/JEnDtz8X6z"&gt;Discord server&lt;/a&gt; for any questions. &lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/matt8p"&gt; /u/matt8p &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://i.redd.it/evymbi4x6smf1.png"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1n6otae/we_built_a_cli_tool_to_run_mcp_server_evals/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1n6otae/we_built_a_cli_tool_to_run_mcp_server_evals/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-09-02T16:51:07+00:00</published>
  </entry>
  <entry>
    <id>t3_1n6n0v5</id>
    <title>7 things MCP devs think are fine but actually break under real traffic</title>
    <updated>2025-09-02T15:44:43+00:00</updated>
    <author>
      <name>/u/onestardao</name>
      <uri>https://old.reddit.com/user/onestardao</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/mcp/comments/1n6n0v5/7_things_mcp_devs_think_are_fine_but_actually/"&gt; &lt;img alt="7 things MCP devs think are fine but actually break under real traffic" src="https://preview.redd.it/gj75lnv9vrmf1.jpeg?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=e242e8ba45b96250109fd11e4f82020268c1b6d9" title="7 things MCP devs think are fine but actually break under real traffic" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;hi everyone, i‚Äôm BigBig. earlier i published the Problem Map of 16 reproducible AI failure modes. now i‚Äôve expanded it into a Global Fix Map with 300+ pages covering providers, retrieval stacks, embeddings, vector stores, prompt integrity, reasoning, ops, eval, and local runners. here‚Äôs what this means for MCP users.&lt;/p&gt; &lt;p&gt;[Problem Map]&lt;/p&gt; &lt;p&gt;&lt;a href="https://github.com/onestardao/WFGY/blob/main/ProblemMap/README.md"&gt;https://github.com/onestardao/WFGY/blob/main/ProblemMap/README.md&lt;/a&gt;&lt;/p&gt; &lt;hr /&gt; &lt;h3&gt;7 things MCP devs think vs what actually happens&lt;/h3&gt; &lt;p&gt;‚Äî&lt;/p&gt; &lt;ol&gt; &lt;li&gt;‚Äúvector similarity is high, retrieval is fine.‚Äù&lt;/li&gt; &lt;/ol&gt; &lt;ul&gt; &lt;li&gt;&lt;p&gt;Reality: high cosine ‚â† correct meaning. metric mismatch or normalization drift produces wrong snippets.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;Fix: see &lt;em&gt;Embedding ‚â† Semantic&lt;/em&gt; and &lt;em&gt;RAG VectorDB&lt;/em&gt;. verify ŒîS(question, context) ‚â§ 0.45.&lt;/p&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;‚Äî&lt;/p&gt; &lt;ol&gt; &lt;li&gt;‚Äújson mode keeps tool calls safe.‚Äù&lt;/li&gt; &lt;/ol&gt; &lt;ul&gt; &lt;li&gt;&lt;p&gt;Reality: partial or truncated json passes silently and breaks downstream.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;Fix: enforce &lt;em&gt;Data Contracts&lt;/em&gt; + &lt;em&gt;JSON guardrails&lt;/em&gt;. validate with 5 seed variations.&lt;/p&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;‚Äî&lt;/p&gt; &lt;ol&gt; &lt;li&gt;‚Äúhybrid retrievers are always better.‚Äù&lt;/li&gt; &lt;/ol&gt; &lt;ul&gt; &lt;li&gt;&lt;p&gt;Reality: analyzer mismatch + query parsing split often make hybrid worse than single retriever.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;Fix: unify tokenizer/analyzer first, then add rerankers if ŒîS per retriever ‚â§ 0.50.&lt;/p&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;‚Äî&lt;/p&gt; &lt;ol&gt; &lt;li&gt;‚Äúserver booted, so first call should work.‚Äù&lt;/li&gt; &lt;/ol&gt; &lt;ul&gt; &lt;li&gt;&lt;p&gt;Reality: MCP often calls retrievers before index/secret is ready. first call fails.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;Fix: add &lt;em&gt;Bootstrap Ordering&lt;/em&gt; / &lt;em&gt;Deployment Deadlock&lt;/em&gt; warm-up fences.&lt;/p&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;‚Äî&lt;/p&gt; &lt;ol&gt; &lt;li&gt;‚Äúprompt injection is only a prompt problem.‚Äù&lt;/li&gt; &lt;/ol&gt; &lt;ul&gt; &lt;li&gt;&lt;p&gt;Reality: schema drift and role confusion at system level override tools.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;Fix: enforce &lt;em&gt;role order, citation first, memory fences&lt;/em&gt;. see &lt;em&gt;Safety Prompt Integrity&lt;/em&gt;.&lt;/p&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;‚Äî&lt;/p&gt; &lt;ol&gt; &lt;li&gt;‚Äúlocal models are just slower, otherwise same.‚Äù&lt;/li&gt; &lt;/ol&gt; &lt;ul&gt; &lt;li&gt;&lt;p&gt;Reality: Ollama / llama.cpp / vLLM change tokenizers, rope, kv cache. retrieval alignment drifts.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;Fix: use &lt;em&gt;LocalDeploy Inference&lt;/em&gt; guardrails. measure ŒîS at window joins ‚â§ 0.50.&lt;/p&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;‚Äî&lt;/p&gt; &lt;ol&gt; &lt;li&gt;‚Äúlogs are optional, debugging can wait.‚Äù&lt;/li&gt; &lt;/ol&gt; &lt;ul&gt; &lt;li&gt;&lt;p&gt;Reality: without snippet ‚ÜîÔ∏è citation tables, bugs look random and can‚Äôt be traced.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;Fix: use &lt;em&gt;Retrieval Traceability&lt;/em&gt; schema. always log snippet_id, section_id, offsets, tokens.&lt;/p&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;‚Äî&lt;/p&gt; &lt;h3&gt;how to use the Global Fix Map in MCP&lt;/h3&gt; &lt;ol&gt; &lt;li&gt;&lt;p&gt;Route by symptom: wrong citations ‚Üí No.8; high sim wrong meaning ‚Üí No.5; first call fail ‚Üí No.14/15.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;Apply minimal repair: warm-up fence, analyzer parity, schema contract, idempotency keys.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;Verify: ŒîS ‚â§ 0.45, coverage ‚â• 0.70, Œª convergent across 3 paraphrases.&lt;/p&gt;&lt;/li&gt; &lt;/ol&gt; &lt;hr /&gt; &lt;p&gt;ask&lt;/p&gt; &lt;p&gt;for mcp devs here: would you prefer a checklist for secure tool calls, a retrieval recipe for vector stores, or a local deploy parity kit first? all feedback goes into the next pages of the Fix Map.&lt;/p&gt; &lt;p&gt;Thanks for reading my work &lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/onestardao"&gt; /u/onestardao &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://i.redd.it/gj75lnv9vrmf1.jpeg"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1n6n0v5/7_things_mcp_devs_think_are_fine_but_actually/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1n6n0v5/7_things_mcp_devs_think_are_fine_but_actually/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-09-02T15:44:43+00:00</published>
  </entry>
  <entry>
    <id>t3_1n6t5yb</id>
    <title>Vercel added zero config support for deploying MCP servers</title>
    <updated>2025-09-02T19:33:20+00:00</updated>
    <author>
      <name>/u/Dapper-Inevitable413</name>
      <uri>https://old.reddit.com/user/Dapper-Inevitable413</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Vercel now supports &lt;a href="https://xmcp.dev/"&gt;xmcp&lt;/a&gt;, a framework for building and shipping MCP servers with TypeScript, with zero-configuration.&lt;/p&gt; &lt;p&gt;xmcp uses file-based routing to create tools for your MCP server.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;my-project/ ‚îú‚îÄ‚îÄ src/ ‚îÇ ‚îú‚îÄ‚îÄ middleware.ts ‚îÇ ‚îî‚îÄ‚îÄ tools/ ‚îÇ ‚îú‚îÄ‚îÄ greet.ts ‚îÇ ‚îú‚îÄ‚îÄ search.ts ‚îú‚îÄ‚îÄ package.json ‚îú‚îÄ‚îÄ tsconfig.json ‚îî‚îÄ‚îÄ xmcp.config.ts &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;File-based routing using xmcp&lt;/p&gt; &lt;p&gt;Once you've created a file for your tool, you can use a default export in a way that feels familiar to many other file-based routing frameworks. Below, we create a &amp;quot;greeting&amp;quot; tool.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;// src/tools/greet.ts import { z } from &amp;quot;zod&amp;quot;; import { type InferSchema } from &amp;quot;xmcp&amp;quot;; export const schema = { name: z.string().describe(&amp;quot;The name of the user to greet&amp;quot;), }; // Tool metadata export const metadata = { name: &amp;quot;greet&amp;quot;, description: &amp;quot;Greet the user&amp;quot;, }; export default async function greet({ name }: InferSchema&amp;lt;typeof schema&amp;gt;) { const result = `Hello, ${name}!`; return { content: [{ type: &amp;quot;text&amp;quot;, text: result }], }; } &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Learn more about &lt;a href="https://vercel.com/docs/frameworks/backend/xmcp"&gt;deploying xmcp to Vercel&lt;/a&gt; in the documentation.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Dapper-Inevitable413"&gt; /u/Dapper-Inevitable413 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1n6t5yb/vercel_added_zero_config_support_for_deploying/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1n6t5yb/vercel_added_zero_config_support_for_deploying/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1n6t5yb/vercel_added_zero_config_support_for_deploying/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-09-02T19:33:20+00:00</published>
  </entry>
  <entry>
    <id>t3_1n6ya7r</id>
    <title>Sharing MCPs</title>
    <updated>2025-09-02T22:54:16+00:00</updated>
    <author>
      <name>/u/Prior-Ability6475</name>
      <uri>https://old.reddit.com/user/Prior-Ability6475</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hey- i just built out an MCP and I'm trying to share it with my other friends. The only issue is they are not technical at all. Does anyone have any workarounds or are there platforms that help with this? &lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Prior-Ability6475"&gt; /u/Prior-Ability6475 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1n6ya7r/sharing_mcps/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1n6ya7r/sharing_mcps/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1n6ya7r/sharing_mcps/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-09-02T22:54:16+00:00</published>
  </entry>
  <entry>
    <id>t3_1n6nkup</id>
    <title>I'm working on making sub agents and MCP's much more useful</title>
    <updated>2025-09-02T16:05:29+00:00</updated>
    <author>
      <name>/u/wait-a-minut</name>
      <uri>https://old.reddit.com/user/wait-a-minut</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Sub agents are such a powerful concept &lt;/p&gt; &lt;p&gt;They are more operational, functional, and simple compared to application specific agents that usually involve some business logic etc &lt;/p&gt; &lt;p&gt;I think everyone is under-utilizing sub agents so we built a runtime around that to really expand their usefulness &lt;/p&gt; &lt;p&gt;Here are some things we're really trying to fix &lt;/p&gt; &lt;ol&gt; &lt;li&gt;MCP's aren't useful because they completely pollute your main context&lt;br /&gt;&lt;/li&gt; &lt;li&gt;MCP templates vs configs so you can share them without exposing secrets&lt;br /&gt;&lt;/li&gt; &lt;li&gt;Grouping agents and mcp servers as bundles so you can share them with your team easily&lt;br /&gt;&lt;/li&gt; &lt;li&gt;Grouping sub agents and MCP servers by environments so you can logically group functionality&lt;br /&gt;&lt;/li&gt; &lt;li&gt;Be totally agnostic so you can manage your agents and MCP servers through claude, cursor, etc&lt;br /&gt;&lt;/li&gt; &lt;li&gt;Build your environments and agents into docker container so you can run them anywhere including CICD&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;here's a small snippet of what I'm trying to do &lt;/p&gt; &lt;p&gt;&lt;a href="https://www.tella.tv/video/cloudships-video-bn5s"&gt;https://www.tella.tv/video/cloudships-video-bn5s&lt;/a&gt;&lt;/p&gt; &lt;p&gt;would love some feedback &lt;/p&gt; &lt;p&gt;&lt;a href="https://github.com/cloudshipai/station/"&gt;https://github.com/cloudshipai/station/&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/wait-a-minut"&gt; /u/wait-a-minut &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1n6nkup/im_working_on_making_sub_agents_and_mcps_much/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1n6nkup/im_working_on_making_sub_agents_and_mcps_much/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1n6nkup/im_working_on_making_sub_agents_and_mcps_much/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-09-02T16:05:29+00:00</published>
  </entry>
  <entry>
    <id>t3_1n7d8bi</id>
    <title>[Feedback] Looking for community input on my MCP-first Chatbot</title>
    <updated>2025-09-03T12:18:25+00:00</updated>
    <author>
      <name>/u/FamousButterscotch50</name>
      <uri>https://old.reddit.com/user/FamousButterscotch50</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hi everyone, &lt;/p&gt; &lt;p&gt;I‚Äôve been working on a SaaS app called &lt;strong&gt;CallMyBot&lt;/strong&gt; for the past few months and I‚Äôd love to get your feedback, especially from those of you familiar with the &lt;strong&gt;MCP ecosystem&lt;/strong&gt; and conversational agents. &lt;/p&gt; &lt;h2&gt;Overview&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;Easy integration via a simple &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag&lt;br /&gt;&lt;/li&gt; &lt;li&gt;An &lt;strong&gt;AI agent&lt;/strong&gt; available in both &lt;strong&gt;chat&lt;/strong&gt; and &lt;strong&gt;voice&lt;/strong&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Automatic language detection&lt;/strong&gt; (57 languages supported)&lt;br /&gt;&lt;/li&gt; &lt;li&gt;Customizable via &lt;strong&gt;back-office&lt;/strong&gt; or &lt;strong&gt;JavaScript SDK&lt;/strong&gt;&lt;br /&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Freemium model&lt;/strong&gt; (free plan includes CallMyBot branding)&lt;br /&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Key differentiators&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;MCP support&lt;/strong&gt;, local tools, knowledge bases, instruction overrides&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Hybrid chat/voice experience&lt;/strong&gt; designed to improve engagement and conversions.&lt;br /&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Main use cases&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;Customer support automation&lt;br /&gt;&lt;/li&gt; &lt;li&gt;Lead generation and qualification&lt;br /&gt;&lt;/li&gt; &lt;li&gt;E-commerce (product guidance, upselling)&lt;br /&gt;&lt;/li&gt; &lt;li&gt;Appointment scheduling in real time&lt;br /&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;What I‚Äôd like to know&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;For those already using or exploring MCP, does this integration seem &lt;strong&gt;useful and well-designed&lt;/strong&gt;?&lt;br /&gt;&lt;/li&gt; &lt;li&gt;Do you see any &lt;strong&gt;technical or business blockers&lt;/strong&gt; that might limit adoption?&lt;br /&gt;&lt;/li&gt; &lt;li&gt;From a UX standpoint, does the hybrid chat/voice model feel truly valuable or more like a gimmick?&lt;br /&gt;&lt;/li&gt; &lt;li&gt;Any &lt;strong&gt;must-have features&lt;/strong&gt; you‚Äôd recommend for the next iteration?&lt;br /&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Thanks a lot for your time and feedback. I‚Äôm open to constructive criticism on the technical side, product strategy, or business model.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/FamousButterscotch50"&gt; /u/FamousButterscotch50 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1n7d8bi/feedback_looking_for_community_input_on_my/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1n7d8bi/feedback_looking_for_community_input_on_my/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1n7d8bi/feedback_looking_for_community_input_on_my/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-09-03T12:18:25+00:00</published>
  </entry>
  <entry>
    <id>t3_1n6oq1h</id>
    <title>singularity incoming</title>
    <updated>2025-09-02T16:47:52+00:00</updated>
    <author>
      <name>/u/juanviera23</name>
      <uri>https://old.reddit.com/user/juanviera23</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/mcp/comments/1n6oq1h/singularity_incoming/"&gt; &lt;img alt="singularity incoming" src="https://preview.redd.it/kkhtudyf6smf1.jpeg?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=461b25c23ef216d758ea2207bb97ecd5eaf5ef67" title="singularity incoming" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/juanviera23"&gt; /u/juanviera23 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://i.redd.it/kkhtudyf6smf1.jpeg"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1n6oq1h/singularity_incoming/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1n6oq1h/singularity_incoming/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-09-02T16:47:52+00:00</published>
  </entry>
  <entry>
    <id>t3_1n7b55r</id>
    <title>How to handle stateful MCP connections in a load-balanced agentic application?</title>
    <updated>2025-09-03T10:28:27+00:00</updated>
    <author>
      <name>/u/Complex-Time-4287</name>
      <uri>https://old.reddit.com/user/Complex-Time-4287</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I'm building an agentic application where users interact with AI agents. Here's my setup:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Current Architecture:&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Agent supports remote tool calling via MCP (Model Context Protocol)&lt;/li&gt; &lt;li&gt;Each conversation = one agent session (a conversation may involve one or more users).&lt;/li&gt; &lt;li&gt;User requests can be routed to any pod due to load balancing&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;The Problem:&lt;/strong&gt; MCP connections are stateful, but my load balancer can route user requests to different pods. This breaks the stateful connection context that the agent session needs to maintain.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Additional Requirements:&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Need support for elicitation (when agent needs to ask user for clarification/input)&lt;/li&gt; &lt;li&gt;Need support for other MCP events throughout the conversation&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;What I'm looking for:&lt;/strong&gt; How do you handle stateful connections like MCP in a horizontally scaled environment? Are there established patterns for maintaining agent session state across pods?&lt;/p&gt; &lt;p&gt;Any insights on architectural approaches or tools that could help would be greatly appreciated!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Complex-Time-4287"&gt; /u/Complex-Time-4287 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1n7b55r/how_to_handle_stateful_mcp_connections_in_a/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1n7b55r/how_to_handle_stateful_mcp_connections_in_a/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1n7b55r/how_to_handle_stateful_mcp_connections_in_a/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-09-03T10:28:27+00:00</published>
  </entry>
  <entry>
    <id>t3_1n7h471</id>
    <title>Building a ‚Äúlazy-coding‚Äù tool on top of MCP - Askhuman.net - feedback request</title>
    <updated>2025-09-03T14:59:18+00:00</updated>
    <author>
      <name>/u/evets007</name>
      <uri>https://old.reddit.com/user/evets007</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hey folks,&lt;/p&gt; &lt;p&gt;Me and a couple of my buddies are hacking on something we‚Äôve been calling &lt;strong&gt;lazy-coding&lt;/strong&gt;. The idea came out of how we actually use coding agents day-to-day.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;The problem:&lt;/strong&gt;&lt;br /&gt; I run multiple coding agent (Gemini CLI / Claude code) sessions when I‚Äôm building or tweaking something. Sometimes the agent gets stuck in a API error loop (Gemini-cli), or just goes off in a direction I don‚Äôt want especially as the context gets larger. When that happens I have to spin up a new session and re-feed it the service description file (the doc with all the product details). It‚Äôs clunky.&lt;/p&gt; &lt;p&gt;Also ‚Äî when I‚Äôm waiting for an agent to finish a task, I‚Äôm basically stuck staring at the screen. I can‚Äôt step away or do something else without missing when it needs me. Eg. go make myself a drink.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Our approach / solution:&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Soft Human-in-the-loop (model decides)&lt;/strong&gt; ‚Üí Agents can ping me for clarifications, next steps, or questions through a simple chat-style interface. (Can even do longer full remote sessions) &lt;/li&gt; &lt;li&gt;&lt;strong&gt;One MCP endpoint&lt;/strong&gt; ‚Üí Contexts and memory are stored centrally and shared across multiple agent sessions (e.g., Cursor, Claude Code, Gemini CLI).&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Context library + memory management&lt;/strong&gt; ‚Üí I can manage runbooks, procedures, and ‚Äúknowledge snippets‚Äù from a web interface and attach them to agents as needed.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Conditions / triggers&lt;/strong&gt; ‚Üí Manage how and when agents should reach out (instead of blasting me every time).&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;We‚Äôre calling it &lt;a href="https://AskHuman.net?utm_source=chatgpt.com"&gt;&lt;strong&gt;AskHuman&lt;/strong&gt;&lt;/a&gt;. &lt;a href="http://Askhuman.net"&gt;Askhuman.net&lt;/a&gt; It‚Äôs live in alpha and right now we‚Äôre focusing on developers/engineers who use coding agents a lot.&lt;/p&gt; &lt;p&gt;Curious what the MCP crowd thinks:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Does this line up with pain points you‚Äôve hit using coding agents?&lt;/li&gt; &lt;li&gt;Any features you‚Äôd kill off / simplify?&lt;/li&gt; &lt;li&gt;Any big ‚Äúmust-haves‚Äù for making this genuinely useful?&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Appreciate your time. Will be thankful for any feedback. &lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/evets007"&gt; /u/evets007 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1n7h471/building_a_lazycoding_tool_on_top_of_mcp/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1n7h471/building_a_lazycoding_tool_on_top_of_mcp/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1n7h471/building_a_lazycoding_tool_on_top_of_mcp/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-09-03T14:59:18+00:00</published>
  </entry>
  <entry>
    <id>t3_1n7hyn9</id>
    <title>Qualification Results of the Valyrian Games (for LLMs)</title>
    <updated>2025-09-03T15:30:48+00:00</updated>
    <author>
      <name>/u/WouterGlorieux</name>
      <uri>https://old.reddit.com/user/WouterGlorieux</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/mcp/comments/1n7hyn9/qualification_results_of_the_valyrian_games_for/"&gt; &lt;img alt="Qualification Results of the Valyrian Games (for LLMs)" src="https://external-preview.redd.it/MzgZ4oKD7J3HD0m38bZf_TfBVzN9rXFr9aaG32zOaRU.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=8108c59a538998b19b61b2bd109a158dc4e37d86" title="Qualification Results of the Valyrian Games (for LLMs)" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;&lt;a href="https://preview.redd.it/3jzj7krxuymf1.png?width=3553&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=348c45903fe167cacccabd0b0c05a19a4ede9aeb"&gt;https://preview.redd.it/3jzj7krxuymf1.png?width=3553&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=348c45903fe167cacccabd0b0c05a19a4ede9aeb&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Hi all,&lt;/p&gt; &lt;p&gt;I‚Äôm a solo developer and founder of Valyrian Tech. Like any developer these days, I‚Äôm trying to build my own AI. My project is called SERENDIPITY, and I‚Äôm designing it to be LLM-agnostic. So I needed a way to evaluate how all the available LLMs work with my project. We all know how unreliable benchmarks can be, so I decided to run my own evaluations.&lt;/p&gt; &lt;p&gt;I‚Äôm calling these evals the Valyrian Games, kind of like the Olympics of AI. The main thing that will set my evals apart from existing ones is that these will not be static benchmarks, but instead a dynamic competition between LLMs. The first of these games will be a coding challenge. This will happen in two phases:&lt;/p&gt; &lt;p&gt;In the first phase, each LLM must create a coding challenge that is at the limit of its own capabilities, making it as difficult as possible, but it must still be able to solve its own challenge to prove that the challenge is valid. To achieve this, the LLM has access to an MCP server to execute Python code. The challenge can be anything, as long as the final answer is a single integer, so the results can easily be verified.&lt;/p&gt; &lt;p&gt;The first phase also doubles as the qualification to enter the Valyrian Games. So far, I have tested 60+ LLMs, but only 18 have passed the qualifications. You can find the full qualification results here:&lt;/p&gt; &lt;p&gt;&lt;a href="https://github.com/ValyrianTech/ValyrianGamesCodingChallenge"&gt;https://github.com/ValyrianTech/ValyrianGamesCodingChallenge&lt;/a&gt;&lt;/p&gt; &lt;p&gt;These qualification results already give detailed information about how well each LLM is able to handle the instructions in my workflows, and also provide data on the cost and tokens per second.&lt;/p&gt; &lt;p&gt;In the second phase, tournaments will be organised where the LLMs need to solve the challenges made by the other qualified LLMs. I‚Äôm currently in the process of running these games. Stay tuned for the results!&lt;/p&gt; &lt;p&gt;You can follow me here: &lt;a href="https://linktr.ee/ValyrianTech"&gt;https://linktr.ee/ValyrianTech&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Some notes on the Qualification Results:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Currently supported LLM providers: OpenAI, Anthropic, Google, Mistral, DeepSeek, &lt;a href="http://Together.ai"&gt;Together.ai&lt;/a&gt; and Groq.&lt;/li&gt; &lt;li&gt;Some full models perform worse than their mini variants, for example, gpt-5 is unable to complete the qualification successfully, but gpt-5-mini is really good at it.&lt;/li&gt; &lt;li&gt;Reasoning models tend to do worse because the challenges are also on a timer, and I have noticed that a lot of the reasoning models overthink things until the time runs out.&lt;/li&gt; &lt;li&gt;The temperature is set randomly for each run. For most models, this does not make a difference, but I noticed Claude-4-sonnet keeps failing when the temperature is low, but succeeds when it is high (above 0.5)&lt;/li&gt; &lt;li&gt;A high score in the qualification rounds does not necessarily mean the model is better than the others; it just means it is better able to follow the instructions of the automated workflows. For example, devstral-medium-2507 scores exceptionally well in the qualification round, but from the early results I have of the actual games, it is performing very poorly when it needs to solve challenges made by the other qualified LLMs.&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/WouterGlorieux"&gt; /u/WouterGlorieux &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1n7hyn9/qualification_results_of_the_valyrian_games_for/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1n7hyn9/qualification_results_of_the_valyrian_games_for/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1n7hyn9/qualification_results_of_the_valyrian_games_for/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-09-03T15:30:48+00:00</published>
  </entry>
  <entry>
    <id>t3_1n7ci2v</id>
    <title>GMail Manager MCP for Claude Desktop</title>
    <updated>2025-09-03T11:42:55+00:00</updated>
    <author>
      <name>/u/Fantastic_Hornet_654</name>
      <uri>https://old.reddit.com/user/Fantastic_Hornet_654</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/mcp/comments/1n7ci2v/gmail_manager_mcp_for_claude_desktop/"&gt; &lt;img alt="GMail Manager MCP for Claude Desktop" src="https://preview.redd.it/mlqldxmusxmf1.png?width=108&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=1b2b4e4135b650c7481eadb2e90caa856c0e2a96" title="GMail Manager MCP for Claude Desktop" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;&lt;a href="https://github.com/muammar-yacoob/GMail-Manager-MCP#readme"&gt;https://github.com/muammar-yacoob/GMail-Manager-MCP#readme&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Been drowning in Gmail and finally built something to help. This MCP connects Claude Desktop directly to your Gmail so you can start managing your inbox using natural language.&lt;/p&gt; &lt;p&gt;What it does&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Bulk delete promos &amp;amp; newsletters&lt;/li&gt; &lt;li&gt;Auto-organize by project/sender&lt;/li&gt; &lt;li&gt;Summarize long threads&lt;/li&gt; &lt;li&gt;Get insights into Gmail patterns&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Setup takes ~2 minutes with Gmail OAuth. Been using it for a week and I already check my inbox way less now.&lt;/p&gt; &lt;p&gt;It's open source, so feel free to fork/PR. Let me know if you hit issues or have improvement ideas :)&lt;/p&gt; &lt;p&gt;#ClaudeDesktop #Gmail #EmailManagement #Productivity #OpenSource #MCP #InboxZero #EmailOverload #Automation #Claude&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Fantastic_Hornet_654"&gt; /u/Fantastic_Hornet_654 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://i.redd.it/mlqldxmusxmf1.png"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1n7ci2v/gmail_manager_mcp_for_claude_desktop/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1n7ci2v/gmail_manager_mcp_for_claude_desktop/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-09-03T11:42:55+00:00</published>
  </entry>
  <entry>
    <id>t3_1n7fysl</id>
    <title>I condensed latest MCP best practices with FastMCP (Python) and Cloudflare Workers (TypeScript)</title>
    <updated>2025-09-03T14:14:14+00:00</updated>
    <author>
      <name>/u/These_Row_8448</name>
      <uri>https://old.reddit.com/user/These_Row_8448</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/mcp/comments/1n7fysl/i_condensed_latest_mcp_best_practices_with/"&gt; &lt;img alt="I condensed latest MCP best practices with FastMCP (Python) and Cloudflare Workers (TypeScript)" src="https://preview.redd.it/adxgah02iymf1.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=a75a07afe87de021cba0377b8316d5f676f2b114" title="I condensed latest MCP best practices with FastMCP (Python) and Cloudflare Workers (TypeScript)" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hello everyone,&lt;br /&gt; I‚Äôve been experimenting with MCP servers and put together best practices and methodology for building them:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;1. To design your MCP server tools, think in goals, not atomic APIs&lt;/strong&gt;&lt;br /&gt; Agents want outcomes, not call-order complexity. Build tools around low-level use cases.&lt;br /&gt; Example: &lt;code&gt;resolveTicket&lt;/code&gt; ‚Üí create ticket if missing, assign agent if missing, add resolution message, close ticket.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;2. Local Servers security risks&lt;/strong&gt;&lt;br /&gt; MCP servers that run locally have unlimited access to your files. You should limit their access to file system, CPU and memory resources by running them in Docker containers.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;3. Remote servers&lt;/strong&gt;&lt;br /&gt; - Use OAuth 2.1 for auth so your team can easily access your servers&lt;br /&gt; - Avoid over-permissioning by using Role-Based-Access-Control (RBAC)&lt;br /&gt; - Sanitize users input (e.g: don't evalute inputs blindly)&lt;br /&gt; - Use snake_case or dash formats for MCP tool names to maintain client compatibility&lt;/p&gt; &lt;p&gt;&lt;strong&gt;4. Use MCP frameworks&lt;/strong&gt;&lt;br /&gt; For Python developers, use &lt;a href="https://github.com/jlowin/fastmcp"&gt;jlowin/fastmcp&lt;/a&gt;For TypeScript developers, use Cloudflare templates: &lt;a href="https://github.com/cloudflare/ai/tree/main/demos"&gt;cloudflare/ai/demos&lt;/a&gt;&lt;br /&gt; &lt;strong&gt;Note&lt;/strong&gt;: Now that MCP servers support Streamable HTTP events, remote MCP serevrs can be hosted on serverless infrastructures (ephemeral environments) like Cloudflare Workers since the connections aren't long-lived anymore. More about this below.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;5. Return JSON-RPC 2.0 error codes&lt;/strong&gt;&lt;br /&gt; MPC is built on JSON-RPC 2.0 standard for error handling.&lt;br /&gt; You should throw JSON-RPC 2.0 error codes for useful feedback.&lt;/p&gt; &lt;p&gt;In &lt;strong&gt;TypeScript&lt;/strong&gt; (@modelcontextprotocol TypeScript SDK), &lt;strong&gt;return McpError&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;import { McpError, ErrorCode } from &amp;quot;@modelcontextprotocol/sdk&amp;quot;; throw new McpError( ErrorCode.InvalidRequest, &amp;quot;Missing required parameter&amp;quot;, { parameter: &amp;quot;name&amp;quot; } ); &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In &lt;strong&gt;Python&lt;/strong&gt; (FastMCP), &lt;strong&gt;raise ToolError exceptions&lt;/strong&gt;.&lt;br /&gt; &lt;strong&gt;Note:&lt;/strong&gt; you can raise standard Python exception, which are catched by FastMCP's internal middleware and details are sent to the client. However the error details may reveal sensitive data.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;6. MCP transport: use Streamable HTTP, SSE is legacy&lt;/strong&gt;&lt;br /&gt; Model Context protocol can use any transport mechanism.&lt;br /&gt; Implementations are based on HTTP/WebSocket.&lt;br /&gt; Among HTTP, you may have heard of:&lt;br /&gt; - SSE (Server-Sent Events) served through `/sse` and `/messages` endpoints&lt;br /&gt; - Streamable HTTP, serverd through the unique `/mcp` endpoint&lt;br /&gt; SSE is legacy. Why? Because it keeps connections open.&lt;br /&gt; To understand Streamable HTTP, check maat8p great &lt;a href="https://www.reddit.com/r/mcp/comments/1k4f9rz/mcp_sdk_now_supports_streamable_http/"&gt;reddit video&lt;/a&gt;&lt;br /&gt; &lt;strong&gt;Note:&lt;/strong&gt; The MCP server can use Streamable HTTP to implement a fallback mechanism that sets up an SSE connection for sending updates&lt;/p&gt; &lt;p&gt;&lt;strong&gt;7. Expose health endpoints&lt;/strong&gt;&lt;br /&gt; &lt;strong&gt;FastMCP&lt;/strong&gt; handles this with custom routes.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;8. Call MCP tools in your Python app&lt;/strong&gt; using &lt;strong&gt;MCPClient&lt;/strong&gt; from &lt;a href="https://pypi.org/project/python-a2a/"&gt;python_a2a&lt;/a&gt; package.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;9. Call MCP tools in your TypeScript app&lt;/strong&gt; using &lt;a href="https://www.npmjs.com/package/mcp-client/v/1.8.0"&gt;mcp-client&lt;/a&gt; npm package.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;10. Turn existing agents into MCP servers&lt;/strong&gt;&lt;br /&gt; For crewai, use the &lt;code&gt;MCPServerAdapter&lt;/code&gt;&lt;br /&gt; For other agent frameworks, use a&lt;a href="https://github.com/NapthaAI/automcp"&gt;uto-mcp&lt;/a&gt;, which supports LangGraph, Llama Index, OpenAI Agents SDK, Pydantic AI and mcp-agent.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;11&lt;/strong&gt;. &lt;strong&gt;Generate a MCP serer from OpenAPI specification files&lt;/strong&gt;&lt;br /&gt; First, bootstrap your project with fastmcp or a cloudflare template.&lt;br /&gt; Think about how agents will use your MCP server, write a list of low-level use-cases, then provide them along your API specs to an LLM. That's your draft.&lt;/p&gt; &lt;p&gt;If you want to go deeper into details, I made a more complete article available here:&lt;br /&gt; &lt;a href="https://antoninmarxer.hashnode.dev/create-your-own-mcp-servers"&gt;https://antoninmarxer.hashnode.dev/create-your-own-mcp-servers&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Save these GitHub repos, they're awesome:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Curated list of MCP tools, platforms &amp;amp; services: &lt;a href="https://github.com/bh-rat/awesome-mcp-enterprise?tab=readme-ov-file#mcp-directories--marketplaces"&gt;awesome-mcp-enterprise&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Curated list of MCP servers: see &lt;a href="https://github.com/wong2/awesome-mcp-servers?tab=readme-ov-file#official-servers"&gt;awesome-mcp-servers&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Security-centered &lt;a href="https://github.com/MCP-Manager/MCP-Checklists/tree/main?tab=readme-ov-file"&gt;MCP-Checklists&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Thanks for reading me&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/These_Row_8448"&gt; /u/These_Row_8448 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://i.redd.it/adxgah02iymf1.png"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1n7fysl/i_condensed_latest_mcp_best_practices_with/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1n7fysl/i_condensed_latest_mcp_best_practices_with/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-09-03T14:14:14+00:00</published>
  </entry>
  <entry>
    <id>t3_1n7hbpi</id>
    <title>Dingent: An Open-Source, MCP-Based Agent Framework for Rapid Prototyping</title>
    <updated>2025-09-03T15:06:52+00:00</updated>
    <author>
      <name>/u/MahouShoujoIllya</name>
      <uri>https://old.reddit.com/user/MahouShoujoIllya</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/mcp/comments/1n7hbpi/dingent_an_opensource_mcpbased_agent_framework/"&gt; &lt;img alt="Dingent: An Open-Source, MCP-Based Agent Framework for Rapid Prototyping" src="https://b.thumbs.redditmedia.com/SCOcuKGyr2ohy0ykx4Httlnn5e5-0he_6bE31dbj2qg.jpg" title="Dingent: An Open-Source, MCP-Based Agent Framework for Rapid Prototyping" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Dingent is an open-source agent framework fully based on MCP (Model Context Protocol): one command spins up chat UI + API + visual admin + plugin marketplace. It uses the fastmcp library to implement MCP's protocol-driven approach, allowing plugins from the original MCP repository to be adapted with minor modifications for seamless use. Looking for feedback on onboarding, plugin needs, and deeper MCP alignment.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;GitHub Repo:&lt;/strong&gt; &lt;a href="https://github.com/saya-ashen/Dingent"&gt;https://github.com/saya-ashen/Dingent&lt;/a&gt; (If you find it valuable, a Star ‚≠ê would be a huge signal for me to prioritize future development.)&lt;/p&gt; &lt;h1&gt;Why Does This Exist? My Pain Points Building LLM Prototypes:&lt;/h1&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Repetitive Scaffolding:&lt;/strong&gt; For every new idea, I was rebuilding the same stack: a backend for state management (LangGraph), tool/plugin integrations, a React chat frontend, and an admin dashboard.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;The &amp;quot;Headless&amp;quot; Problem:&lt;/strong&gt; It was difficult to give non-technical colleagues a safe and controlled UI to configure assistants or test flows.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Clunky Iteration:&lt;/strong&gt; Switching between different workflows or multi-assistant combinations was tedious.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The core philosophy is to &lt;strong&gt;abstract away 70-80% of this repetitive engineering work&lt;/strong&gt;. The loop should be: Launch -&amp;gt; Configure -&amp;gt; Install Plugins -&amp;gt; Bind to a Workflow -&amp;gt; Iterate. You should only have to focus on your unique domain logic and custom plugins.&lt;/p&gt; &lt;h1&gt;The Core Highlight: An MCP-Based Plugin System&lt;/h1&gt; &lt;p&gt;&lt;strong&gt;Dingent's plugin system is fully based on MCP (Model Context Protocol) principles&lt;/strong&gt;, enabling standardized, protocol-driven connections between agents and external tools/data sources. Existing mcp servers can be adapted with slight modifications to fit Dingent's structure:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Protocol-Driven Capabilities:&lt;/strong&gt; Tool discovery and capability exposure are standardized via MCP's structured API calls and context provisioning, reducing hard-coded logic and implicit coupling between the agent and its tools.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Managed Lifecycle:&lt;/strong&gt; A clear process for installing plugins, handling their dependencies, checking their status, and eventually, managing version upgrades (planned). &lt;strong&gt;This leverages MCP's lifecycle semantics for reliable plugin management.&lt;/strong&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Future-Proof Interoperability:&lt;/strong&gt; Built-in support for MCP opens the door to seamless integration with other MCP-compatible clients and agents. &lt;strong&gt;For instance, you can take code from MCP's reference implementations, make minor tweaks (e.g., directory placement and config adjustments), and drop them into Dingent's&lt;/strong&gt; &lt;code&gt;plugins/&lt;/code&gt; &lt;strong&gt;directory.&lt;/strong&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Community-Friendly:&lt;/strong&gt; It makes it much easier for the community to contribute &amp;quot;plug-and-play&amp;quot; tools, data sources, or debugging utilities.&lt;/li&gt; &lt;/ul&gt; &lt;h1&gt;Current Feature Summary:&lt;/h1&gt; &lt;ul&gt; &lt;li&gt;üöÄ &lt;strong&gt;One-Command Dev Environment:&lt;/strong&gt; &lt;code&gt;uvx dingent dev&lt;/code&gt; launches the entire stack: a frontend chat UI (&lt;code&gt;localhost:3000&lt;/code&gt;), a backend API, and a full admin dashboard (&lt;code&gt;localhost:8000/admin&lt;/code&gt;).&lt;/li&gt; &lt;li&gt;üé® &lt;strong&gt;Visual Configuration:&lt;/strong&gt; Create Assistants, attach plugins, and switch active Workflows from the web-based admin dashboard. No more manually editing YAML files (your config is saved to &lt;code&gt;dingent.toml&lt;/code&gt;).&lt;/li&gt; &lt;li&gt;üîå &lt;strong&gt;Plugin Marketplace:&lt;/strong&gt; A &amp;quot;Market&amp;quot; page in the admin UI allows for one-click downloading of plugins. Dependencies are automatically installed on the first run.&lt;/li&gt; &lt;li&gt;üîó &lt;strong&gt;Decoupled Assistants &amp;amp; Workflows:&lt;/strong&gt; Define an &lt;code&gt;Assistant&lt;/code&gt; (its role and capabilities) separately from a &lt;code&gt;Workflow&lt;/code&gt; (the entry point that activates it), allowing for cleaner management.&lt;/li&gt; &lt;/ul&gt; &lt;h1&gt;Quick Start Guide&lt;/h1&gt; &lt;p&gt;&lt;strong&gt;Prerequisite:&lt;/strong&gt; Install &lt;code&gt;uv&lt;/code&gt; (&lt;code&gt;pipx install uv&lt;/code&gt; or see official docs).&lt;/p&gt; &lt;pre&gt;&lt;code&gt;# 1. Create and enter your new project directory mkdir my-awesome-agent cd my-awesome-agent # 2. Launch the development environment uvx dingent dev &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Next Steps (all via the web UI):&lt;/strong&gt;&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Open the &lt;strong&gt;Admin Dashboard&lt;/strong&gt; (&lt;code&gt;http://localhost:8000/admin&lt;/code&gt;) and navigate to &lt;strong&gt;Settings&lt;/strong&gt; to configure your LLM provider (e.g., model name + API key).&lt;/li&gt; &lt;li&gt;Go to the &lt;strong&gt;Market&lt;/strong&gt; tab and click to download the &amp;quot;GitHub Trending&amp;quot; plugin. ** ` for auto-discovery.)**&lt;/li&gt; &lt;li&gt;Create a new &lt;strong&gt;Assistant&lt;/strong&gt;, give it instructions, and attach the GitHub plugin you just downloaded.&lt;/li&gt; &lt;li&gt;Create a &lt;strong&gt;Workflow&lt;/strong&gt;, bind it to your new Assistant, and set it as the &amp;quot;Current Workflow&amp;quot;.&lt;/li&gt; &lt;li&gt;Open the &lt;strong&gt;Chat UI&lt;/strong&gt; (&lt;code&gt;http://localhost:3000&lt;/code&gt;) and ask: &lt;em&gt;&amp;quot;What are some trending Python repositories today?&amp;quot;&lt;/em&gt;&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;You should see the agent use the plugin to fetch real-time data and give you the answer!&lt;/p&gt; &lt;h1&gt;Current Limitations&lt;/h1&gt; &lt;ul&gt; &lt;li&gt;Plugin ecosystem just starting (need your top 3 asks &lt;strong&gt;‚Äì especially MCP-compatible tools&lt;/strong&gt;)&lt;/li&gt; &lt;li&gt;RBAC / multi-tenant security is minimal right now&lt;/li&gt; &lt;li&gt;Advanced branching / conditional / parallel workflow UI not yet visual‚Äîstill code-extensible underneath&lt;/li&gt; &lt;li&gt;Deep tracing, metrics, and token cost views are WIP designs&lt;/li&gt; &lt;li&gt;&lt;strong&gt;MCP alignment: Fully implemented at the core with protocol-driven plugins; still formalizing version negotiation &amp;amp; remote session semantics. Feedback on this would be invaluable!&lt;/strong&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;What do you think? How can Dingent better align with MCP standards? Share your thoughts here or in the MCP GitHub Discussions.&lt;/strong&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/MahouShoujoIllya"&gt; /u/MahouShoujoIllya &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/gallery/1n7hbpi"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1n7hbpi/dingent_an_opensource_mcpbased_agent_framework/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1n7hbpi/dingent_an_opensource_mcpbased_agent_framework/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-09-03T15:06:52+00:00</published>
  </entry>
  <entry>
    <id>t3_1n7jbhc</id>
    <title>Enabling Human-in-the-Loop Workflows with MCP Elicitation</title>
    <updated>2025-09-03T16:20:18+00:00</updated>
    <author>
      <name>/u/Great_Particular2024</name>
      <uri>https://old.reddit.com/user/Great_Particular2024</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/mcp/comments/1n7jbhc/enabling_humanintheloop_workflows_with_mcp/"&gt; &lt;img alt="Enabling Human-in-the-Loop Workflows with MCP Elicitation" src="https://external-preview.redd.it/ocJLMiVrGirfOuVGs0uUv8Kl7N19nVDBGUIHFIPR9BA.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=da91cba4a8474ed34544bc76247e8074581b7c98" title="Enabling Human-in-the-Loop Workflows with MCP Elicitation" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;AI agents are powerful, but what happens when they shouldn‚Äôt act alone?ü§î &lt;/p&gt; &lt;p&gt;The new Elicitation feature in the Model Context Protocol (MCP) introduces a standardized way for AI to pause, ask clarifying questions, and bring humans directly into the loop. This transforms MCP from a static tool-calling protocol into a framework for interactive, multi-turn workflows whether confirming a financial transaction or resolving ambiguous input. In this article, I unpack how Streamable HTTP powers Elicitation, show real code examples with FastMCP, and explore why this might redefine how we build trustworthy AI systems.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Great_Particular2024"&gt; /u/Great_Particular2024 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://glama.ai/blog/2025-09-03-elicitation-in-mcp-bridging-the-human-ai-gap"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1n7jbhc/enabling_humanintheloop_workflows_with_mcp/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1n7jbhc/enabling_humanintheloop_workflows_with_mcp/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-09-03T16:20:18+00:00</published>
  </entry>
  <entry>
    <id>t3_1n7bo3j</id>
    <title>10 MCP servers that actually make agents useful</title>
    <updated>2025-09-03T10:59:07+00:00</updated>
    <author>
      <name>/u/codes_astro</name>
      <uri>https://old.reddit.com/user/codes_astro</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;When Anthropic dropped the Model Context Protocol (MCP) late last year, I didn‚Äôt think much of it. Another framework, right? But the more I‚Äôve played with it, the more it feels like the missing piece for agent workflows.&lt;/p&gt; &lt;p&gt;Instead of integrating APIs and custom complex code, MCP gives you a standard way for models to talk to tools and data sources. That means less ‚Äúreinventing the wheel‚Äù and more focusing on the workflow you actually care about.&lt;/p&gt; &lt;p&gt;What really clicked for me was looking at the servers people are already building. Here are 10 MCP servers that stood out:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;GitHub ‚Äì automate repo tasks and code reviews.&lt;/li&gt; &lt;li&gt;BrightData ‚Äì web scraping + real-time data feeds.&lt;/li&gt; &lt;li&gt;GibsonAI ‚Äì serverless SQL DB management with context.&lt;/li&gt; &lt;li&gt;Notion ‚Äì workspace + database automation.&lt;/li&gt; &lt;li&gt;Docker Hub ‚Äì container + DevOps workflows.&lt;/li&gt; &lt;li&gt;Browserbase ‚Äì browser control for testing/automation.&lt;/li&gt; &lt;li&gt;Context7 ‚Äì live code examples + docs.&lt;/li&gt; &lt;li&gt;Figma ‚Äì design-to-code integrations.&lt;/li&gt; &lt;li&gt;Reddit ‚Äì fetch/analyze Reddit data.&lt;/li&gt; &lt;li&gt;Sequential Thinking ‚Äì improves reasoning + planning loops.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The thing that surprised me most: it‚Äôs not just ‚Äúconnectors.‚Äù Some of these (like Sequential Thinking) actually expand what agents can do by improving their reasoning process.&lt;/p&gt; &lt;p&gt;I wrote up a more detailed breakdown with setup notes here if you want to dig in: &lt;a href="https://mranand.substack.com/p/model-context-protocol-mcp-10-must"&gt;10 MCP Servers for Developers&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If you're using other useful MCP servers, please share!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/codes_astro"&gt; /u/codes_astro &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1n7bo3j/10_mcp_servers_that_actually_make_agents_useful/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1n7bo3j/10_mcp_servers_that_actually_make_agents_useful/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1n7bo3j/10_mcp_servers_that_actually_make_agents_useful/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2025-09-03T10:59:07+00:00</published>
  </entry>
  <entry>
    <id>t3_1h7pl2v</id>
    <title>Awesome MCP Servers ‚Äì A curated list of awesome Model Context Protocol (MCP) servers</title>
    <updated>2024-12-06T01:23:42+00:00</updated>
    <author>
      <name>/u/punkpeye</name>
      <uri>https://old.reddit.com/user/punkpeye</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/mcp/comments/1h7pl2v/awesome_mcp_servers_a_curated_list_of_awesome/"&gt; &lt;img alt="Awesome MCP Servers ‚Äì A curated list of awesome Model Context Protocol (MCP) servers" src="https://external-preview.redd.it/BlNcrgap-6pz7IdUsbomFSVuqp_BB8tTUEFVIk6by18.jpg?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=f25629e364c60f72e8d88ce33c5b1f90a326c065" title="Awesome MCP Servers ‚Äì A curated list of awesome Model Context Protocol (MCP) servers" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/punkpeye"&gt; /u/punkpeye &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://github.com/punkpeye/awesome-mcp-servers/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1h7pl2v/awesome_mcp_servers_a_curated_list_of_awesome/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1h7pl2v/awesome_mcp_servers_a_curated_list_of_awesome/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2024-12-06T01:23:42+00:00</published>
  </entry>
  <entry>
    <id>t3_1h7qe88</id>
    <title>Join the Model Context Protocol Discord Server!</title>
    <updated>2024-12-06T02:04:10+00:00</updated>
    <author>
      <name>/u/punkpeye</name>
      <uri>https://old.reddit.com/user/punkpeye</uri>
    </author>
    <content type="html">&amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/punkpeye"&gt; /u/punkpeye &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://glama.ai/mcp/discord"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/mcp/comments/1h7qe88/join_the_model_context_protocol_discord_server/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/mcp/comments/1h7qe88/join_the_model_context_protocol_discord_server/"/>
    <category term="mcp" label="r/mcp"/>
    <published>2024-12-06T02:04:10+00:00</published>
  </entry>
</feed>
